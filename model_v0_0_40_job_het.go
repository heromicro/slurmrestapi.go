/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040JobHet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040JobHet{}

// V0040JobHet struct for V0040JobHet
type V0040JobHet struct {
	JobId *int32 `json:"job_id,omitempty"`
	JobOffset *V0040Uint32NoVal `json:"job_offset,omitempty"`
}

// NewV0040JobHet instantiates a new V0040JobHet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040JobHet() *V0040JobHet {
	this := V0040JobHet{}
	return &this
}

// NewV0040JobHetWithDefaults instantiates a new V0040JobHet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040JobHetWithDefaults() *V0040JobHet {
	this := V0040JobHet{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *V0040JobHet) GetJobId() int32 {
	if o == nil || IsNil(o.JobId) {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobHet) GetJobIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *V0040JobHet) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *V0040JobHet) SetJobId(v int32) {
	o.JobId = &v
}

// GetJobOffset returns the JobOffset field value if set, zero value otherwise.
func (o *V0040JobHet) GetJobOffset() V0040Uint32NoVal {
	if o == nil || IsNil(o.JobOffset) {
		var ret V0040Uint32NoVal
		return ret
	}
	return *o.JobOffset
}

// GetJobOffsetOk returns a tuple with the JobOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobHet) GetJobOffsetOk() (*V0040Uint32NoVal, bool) {
	if o == nil || IsNil(o.JobOffset) {
		return nil, false
	}
	return o.JobOffset, true
}

// HasJobOffset returns a boolean if a field has been set.
func (o *V0040JobHet) HasJobOffset() bool {
	if o != nil && !IsNil(o.JobOffset) {
		return true
	}

	return false
}

// SetJobOffset gets a reference to the given V0040Uint32NoVal and assigns it to the JobOffset field.
func (o *V0040JobHet) SetJobOffset(v V0040Uint32NoVal) {
	o.JobOffset = &v
}

func (o V0040JobHet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040JobHet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.JobOffset) {
		toSerialize["job_offset"] = o.JobOffset
	}
	return toSerialize, nil
}

type NullableV0040JobHet struct {
	value *V0040JobHet
	isSet bool
}

func (v NullableV0040JobHet) Get() *V0040JobHet {
	return v.value
}

func (v *NullableV0040JobHet) Set(val *V0040JobHet) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040JobHet) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040JobHet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040JobHet(val *V0040JobHet) *NullableV0040JobHet {
	return &NullableV0040JobHet{value: val, isSet: true}
}

func (v NullableV0040JobHet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040JobHet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


