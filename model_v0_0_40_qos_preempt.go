/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.40
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040QosPreempt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040QosPreempt{}

// V0040QosPreempt struct for V0040QosPreempt
type V0040QosPreempt struct {
	List []string `json:"list,omitempty"`
	Mode []string `json:"mode,omitempty"`
	ExemptTime *V0040Uint32NoVal `json:"exempt_time,omitempty"`
}

// NewV0040QosPreempt instantiates a new V0040QosPreempt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040QosPreempt() *V0040QosPreempt {
	this := V0040QosPreempt{}
	return &this
}

// NewV0040QosPreemptWithDefaults instantiates a new V0040QosPreempt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040QosPreemptWithDefaults() *V0040QosPreempt {
	this := V0040QosPreempt{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *V0040QosPreempt) GetList() []string {
	if o == nil || IsNil(o.List) {
		var ret []string
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040QosPreempt) GetListOk() ([]string, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *V0040QosPreempt) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []string and assigns it to the List field.
func (o *V0040QosPreempt) SetList(v []string) {
	o.List = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *V0040QosPreempt) GetMode() []string {
	if o == nil || IsNil(o.Mode) {
		var ret []string
		return ret
	}
	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040QosPreempt) GetModeOk() ([]string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *V0040QosPreempt) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given []string and assigns it to the Mode field.
func (o *V0040QosPreempt) SetMode(v []string) {
	o.Mode = v
}

// GetExemptTime returns the ExemptTime field value if set, zero value otherwise.
func (o *V0040QosPreempt) GetExemptTime() V0040Uint32NoVal {
	if o == nil || IsNil(o.ExemptTime) {
		var ret V0040Uint32NoVal
		return ret
	}
	return *o.ExemptTime
}

// GetExemptTimeOk returns a tuple with the ExemptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040QosPreempt) GetExemptTimeOk() (*V0040Uint32NoVal, bool) {
	if o == nil || IsNil(o.ExemptTime) {
		return nil, false
	}
	return o.ExemptTime, true
}

// HasExemptTime returns a boolean if a field has been set.
func (o *V0040QosPreempt) HasExemptTime() bool {
	if o != nil && !IsNil(o.ExemptTime) {
		return true
	}

	return false
}

// SetExemptTime gets a reference to the given V0040Uint32NoVal and assigns it to the ExemptTime field.
func (o *V0040QosPreempt) SetExemptTime(v V0040Uint32NoVal) {
	o.ExemptTime = &v
}

func (o V0040QosPreempt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040QosPreempt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.ExemptTime) {
		toSerialize["exempt_time"] = o.ExemptTime
	}
	return toSerialize, nil
}

type NullableV0040QosPreempt struct {
	value *V0040QosPreempt
	isSet bool
}

func (v NullableV0040QosPreempt) Get() *V0040QosPreempt {
	return v.value
}

func (v *NullableV0040QosPreempt) Set(val *V0040QosPreempt) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040QosPreempt) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040QosPreempt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040QosPreempt(val *V0040QosPreempt) *NullableV0040QosPreempt {
	return &NullableV0040QosPreempt{value: val, isSet: true}
}

func (v NullableV0040QosPreempt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040QosPreempt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


