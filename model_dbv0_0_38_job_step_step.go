/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.38
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038JobStepStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038JobStepStep{}

// Dbv0038JobStepStep Step details
type Dbv0038JobStepStep struct {
	// Parent job id
	JobId *int32 `json:"job_id,omitempty"`
	Het *Dbv0038JobStepStepHet `json:"het,omitempty"`
	// Step id
	Id *string `json:"id,omitempty"`
	// Step name
	Name *string `json:"name,omitempty"`
}

// NewDbv0038JobStepStep instantiates a new Dbv0038JobStepStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038JobStepStep() *Dbv0038JobStepStep {
	this := Dbv0038JobStepStep{}
	return &this
}

// NewDbv0038JobStepStepWithDefaults instantiates a new Dbv0038JobStepStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038JobStepStepWithDefaults() *Dbv0038JobStepStep {
	this := Dbv0038JobStepStep{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *Dbv0038JobStepStep) GetJobId() int32 {
	if o == nil || IsNil(o.JobId) {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepStep) GetJobIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *Dbv0038JobStepStep) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *Dbv0038JobStepStep) SetJobId(v int32) {
	o.JobId = &v
}

// GetHet returns the Het field value if set, zero value otherwise.
func (o *Dbv0038JobStepStep) GetHet() Dbv0038JobStepStepHet {
	if o == nil || IsNil(o.Het) {
		var ret Dbv0038JobStepStepHet
		return ret
	}
	return *o.Het
}

// GetHetOk returns a tuple with the Het field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepStep) GetHetOk() (*Dbv0038JobStepStepHet, bool) {
	if o == nil || IsNil(o.Het) {
		return nil, false
	}
	return o.Het, true
}

// HasHet returns a boolean if a field has been set.
func (o *Dbv0038JobStepStep) HasHet() bool {
	if o != nil && !IsNil(o.Het) {
		return true
	}

	return false
}

// SetHet gets a reference to the given Dbv0038JobStepStepHet and assigns it to the Het field.
func (o *Dbv0038JobStepStep) SetHet(v Dbv0038JobStepStepHet) {
	o.Het = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Dbv0038JobStepStep) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepStep) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Dbv0038JobStepStep) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Dbv0038JobStepStep) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Dbv0038JobStepStep) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepStep) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Dbv0038JobStepStep) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Dbv0038JobStepStep) SetName(v string) {
	o.Name = &v
}

func (o Dbv0038JobStepStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038JobStepStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.Het) {
		toSerialize["het"] = o.Het
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableDbv0038JobStepStep struct {
	value *Dbv0038JobStepStep
	isSet bool
}

func (v NullableDbv0038JobStepStep) Get() *Dbv0038JobStepStep {
	return v.value
}

func (v *NullableDbv0038JobStepStep) Set(val *Dbv0038JobStepStep) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038JobStepStep) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038JobStepStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038JobStepStep(val *Dbv0038JobStepStep) *NullableDbv0038JobStepStep {
	return &NullableDbv0038JobStepStep{value: val, isSet: true}
}

func (v NullableDbv0038JobStepStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038JobStepStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


