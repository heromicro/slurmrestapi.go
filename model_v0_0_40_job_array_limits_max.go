/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.40
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040JobArrayLimitsMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040JobArrayLimitsMax{}

// V0040JobArrayLimitsMax struct for V0040JobArrayLimitsMax
type V0040JobArrayLimitsMax struct {
	Running *V0040JobArrayLimitsMaxRunning `json:"running,omitempty"`
}

// NewV0040JobArrayLimitsMax instantiates a new V0040JobArrayLimitsMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040JobArrayLimitsMax() *V0040JobArrayLimitsMax {
	this := V0040JobArrayLimitsMax{}
	return &this
}

// NewV0040JobArrayLimitsMaxWithDefaults instantiates a new V0040JobArrayLimitsMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040JobArrayLimitsMaxWithDefaults() *V0040JobArrayLimitsMax {
	this := V0040JobArrayLimitsMax{}
	return &this
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *V0040JobArrayLimitsMax) GetRunning() V0040JobArrayLimitsMaxRunning {
	if o == nil || IsNil(o.Running) {
		var ret V0040JobArrayLimitsMaxRunning
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobArrayLimitsMax) GetRunningOk() (*V0040JobArrayLimitsMaxRunning, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *V0040JobArrayLimitsMax) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given V0040JobArrayLimitsMaxRunning and assigns it to the Running field.
func (o *V0040JobArrayLimitsMax) SetRunning(v V0040JobArrayLimitsMaxRunning) {
	o.Running = &v
}

func (o V0040JobArrayLimitsMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040JobArrayLimitsMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	return toSerialize, nil
}

type NullableV0040JobArrayLimitsMax struct {
	value *V0040JobArrayLimitsMax
	isSet bool
}

func (v NullableV0040JobArrayLimitsMax) Get() *V0040JobArrayLimitsMax {
	return v.value
}

func (v *NullableV0040JobArrayLimitsMax) Set(val *V0040JobArrayLimitsMax) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040JobArrayLimitsMax) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040JobArrayLimitsMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040JobArrayLimitsMax(val *V0040JobArrayLimitsMax) *NullableV0040JobArrayLimitsMax {
	return &NullableV0040JobArrayLimitsMax{value: val, isSet: true}
}

func (v NullableV0040JobArrayLimitsMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040JobArrayLimitsMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


