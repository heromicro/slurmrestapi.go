/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040StepTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040StepTime{}

// V0040StepTime struct for V0040StepTime
type V0040StepTime struct {
	Elapsed *int32 `json:"elapsed,omitempty"`
	End *V0040Uint64NoVal `json:"end,omitempty"`
	Start *V0040Uint64NoVal `json:"start,omitempty"`
	Suspended *int32 `json:"suspended,omitempty"`
	System *V0040StepTimeSystem `json:"system,omitempty"`
	Total *V0040StepTimeSystem `json:"total,omitempty"`
	User *V0040StepTimeSystem `json:"user,omitempty"`
}

// NewV0040StepTime instantiates a new V0040StepTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040StepTime() *V0040StepTime {
	this := V0040StepTime{}
	return &this
}

// NewV0040StepTimeWithDefaults instantiates a new V0040StepTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040StepTimeWithDefaults() *V0040StepTime {
	this := V0040StepTime{}
	return &this
}

// GetElapsed returns the Elapsed field value if set, zero value otherwise.
func (o *V0040StepTime) GetElapsed() int32 {
	if o == nil || IsNil(o.Elapsed) {
		var ret int32
		return ret
	}
	return *o.Elapsed
}

// GetElapsedOk returns a tuple with the Elapsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetElapsedOk() (*int32, bool) {
	if o == nil || IsNil(o.Elapsed) {
		return nil, false
	}
	return o.Elapsed, true
}

// HasElapsed returns a boolean if a field has been set.
func (o *V0040StepTime) HasElapsed() bool {
	if o != nil && !IsNil(o.Elapsed) {
		return true
	}

	return false
}

// SetElapsed gets a reference to the given int32 and assigns it to the Elapsed field.
func (o *V0040StepTime) SetElapsed(v int32) {
	o.Elapsed = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *V0040StepTime) GetEnd() V0040Uint64NoVal {
	if o == nil || IsNil(o.End) {
		var ret V0040Uint64NoVal
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetEndOk() (*V0040Uint64NoVal, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *V0040StepTime) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given V0040Uint64NoVal and assigns it to the End field.
func (o *V0040StepTime) SetEnd(v V0040Uint64NoVal) {
	o.End = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *V0040StepTime) GetStart() V0040Uint64NoVal {
	if o == nil || IsNil(o.Start) {
		var ret V0040Uint64NoVal
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetStartOk() (*V0040Uint64NoVal, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *V0040StepTime) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given V0040Uint64NoVal and assigns it to the Start field.
func (o *V0040StepTime) SetStart(v V0040Uint64NoVal) {
	o.Start = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *V0040StepTime) GetSuspended() int32 {
	if o == nil || IsNil(o.Suspended) {
		var ret int32
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetSuspendedOk() (*int32, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *V0040StepTime) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given int32 and assigns it to the Suspended field.
func (o *V0040StepTime) SetSuspended(v int32) {
	o.Suspended = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *V0040StepTime) GetSystem() V0040StepTimeSystem {
	if o == nil || IsNil(o.System) {
		var ret V0040StepTimeSystem
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetSystemOk() (*V0040StepTimeSystem, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *V0040StepTime) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given V0040StepTimeSystem and assigns it to the System field.
func (o *V0040StepTime) SetSystem(v V0040StepTimeSystem) {
	o.System = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *V0040StepTime) GetTotal() V0040StepTimeSystem {
	if o == nil || IsNil(o.Total) {
		var ret V0040StepTimeSystem
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetTotalOk() (*V0040StepTimeSystem, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *V0040StepTime) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given V0040StepTimeSystem and assigns it to the Total field.
func (o *V0040StepTime) SetTotal(v V0040StepTimeSystem) {
	o.Total = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *V0040StepTime) GetUser() V0040StepTimeSystem {
	if o == nil || IsNil(o.User) {
		var ret V0040StepTimeSystem
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040StepTime) GetUserOk() (*V0040StepTimeSystem, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *V0040StepTime) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given V0040StepTimeSystem and assigns it to the User field.
func (o *V0040StepTime) SetUser(v V0040StepTimeSystem) {
	o.User = &v
}

func (o V0040StepTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040StepTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Elapsed) {
		toSerialize["elapsed"] = o.Elapsed
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableV0040StepTime struct {
	value *V0040StepTime
	isSet bool
}

func (v NullableV0040StepTime) Get() *V0040StepTime {
	return v.value
}

func (v *NullableV0040StepTime) Set(val *V0040StepTime) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040StepTime) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040StepTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040StepTime(val *V0040StepTime) *NullableV0040StepTime {
	return &NullableV0040StepTime{value: val, isSet: true}
}

func (v NullableV0040StepTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040StepTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


