/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037DiagStatisticsRPCsInnerTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037DiagStatisticsRPCsInnerTime{}

// Dbv0037DiagStatisticsRPCsInnerTime Time values
type Dbv0037DiagStatisticsRPCsInnerTime struct {
	// Average time spent processing this RPC type
	Average *int32 `json:"average,omitempty"`
	// Total time spent processing this RPC type
	Total *int32 `json:"total,omitempty"`
}

// NewDbv0037DiagStatisticsRPCsInnerTime instantiates a new Dbv0037DiagStatisticsRPCsInnerTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037DiagStatisticsRPCsInnerTime() *Dbv0037DiagStatisticsRPCsInnerTime {
	this := Dbv0037DiagStatisticsRPCsInnerTime{}
	return &this
}

// NewDbv0037DiagStatisticsRPCsInnerTimeWithDefaults instantiates a new Dbv0037DiagStatisticsRPCsInnerTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037DiagStatisticsRPCsInnerTimeWithDefaults() *Dbv0037DiagStatisticsRPCsInnerTime {
	this := Dbv0037DiagStatisticsRPCsInnerTime{}
	return &this
}

// GetAverage returns the Average field value if set, zero value otherwise.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) GetAverage() int32 {
	if o == nil || IsNil(o.Average) {
		var ret int32
		return ret
	}
	return *o.Average
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) GetAverageOk() (*int32, bool) {
	if o == nil || IsNil(o.Average) {
		return nil, false
	}
	return o.Average, true
}

// HasAverage returns a boolean if a field has been set.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) HasAverage() bool {
	if o != nil && !IsNil(o.Average) {
		return true
	}

	return false
}

// SetAverage gets a reference to the given int32 and assigns it to the Average field.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) SetAverage(v int32) {
	o.Average = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *Dbv0037DiagStatisticsRPCsInnerTime) SetTotal(v int32) {
	o.Total = &v
}

func (o Dbv0037DiagStatisticsRPCsInnerTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037DiagStatisticsRPCsInnerTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Average) {
		toSerialize["average"] = o.Average
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableDbv0037DiagStatisticsRPCsInnerTime struct {
	value *Dbv0037DiagStatisticsRPCsInnerTime
	isSet bool
}

func (v NullableDbv0037DiagStatisticsRPCsInnerTime) Get() *Dbv0037DiagStatisticsRPCsInnerTime {
	return v.value
}

func (v *NullableDbv0037DiagStatisticsRPCsInnerTime) Set(val *Dbv0037DiagStatisticsRPCsInnerTime) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037DiagStatisticsRPCsInnerTime) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037DiagStatisticsRPCsInnerTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037DiagStatisticsRPCsInnerTime(val *Dbv0037DiagStatisticsRPCsInnerTime) *NullableDbv0037DiagStatisticsRPCsInnerTime {
	return &NullableDbv0037DiagStatisticsRPCsInnerTime{value: val, isSet: true}
}

func (v NullableDbv0037DiagStatisticsRPCsInnerTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037DiagStatisticsRPCsInnerTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


