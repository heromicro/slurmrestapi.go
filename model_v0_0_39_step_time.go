/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039StepTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039StepTime{}

// V0039StepTime struct for V0039StepTime
type V0039StepTime struct {
	User *V0039StepTimeUser `json:"user,omitempty"`
}

// NewV0039StepTime instantiates a new V0039StepTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039StepTime() *V0039StepTime {
	this := V0039StepTime{}
	return &this
}

// NewV0039StepTimeWithDefaults instantiates a new V0039StepTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039StepTimeWithDefaults() *V0039StepTime {
	this := V0039StepTime{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *V0039StepTime) GetUser() V0039StepTimeUser {
	if o == nil || IsNil(o.User) {
		var ret V0039StepTimeUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StepTime) GetUserOk() (*V0039StepTimeUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *V0039StepTime) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given V0039StepTimeUser and assigns it to the User field.
func (o *V0039StepTime) SetUser(v V0039StepTimeUser) {
	o.User = &v
}

func (o V0039StepTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039StepTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableV0039StepTime struct {
	value *V0039StepTime
	isSet bool
}

func (v NullableV0039StepTime) Get() *V0039StepTime {
	return v.value
}

func (v *NullableV0039StepTime) Set(val *V0039StepTime) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039StepTime) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039StepTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039StepTime(val *V0039StepTime) *NullableV0039StepTime {
	return &NullableV0039StepTime{value: val, isSet: true}
}

func (v NullableV0039StepTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039StepTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


