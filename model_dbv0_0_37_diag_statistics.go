/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037DiagStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037DiagStatistics{}

// Dbv0037DiagStatistics dictionary of Slurmdb statistics
type Dbv0037DiagStatistics struct {
	// Unix timestamp of start time
	TimeStart *int32 `json:"time_start,omitempty"`
	Rollups []Dbv0037DiagStatisticsRollupsInner `json:"rollups,omitempty"`
	RPCs []Dbv0037DiagStatisticsRPCsInner `json:"RPCs,omitempty"`
	Users []Dbv0037DiagStatisticsUsersInner `json:"users,omitempty"`
}

// NewDbv0037DiagStatistics instantiates a new Dbv0037DiagStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037DiagStatistics() *Dbv0037DiagStatistics {
	this := Dbv0037DiagStatistics{}
	return &this
}

// NewDbv0037DiagStatisticsWithDefaults instantiates a new Dbv0037DiagStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037DiagStatisticsWithDefaults() *Dbv0037DiagStatistics {
	this := Dbv0037DiagStatistics{}
	return &this
}

// GetTimeStart returns the TimeStart field value if set, zero value otherwise.
func (o *Dbv0037DiagStatistics) GetTimeStart() int32 {
	if o == nil || IsNil(o.TimeStart) {
		var ret int32
		return ret
	}
	return *o.TimeStart
}

// GetTimeStartOk returns a tuple with the TimeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatistics) GetTimeStartOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeStart) {
		return nil, false
	}
	return o.TimeStart, true
}

// HasTimeStart returns a boolean if a field has been set.
func (o *Dbv0037DiagStatistics) HasTimeStart() bool {
	if o != nil && !IsNil(o.TimeStart) {
		return true
	}

	return false
}

// SetTimeStart gets a reference to the given int32 and assigns it to the TimeStart field.
func (o *Dbv0037DiagStatistics) SetTimeStart(v int32) {
	o.TimeStart = &v
}

// GetRollups returns the Rollups field value if set, zero value otherwise.
func (o *Dbv0037DiagStatistics) GetRollups() []Dbv0037DiagStatisticsRollupsInner {
	if o == nil || IsNil(o.Rollups) {
		var ret []Dbv0037DiagStatisticsRollupsInner
		return ret
	}
	return o.Rollups
}

// GetRollupsOk returns a tuple with the Rollups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatistics) GetRollupsOk() ([]Dbv0037DiagStatisticsRollupsInner, bool) {
	if o == nil || IsNil(o.Rollups) {
		return nil, false
	}
	return o.Rollups, true
}

// HasRollups returns a boolean if a field has been set.
func (o *Dbv0037DiagStatistics) HasRollups() bool {
	if o != nil && !IsNil(o.Rollups) {
		return true
	}

	return false
}

// SetRollups gets a reference to the given []Dbv0037DiagStatisticsRollupsInner and assigns it to the Rollups field.
func (o *Dbv0037DiagStatistics) SetRollups(v []Dbv0037DiagStatisticsRollupsInner) {
	o.Rollups = v
}

// GetRPCs returns the RPCs field value if set, zero value otherwise.
func (o *Dbv0037DiagStatistics) GetRPCs() []Dbv0037DiagStatisticsRPCsInner {
	if o == nil || IsNil(o.RPCs) {
		var ret []Dbv0037DiagStatisticsRPCsInner
		return ret
	}
	return o.RPCs
}

// GetRPCsOk returns a tuple with the RPCs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatistics) GetRPCsOk() ([]Dbv0037DiagStatisticsRPCsInner, bool) {
	if o == nil || IsNil(o.RPCs) {
		return nil, false
	}
	return o.RPCs, true
}

// HasRPCs returns a boolean if a field has been set.
func (o *Dbv0037DiagStatistics) HasRPCs() bool {
	if o != nil && !IsNil(o.RPCs) {
		return true
	}

	return false
}

// SetRPCs gets a reference to the given []Dbv0037DiagStatisticsRPCsInner and assigns it to the RPCs field.
func (o *Dbv0037DiagStatistics) SetRPCs(v []Dbv0037DiagStatisticsRPCsInner) {
	o.RPCs = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *Dbv0037DiagStatistics) GetUsers() []Dbv0037DiagStatisticsUsersInner {
	if o == nil || IsNil(o.Users) {
		var ret []Dbv0037DiagStatisticsUsersInner
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037DiagStatistics) GetUsersOk() ([]Dbv0037DiagStatisticsUsersInner, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *Dbv0037DiagStatistics) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []Dbv0037DiagStatisticsUsersInner and assigns it to the Users field.
func (o *Dbv0037DiagStatistics) SetUsers(v []Dbv0037DiagStatisticsUsersInner) {
	o.Users = v
}

func (o Dbv0037DiagStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037DiagStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeStart) {
		toSerialize["time_start"] = o.TimeStart
	}
	if !IsNil(o.Rollups) {
		toSerialize["rollups"] = o.Rollups
	}
	if !IsNil(o.RPCs) {
		toSerialize["RPCs"] = o.RPCs
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableDbv0037DiagStatistics struct {
	value *Dbv0037DiagStatistics
	isSet bool
}

func (v NullableDbv0037DiagStatistics) Get() *Dbv0037DiagStatistics {
	return v.value
}

func (v *NullableDbv0037DiagStatistics) Set(val *Dbv0037DiagStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037DiagStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037DiagStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037DiagStatistics(val *Dbv0037DiagStatistics) *NullableDbv0037DiagStatistics {
	return &NullableDbv0037DiagStatistics{value: val, isSet: true}
}

func (v NullableDbv0037DiagStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037DiagStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


