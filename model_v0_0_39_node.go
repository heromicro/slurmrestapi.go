/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039Node type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039Node{}

// V0039Node struct for V0039Node
type V0039Node struct {
	Architecture *string `json:"architecture,omitempty"`
	BurstbufferNetworkAddress *string `json:"burstbuffer_network_address,omitempty"`
	Boards *int32 `json:"boards,omitempty"`
	BootTime *int64 `json:"boot_time,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	Cores *int32 `json:"cores,omitempty"`
	SpecializedCores *int32 `json:"specialized_cores,omitempty"`
	CpuBinding *int32 `json:"cpu_binding,omitempty"`
	CpuLoad *V0039Uint32NoVal `json:"cpu_load,omitempty"`
	FreeMem *V0039Uint64NoVal `json:"free_mem,omitempty"`
	Cpus *int32 `json:"cpus,omitempty"`
	EffectiveCpus *int32 `json:"effective_cpus,omitempty"`
	SpecializedCpus *string `json:"specialized_cpus,omitempty"`
	Energy *V0039AcctGatherEnergy `json:"energy,omitempty"`
	ExternalSensors *V0039ExtSensorsData `json:"external_sensors,omitempty"`
	Extra *string `json:"extra,omitempty"`
	Power *V0039PowerMgmtData `json:"power,omitempty"`
	Features []string `json:"features,omitempty"`
	ActiveFeatures []string `json:"active_features,omitempty"`
	Gres *string `json:"gres,omitempty"`
	GresDrained *string `json:"gres_drained,omitempty"`
	GresUsed *string `json:"gres_used,omitempty"`
	LastBusy *int64 `json:"last_busy,omitempty"`
	McsLabel *string `json:"mcs_label,omitempty"`
	SpecializedMemory *int64 `json:"specialized_memory,omitempty"`
	Name *string `json:"name,omitempty"`
	NextStateAfterReboot []string `json:"next_state_after_reboot,omitempty"`
	Address *string `json:"address,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	State []string `json:"state,omitempty"`
	OperatingSystem *string `json:"operating_system,omitempty"`
	Owner *string `json:"owner,omitempty"`
	Partitions []string `json:"partitions,omitempty"`
	Port *int32 `json:"port,omitempty"`
	RealMemory *int64 `json:"real_memory,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Reason *string `json:"reason,omitempty"`
	ReasonChangedAt *int64 `json:"reason_changed_at,omitempty"`
	ReasonSetByUser *string `json:"reason_set_by_user,omitempty"`
	ResumeAfter *V0039Uint64NoVal `json:"resume_after,omitempty"`
	Reservation *string `json:"reservation,omitempty"`
	AllocMemory *int64 `json:"alloc_memory,omitempty"`
	AllocCpus *int32 `json:"alloc_cpus,omitempty"`
	AllocIdleCpus *int32 `json:"alloc_idle_cpus,omitempty"`
	TresUsed *string `json:"tres_used,omitempty"`
	TresWeighted *float64 `json:"tres_weighted,omitempty"`
	SlurmdStartTime *int64 `json:"slurmd_start_time,omitempty"`
	Sockets *int32 `json:"sockets,omitempty"`
	Threads *int32 `json:"threads,omitempty"`
	TemporaryDisk *int32 `json:"temporary_disk,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
	Tres *string `json:"tres,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV0039Node instantiates a new V0039Node object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039Node() *V0039Node {
	this := V0039Node{}
	return &this
}

// NewV0039NodeWithDefaults instantiates a new V0039Node object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039NodeWithDefaults() *V0039Node {
	this := V0039Node{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *V0039Node) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *V0039Node) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *V0039Node) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBurstbufferNetworkAddress returns the BurstbufferNetworkAddress field value if set, zero value otherwise.
func (o *V0039Node) GetBurstbufferNetworkAddress() string {
	if o == nil || IsNil(o.BurstbufferNetworkAddress) {
		var ret string
		return ret
	}
	return *o.BurstbufferNetworkAddress
}

// GetBurstbufferNetworkAddressOk returns a tuple with the BurstbufferNetworkAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetBurstbufferNetworkAddressOk() (*string, bool) {
	if o == nil || IsNil(o.BurstbufferNetworkAddress) {
		return nil, false
	}
	return o.BurstbufferNetworkAddress, true
}

// HasBurstbufferNetworkAddress returns a boolean if a field has been set.
func (o *V0039Node) HasBurstbufferNetworkAddress() bool {
	if o != nil && !IsNil(o.BurstbufferNetworkAddress) {
		return true
	}

	return false
}

// SetBurstbufferNetworkAddress gets a reference to the given string and assigns it to the BurstbufferNetworkAddress field.
func (o *V0039Node) SetBurstbufferNetworkAddress(v string) {
	o.BurstbufferNetworkAddress = &v
}

// GetBoards returns the Boards field value if set, zero value otherwise.
func (o *V0039Node) GetBoards() int32 {
	if o == nil || IsNil(o.Boards) {
		var ret int32
		return ret
	}
	return *o.Boards
}

// GetBoardsOk returns a tuple with the Boards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetBoardsOk() (*int32, bool) {
	if o == nil || IsNil(o.Boards) {
		return nil, false
	}
	return o.Boards, true
}

// HasBoards returns a boolean if a field has been set.
func (o *V0039Node) HasBoards() bool {
	if o != nil && !IsNil(o.Boards) {
		return true
	}

	return false
}

// SetBoards gets a reference to the given int32 and assigns it to the Boards field.
func (o *V0039Node) SetBoards(v int32) {
	o.Boards = &v
}

// GetBootTime returns the BootTime field value if set, zero value otherwise.
func (o *V0039Node) GetBootTime() int64 {
	if o == nil || IsNil(o.BootTime) {
		var ret int64
		return ret
	}
	return *o.BootTime
}

// GetBootTimeOk returns a tuple with the BootTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetBootTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.BootTime) {
		return nil, false
	}
	return o.BootTime, true
}

// HasBootTime returns a boolean if a field has been set.
func (o *V0039Node) HasBootTime() bool {
	if o != nil && !IsNil(o.BootTime) {
		return true
	}

	return false
}

// SetBootTime gets a reference to the given int64 and assigns it to the BootTime field.
func (o *V0039Node) SetBootTime(v int64) {
	o.BootTime = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *V0039Node) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *V0039Node) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *V0039Node) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *V0039Node) GetCores() int32 {
	if o == nil || IsNil(o.Cores) {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *V0039Node) HasCores() bool {
	if o != nil && !IsNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *V0039Node) SetCores(v int32) {
	o.Cores = &v
}

// GetSpecializedCores returns the SpecializedCores field value if set, zero value otherwise.
func (o *V0039Node) GetSpecializedCores() int32 {
	if o == nil || IsNil(o.SpecializedCores) {
		var ret int32
		return ret
	}
	return *o.SpecializedCores
}

// GetSpecializedCoresOk returns a tuple with the SpecializedCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetSpecializedCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.SpecializedCores) {
		return nil, false
	}
	return o.SpecializedCores, true
}

// HasSpecializedCores returns a boolean if a field has been set.
func (o *V0039Node) HasSpecializedCores() bool {
	if o != nil && !IsNil(o.SpecializedCores) {
		return true
	}

	return false
}

// SetSpecializedCores gets a reference to the given int32 and assigns it to the SpecializedCores field.
func (o *V0039Node) SetSpecializedCores(v int32) {
	o.SpecializedCores = &v
}

// GetCpuBinding returns the CpuBinding field value if set, zero value otherwise.
func (o *V0039Node) GetCpuBinding() int32 {
	if o == nil || IsNil(o.CpuBinding) {
		var ret int32
		return ret
	}
	return *o.CpuBinding
}

// GetCpuBindingOk returns a tuple with the CpuBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetCpuBindingOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuBinding) {
		return nil, false
	}
	return o.CpuBinding, true
}

// HasCpuBinding returns a boolean if a field has been set.
func (o *V0039Node) HasCpuBinding() bool {
	if o != nil && !IsNil(o.CpuBinding) {
		return true
	}

	return false
}

// SetCpuBinding gets a reference to the given int32 and assigns it to the CpuBinding field.
func (o *V0039Node) SetCpuBinding(v int32) {
	o.CpuBinding = &v
}

// GetCpuLoad returns the CpuLoad field value if set, zero value otherwise.
func (o *V0039Node) GetCpuLoad() V0039Uint32NoVal {
	if o == nil || IsNil(o.CpuLoad) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.CpuLoad
}

// GetCpuLoadOk returns a tuple with the CpuLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetCpuLoadOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.CpuLoad) {
		return nil, false
	}
	return o.CpuLoad, true
}

// HasCpuLoad returns a boolean if a field has been set.
func (o *V0039Node) HasCpuLoad() bool {
	if o != nil && !IsNil(o.CpuLoad) {
		return true
	}

	return false
}

// SetCpuLoad gets a reference to the given V0039Uint32NoVal and assigns it to the CpuLoad field.
func (o *V0039Node) SetCpuLoad(v V0039Uint32NoVal) {
	o.CpuLoad = &v
}

// GetFreeMem returns the FreeMem field value if set, zero value otherwise.
func (o *V0039Node) GetFreeMem() V0039Uint64NoVal {
	if o == nil || IsNil(o.FreeMem) {
		var ret V0039Uint64NoVal
		return ret
	}
	return *o.FreeMem
}

// GetFreeMemOk returns a tuple with the FreeMem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetFreeMemOk() (*V0039Uint64NoVal, bool) {
	if o == nil || IsNil(o.FreeMem) {
		return nil, false
	}
	return o.FreeMem, true
}

// HasFreeMem returns a boolean if a field has been set.
func (o *V0039Node) HasFreeMem() bool {
	if o != nil && !IsNil(o.FreeMem) {
		return true
	}

	return false
}

// SetFreeMem gets a reference to the given V0039Uint64NoVal and assigns it to the FreeMem field.
func (o *V0039Node) SetFreeMem(v V0039Uint64NoVal) {
	o.FreeMem = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *V0039Node) GetCpus() int32 {
	if o == nil || IsNil(o.Cpus) {
		var ret int32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *V0039Node) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int32 and assigns it to the Cpus field.
func (o *V0039Node) SetCpus(v int32) {
	o.Cpus = &v
}

// GetEffectiveCpus returns the EffectiveCpus field value if set, zero value otherwise.
func (o *V0039Node) GetEffectiveCpus() int32 {
	if o == nil || IsNil(o.EffectiveCpus) {
		var ret int32
		return ret
	}
	return *o.EffectiveCpus
}

// GetEffectiveCpusOk returns a tuple with the EffectiveCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetEffectiveCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectiveCpus) {
		return nil, false
	}
	return o.EffectiveCpus, true
}

// HasEffectiveCpus returns a boolean if a field has been set.
func (o *V0039Node) HasEffectiveCpus() bool {
	if o != nil && !IsNil(o.EffectiveCpus) {
		return true
	}

	return false
}

// SetEffectiveCpus gets a reference to the given int32 and assigns it to the EffectiveCpus field.
func (o *V0039Node) SetEffectiveCpus(v int32) {
	o.EffectiveCpus = &v
}

// GetSpecializedCpus returns the SpecializedCpus field value if set, zero value otherwise.
func (o *V0039Node) GetSpecializedCpus() string {
	if o == nil || IsNil(o.SpecializedCpus) {
		var ret string
		return ret
	}
	return *o.SpecializedCpus
}

// GetSpecializedCpusOk returns a tuple with the SpecializedCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetSpecializedCpusOk() (*string, bool) {
	if o == nil || IsNil(o.SpecializedCpus) {
		return nil, false
	}
	return o.SpecializedCpus, true
}

// HasSpecializedCpus returns a boolean if a field has been set.
func (o *V0039Node) HasSpecializedCpus() bool {
	if o != nil && !IsNil(o.SpecializedCpus) {
		return true
	}

	return false
}

// SetSpecializedCpus gets a reference to the given string and assigns it to the SpecializedCpus field.
func (o *V0039Node) SetSpecializedCpus(v string) {
	o.SpecializedCpus = &v
}

// GetEnergy returns the Energy field value if set, zero value otherwise.
func (o *V0039Node) GetEnergy() V0039AcctGatherEnergy {
	if o == nil || IsNil(o.Energy) {
		var ret V0039AcctGatherEnergy
		return ret
	}
	return *o.Energy
}

// GetEnergyOk returns a tuple with the Energy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetEnergyOk() (*V0039AcctGatherEnergy, bool) {
	if o == nil || IsNil(o.Energy) {
		return nil, false
	}
	return o.Energy, true
}

// HasEnergy returns a boolean if a field has been set.
func (o *V0039Node) HasEnergy() bool {
	if o != nil && !IsNil(o.Energy) {
		return true
	}

	return false
}

// SetEnergy gets a reference to the given V0039AcctGatherEnergy and assigns it to the Energy field.
func (o *V0039Node) SetEnergy(v V0039AcctGatherEnergy) {
	o.Energy = &v
}

// GetExternalSensors returns the ExternalSensors field value if set, zero value otherwise.
func (o *V0039Node) GetExternalSensors() V0039ExtSensorsData {
	if o == nil || IsNil(o.ExternalSensors) {
		var ret V0039ExtSensorsData
		return ret
	}
	return *o.ExternalSensors
}

// GetExternalSensorsOk returns a tuple with the ExternalSensors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetExternalSensorsOk() (*V0039ExtSensorsData, bool) {
	if o == nil || IsNil(o.ExternalSensors) {
		return nil, false
	}
	return o.ExternalSensors, true
}

// HasExternalSensors returns a boolean if a field has been set.
func (o *V0039Node) HasExternalSensors() bool {
	if o != nil && !IsNil(o.ExternalSensors) {
		return true
	}

	return false
}

// SetExternalSensors gets a reference to the given V0039ExtSensorsData and assigns it to the ExternalSensors field.
func (o *V0039Node) SetExternalSensors(v V0039ExtSensorsData) {
	o.ExternalSensors = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *V0039Node) GetExtra() string {
	if o == nil || IsNil(o.Extra) {
		var ret string
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetExtraOk() (*string, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *V0039Node) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given string and assigns it to the Extra field.
func (o *V0039Node) SetExtra(v string) {
	o.Extra = &v
}

// GetPower returns the Power field value if set, zero value otherwise.
func (o *V0039Node) GetPower() V0039PowerMgmtData {
	if o == nil || IsNil(o.Power) {
		var ret V0039PowerMgmtData
		return ret
	}
	return *o.Power
}

// GetPowerOk returns a tuple with the Power field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetPowerOk() (*V0039PowerMgmtData, bool) {
	if o == nil || IsNil(o.Power) {
		return nil, false
	}
	return o.Power, true
}

// HasPower returns a boolean if a field has been set.
func (o *V0039Node) HasPower() bool {
	if o != nil && !IsNil(o.Power) {
		return true
	}

	return false
}

// SetPower gets a reference to the given V0039PowerMgmtData and assigns it to the Power field.
func (o *V0039Node) SetPower(v V0039PowerMgmtData) {
	o.Power = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *V0039Node) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *V0039Node) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *V0039Node) SetFeatures(v []string) {
	o.Features = v
}

// GetActiveFeatures returns the ActiveFeatures field value if set, zero value otherwise.
func (o *V0039Node) GetActiveFeatures() []string {
	if o == nil || IsNil(o.ActiveFeatures) {
		var ret []string
		return ret
	}
	return o.ActiveFeatures
}

// GetActiveFeaturesOk returns a tuple with the ActiveFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetActiveFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.ActiveFeatures) {
		return nil, false
	}
	return o.ActiveFeatures, true
}

// HasActiveFeatures returns a boolean if a field has been set.
func (o *V0039Node) HasActiveFeatures() bool {
	if o != nil && !IsNil(o.ActiveFeatures) {
		return true
	}

	return false
}

// SetActiveFeatures gets a reference to the given []string and assigns it to the ActiveFeatures field.
func (o *V0039Node) SetActiveFeatures(v []string) {
	o.ActiveFeatures = v
}

// GetGres returns the Gres field value if set, zero value otherwise.
func (o *V0039Node) GetGres() string {
	if o == nil || IsNil(o.Gres) {
		var ret string
		return ret
	}
	return *o.Gres
}

// GetGresOk returns a tuple with the Gres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetGresOk() (*string, bool) {
	if o == nil || IsNil(o.Gres) {
		return nil, false
	}
	return o.Gres, true
}

// HasGres returns a boolean if a field has been set.
func (o *V0039Node) HasGres() bool {
	if o != nil && !IsNil(o.Gres) {
		return true
	}

	return false
}

// SetGres gets a reference to the given string and assigns it to the Gres field.
func (o *V0039Node) SetGres(v string) {
	o.Gres = &v
}

// GetGresDrained returns the GresDrained field value if set, zero value otherwise.
func (o *V0039Node) GetGresDrained() string {
	if o == nil || IsNil(o.GresDrained) {
		var ret string
		return ret
	}
	return *o.GresDrained
}

// GetGresDrainedOk returns a tuple with the GresDrained field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetGresDrainedOk() (*string, bool) {
	if o == nil || IsNil(o.GresDrained) {
		return nil, false
	}
	return o.GresDrained, true
}

// HasGresDrained returns a boolean if a field has been set.
func (o *V0039Node) HasGresDrained() bool {
	if o != nil && !IsNil(o.GresDrained) {
		return true
	}

	return false
}

// SetGresDrained gets a reference to the given string and assigns it to the GresDrained field.
func (o *V0039Node) SetGresDrained(v string) {
	o.GresDrained = &v
}

// GetGresUsed returns the GresUsed field value if set, zero value otherwise.
func (o *V0039Node) GetGresUsed() string {
	if o == nil || IsNil(o.GresUsed) {
		var ret string
		return ret
	}
	return *o.GresUsed
}

// GetGresUsedOk returns a tuple with the GresUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetGresUsedOk() (*string, bool) {
	if o == nil || IsNil(o.GresUsed) {
		return nil, false
	}
	return o.GresUsed, true
}

// HasGresUsed returns a boolean if a field has been set.
func (o *V0039Node) HasGresUsed() bool {
	if o != nil && !IsNil(o.GresUsed) {
		return true
	}

	return false
}

// SetGresUsed gets a reference to the given string and assigns it to the GresUsed field.
func (o *V0039Node) SetGresUsed(v string) {
	o.GresUsed = &v
}

// GetLastBusy returns the LastBusy field value if set, zero value otherwise.
func (o *V0039Node) GetLastBusy() int64 {
	if o == nil || IsNil(o.LastBusy) {
		var ret int64
		return ret
	}
	return *o.LastBusy
}

// GetLastBusyOk returns a tuple with the LastBusy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetLastBusyOk() (*int64, bool) {
	if o == nil || IsNil(o.LastBusy) {
		return nil, false
	}
	return o.LastBusy, true
}

// HasLastBusy returns a boolean if a field has been set.
func (o *V0039Node) HasLastBusy() bool {
	if o != nil && !IsNil(o.LastBusy) {
		return true
	}

	return false
}

// SetLastBusy gets a reference to the given int64 and assigns it to the LastBusy field.
func (o *V0039Node) SetLastBusy(v int64) {
	o.LastBusy = &v
}

// GetMcsLabel returns the McsLabel field value if set, zero value otherwise.
func (o *V0039Node) GetMcsLabel() string {
	if o == nil || IsNil(o.McsLabel) {
		var ret string
		return ret
	}
	return *o.McsLabel
}

// GetMcsLabelOk returns a tuple with the McsLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetMcsLabelOk() (*string, bool) {
	if o == nil || IsNil(o.McsLabel) {
		return nil, false
	}
	return o.McsLabel, true
}

// HasMcsLabel returns a boolean if a field has been set.
func (o *V0039Node) HasMcsLabel() bool {
	if o != nil && !IsNil(o.McsLabel) {
		return true
	}

	return false
}

// SetMcsLabel gets a reference to the given string and assigns it to the McsLabel field.
func (o *V0039Node) SetMcsLabel(v string) {
	o.McsLabel = &v
}

// GetSpecializedMemory returns the SpecializedMemory field value if set, zero value otherwise.
func (o *V0039Node) GetSpecializedMemory() int64 {
	if o == nil || IsNil(o.SpecializedMemory) {
		var ret int64
		return ret
	}
	return *o.SpecializedMemory
}

// GetSpecializedMemoryOk returns a tuple with the SpecializedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetSpecializedMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.SpecializedMemory) {
		return nil, false
	}
	return o.SpecializedMemory, true
}

// HasSpecializedMemory returns a boolean if a field has been set.
func (o *V0039Node) HasSpecializedMemory() bool {
	if o != nil && !IsNil(o.SpecializedMemory) {
		return true
	}

	return false
}

// SetSpecializedMemory gets a reference to the given int64 and assigns it to the SpecializedMemory field.
func (o *V0039Node) SetSpecializedMemory(v int64) {
	o.SpecializedMemory = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0039Node) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0039Node) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0039Node) SetName(v string) {
	o.Name = &v
}

// GetNextStateAfterReboot returns the NextStateAfterReboot field value if set, zero value otherwise.
func (o *V0039Node) GetNextStateAfterReboot() []string {
	if o == nil || IsNil(o.NextStateAfterReboot) {
		var ret []string
		return ret
	}
	return o.NextStateAfterReboot
}

// GetNextStateAfterRebootOk returns a tuple with the NextStateAfterReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetNextStateAfterRebootOk() ([]string, bool) {
	if o == nil || IsNil(o.NextStateAfterReboot) {
		return nil, false
	}
	return o.NextStateAfterReboot, true
}

// HasNextStateAfterReboot returns a boolean if a field has been set.
func (o *V0039Node) HasNextStateAfterReboot() bool {
	if o != nil && !IsNil(o.NextStateAfterReboot) {
		return true
	}

	return false
}

// SetNextStateAfterReboot gets a reference to the given []string and assigns it to the NextStateAfterReboot field.
func (o *V0039Node) SetNextStateAfterReboot(v []string) {
	o.NextStateAfterReboot = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V0039Node) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V0039Node) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V0039Node) SetAddress(v string) {
	o.Address = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V0039Node) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V0039Node) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V0039Node) SetHostname(v string) {
	o.Hostname = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V0039Node) GetState() []string {
	if o == nil || IsNil(o.State) {
		var ret []string
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetStateOk() ([]string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V0039Node) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given []string and assigns it to the State field.
func (o *V0039Node) SetState(v []string) {
	o.State = v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *V0039Node) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetOperatingSystemOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *V0039Node) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *V0039Node) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *V0039Node) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *V0039Node) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *V0039Node) SetOwner(v string) {
	o.Owner = &v
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *V0039Node) GetPartitions() []string {
	if o == nil || IsNil(o.Partitions) {
		var ret []string
		return ret
	}
	return o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetPartitionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Partitions) {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *V0039Node) HasPartitions() bool {
	if o != nil && !IsNil(o.Partitions) {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given []string and assigns it to the Partitions field.
func (o *V0039Node) SetPartitions(v []string) {
	o.Partitions = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V0039Node) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V0039Node) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V0039Node) SetPort(v int32) {
	o.Port = &v
}

// GetRealMemory returns the RealMemory field value if set, zero value otherwise.
func (o *V0039Node) GetRealMemory() int64 {
	if o == nil || IsNil(o.RealMemory) {
		var ret int64
		return ret
	}
	return *o.RealMemory
}

// GetRealMemoryOk returns a tuple with the RealMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetRealMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.RealMemory) {
		return nil, false
	}
	return o.RealMemory, true
}

// HasRealMemory returns a boolean if a field has been set.
func (o *V0039Node) HasRealMemory() bool {
	if o != nil && !IsNil(o.RealMemory) {
		return true
	}

	return false
}

// SetRealMemory gets a reference to the given int64 and assigns it to the RealMemory field.
func (o *V0039Node) SetRealMemory(v int64) {
	o.RealMemory = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V0039Node) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V0039Node) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V0039Node) SetComment(v string) {
	o.Comment = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V0039Node) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V0039Node) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V0039Node) SetReason(v string) {
	o.Reason = &v
}

// GetReasonChangedAt returns the ReasonChangedAt field value if set, zero value otherwise.
func (o *V0039Node) GetReasonChangedAt() int64 {
	if o == nil || IsNil(o.ReasonChangedAt) {
		var ret int64
		return ret
	}
	return *o.ReasonChangedAt
}

// GetReasonChangedAtOk returns a tuple with the ReasonChangedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetReasonChangedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ReasonChangedAt) {
		return nil, false
	}
	return o.ReasonChangedAt, true
}

// HasReasonChangedAt returns a boolean if a field has been set.
func (o *V0039Node) HasReasonChangedAt() bool {
	if o != nil && !IsNil(o.ReasonChangedAt) {
		return true
	}

	return false
}

// SetReasonChangedAt gets a reference to the given int64 and assigns it to the ReasonChangedAt field.
func (o *V0039Node) SetReasonChangedAt(v int64) {
	o.ReasonChangedAt = &v
}

// GetReasonSetByUser returns the ReasonSetByUser field value if set, zero value otherwise.
func (o *V0039Node) GetReasonSetByUser() string {
	if o == nil || IsNil(o.ReasonSetByUser) {
		var ret string
		return ret
	}
	return *o.ReasonSetByUser
}

// GetReasonSetByUserOk returns a tuple with the ReasonSetByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetReasonSetByUserOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonSetByUser) {
		return nil, false
	}
	return o.ReasonSetByUser, true
}

// HasReasonSetByUser returns a boolean if a field has been set.
func (o *V0039Node) HasReasonSetByUser() bool {
	if o != nil && !IsNil(o.ReasonSetByUser) {
		return true
	}

	return false
}

// SetReasonSetByUser gets a reference to the given string and assigns it to the ReasonSetByUser field.
func (o *V0039Node) SetReasonSetByUser(v string) {
	o.ReasonSetByUser = &v
}

// GetResumeAfter returns the ResumeAfter field value if set, zero value otherwise.
func (o *V0039Node) GetResumeAfter() V0039Uint64NoVal {
	if o == nil || IsNil(o.ResumeAfter) {
		var ret V0039Uint64NoVal
		return ret
	}
	return *o.ResumeAfter
}

// GetResumeAfterOk returns a tuple with the ResumeAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetResumeAfterOk() (*V0039Uint64NoVal, bool) {
	if o == nil || IsNil(o.ResumeAfter) {
		return nil, false
	}
	return o.ResumeAfter, true
}

// HasResumeAfter returns a boolean if a field has been set.
func (o *V0039Node) HasResumeAfter() bool {
	if o != nil && !IsNil(o.ResumeAfter) {
		return true
	}

	return false
}

// SetResumeAfter gets a reference to the given V0039Uint64NoVal and assigns it to the ResumeAfter field.
func (o *V0039Node) SetResumeAfter(v V0039Uint64NoVal) {
	o.ResumeAfter = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *V0039Node) GetReservation() string {
	if o == nil || IsNil(o.Reservation) {
		var ret string
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetReservationOk() (*string, bool) {
	if o == nil || IsNil(o.Reservation) {
		return nil, false
	}
	return o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *V0039Node) HasReservation() bool {
	if o != nil && !IsNil(o.Reservation) {
		return true
	}

	return false
}

// SetReservation gets a reference to the given string and assigns it to the Reservation field.
func (o *V0039Node) SetReservation(v string) {
	o.Reservation = &v
}

// GetAllocMemory returns the AllocMemory field value if set, zero value otherwise.
func (o *V0039Node) GetAllocMemory() int64 {
	if o == nil || IsNil(o.AllocMemory) {
		var ret int64
		return ret
	}
	return *o.AllocMemory
}

// GetAllocMemoryOk returns a tuple with the AllocMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetAllocMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocMemory) {
		return nil, false
	}
	return o.AllocMemory, true
}

// HasAllocMemory returns a boolean if a field has been set.
func (o *V0039Node) HasAllocMemory() bool {
	if o != nil && !IsNil(o.AllocMemory) {
		return true
	}

	return false
}

// SetAllocMemory gets a reference to the given int64 and assigns it to the AllocMemory field.
func (o *V0039Node) SetAllocMemory(v int64) {
	o.AllocMemory = &v
}

// GetAllocCpus returns the AllocCpus field value if set, zero value otherwise.
func (o *V0039Node) GetAllocCpus() int32 {
	if o == nil || IsNil(o.AllocCpus) {
		var ret int32
		return ret
	}
	return *o.AllocCpus
}

// GetAllocCpusOk returns a tuple with the AllocCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetAllocCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.AllocCpus) {
		return nil, false
	}
	return o.AllocCpus, true
}

// HasAllocCpus returns a boolean if a field has been set.
func (o *V0039Node) HasAllocCpus() bool {
	if o != nil && !IsNil(o.AllocCpus) {
		return true
	}

	return false
}

// SetAllocCpus gets a reference to the given int32 and assigns it to the AllocCpus field.
func (o *V0039Node) SetAllocCpus(v int32) {
	o.AllocCpus = &v
}

// GetAllocIdleCpus returns the AllocIdleCpus field value if set, zero value otherwise.
func (o *V0039Node) GetAllocIdleCpus() int32 {
	if o == nil || IsNil(o.AllocIdleCpus) {
		var ret int32
		return ret
	}
	return *o.AllocIdleCpus
}

// GetAllocIdleCpusOk returns a tuple with the AllocIdleCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetAllocIdleCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.AllocIdleCpus) {
		return nil, false
	}
	return o.AllocIdleCpus, true
}

// HasAllocIdleCpus returns a boolean if a field has been set.
func (o *V0039Node) HasAllocIdleCpus() bool {
	if o != nil && !IsNil(o.AllocIdleCpus) {
		return true
	}

	return false
}

// SetAllocIdleCpus gets a reference to the given int32 and assigns it to the AllocIdleCpus field.
func (o *V0039Node) SetAllocIdleCpus(v int32) {
	o.AllocIdleCpus = &v
}

// GetTresUsed returns the TresUsed field value if set, zero value otherwise.
func (o *V0039Node) GetTresUsed() string {
	if o == nil || IsNil(o.TresUsed) {
		var ret string
		return ret
	}
	return *o.TresUsed
}

// GetTresUsedOk returns a tuple with the TresUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetTresUsedOk() (*string, bool) {
	if o == nil || IsNil(o.TresUsed) {
		return nil, false
	}
	return o.TresUsed, true
}

// HasTresUsed returns a boolean if a field has been set.
func (o *V0039Node) HasTresUsed() bool {
	if o != nil && !IsNil(o.TresUsed) {
		return true
	}

	return false
}

// SetTresUsed gets a reference to the given string and assigns it to the TresUsed field.
func (o *V0039Node) SetTresUsed(v string) {
	o.TresUsed = &v
}

// GetTresWeighted returns the TresWeighted field value if set, zero value otherwise.
func (o *V0039Node) GetTresWeighted() float64 {
	if o == nil || IsNil(o.TresWeighted) {
		var ret float64
		return ret
	}
	return *o.TresWeighted
}

// GetTresWeightedOk returns a tuple with the TresWeighted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetTresWeightedOk() (*float64, bool) {
	if o == nil || IsNil(o.TresWeighted) {
		return nil, false
	}
	return o.TresWeighted, true
}

// HasTresWeighted returns a boolean if a field has been set.
func (o *V0039Node) HasTresWeighted() bool {
	if o != nil && !IsNil(o.TresWeighted) {
		return true
	}

	return false
}

// SetTresWeighted gets a reference to the given float64 and assigns it to the TresWeighted field.
func (o *V0039Node) SetTresWeighted(v float64) {
	o.TresWeighted = &v
}

// GetSlurmdStartTime returns the SlurmdStartTime field value if set, zero value otherwise.
func (o *V0039Node) GetSlurmdStartTime() int64 {
	if o == nil || IsNil(o.SlurmdStartTime) {
		var ret int64
		return ret
	}
	return *o.SlurmdStartTime
}

// GetSlurmdStartTimeOk returns a tuple with the SlurmdStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetSlurmdStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.SlurmdStartTime) {
		return nil, false
	}
	return o.SlurmdStartTime, true
}

// HasSlurmdStartTime returns a boolean if a field has been set.
func (o *V0039Node) HasSlurmdStartTime() bool {
	if o != nil && !IsNil(o.SlurmdStartTime) {
		return true
	}

	return false
}

// SetSlurmdStartTime gets a reference to the given int64 and assigns it to the SlurmdStartTime field.
func (o *V0039Node) SetSlurmdStartTime(v int64) {
	o.SlurmdStartTime = &v
}

// GetSockets returns the Sockets field value if set, zero value otherwise.
func (o *V0039Node) GetSockets() int32 {
	if o == nil || IsNil(o.Sockets) {
		var ret int32
		return ret
	}
	return *o.Sockets
}

// GetSocketsOk returns a tuple with the Sockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetSocketsOk() (*int32, bool) {
	if o == nil || IsNil(o.Sockets) {
		return nil, false
	}
	return o.Sockets, true
}

// HasSockets returns a boolean if a field has been set.
func (o *V0039Node) HasSockets() bool {
	if o != nil && !IsNil(o.Sockets) {
		return true
	}

	return false
}

// SetSockets gets a reference to the given int32 and assigns it to the Sockets field.
func (o *V0039Node) SetSockets(v int32) {
	o.Sockets = &v
}

// GetThreads returns the Threads field value if set, zero value otherwise.
func (o *V0039Node) GetThreads() int32 {
	if o == nil || IsNil(o.Threads) {
		var ret int32
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetThreadsOk() (*int32, bool) {
	if o == nil || IsNil(o.Threads) {
		return nil, false
	}
	return o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *V0039Node) HasThreads() bool {
	if o != nil && !IsNil(o.Threads) {
		return true
	}

	return false
}

// SetThreads gets a reference to the given int32 and assigns it to the Threads field.
func (o *V0039Node) SetThreads(v int32) {
	o.Threads = &v
}

// GetTemporaryDisk returns the TemporaryDisk field value if set, zero value otherwise.
func (o *V0039Node) GetTemporaryDisk() int32 {
	if o == nil || IsNil(o.TemporaryDisk) {
		var ret int32
		return ret
	}
	return *o.TemporaryDisk
}

// GetTemporaryDiskOk returns a tuple with the TemporaryDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetTemporaryDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.TemporaryDisk) {
		return nil, false
	}
	return o.TemporaryDisk, true
}

// HasTemporaryDisk returns a boolean if a field has been set.
func (o *V0039Node) HasTemporaryDisk() bool {
	if o != nil && !IsNil(o.TemporaryDisk) {
		return true
	}

	return false
}

// SetTemporaryDisk gets a reference to the given int32 and assigns it to the TemporaryDisk field.
func (o *V0039Node) SetTemporaryDisk(v int32) {
	o.TemporaryDisk = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *V0039Node) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *V0039Node) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *V0039Node) SetWeight(v int32) {
	o.Weight = &v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *V0039Node) GetTres() string {
	if o == nil || IsNil(o.Tres) {
		var ret string
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetTresOk() (*string, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *V0039Node) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given string and assigns it to the Tres field.
func (o *V0039Node) SetTres(v string) {
	o.Tres = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V0039Node) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039Node) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V0039Node) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V0039Node) SetVersion(v string) {
	o.Version = &v
}

func (o V0039Node) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039Node) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.BurstbufferNetworkAddress) {
		toSerialize["burstbuffer_network_address"] = o.BurstbufferNetworkAddress
	}
	if !IsNil(o.Boards) {
		toSerialize["boards"] = o.Boards
	}
	if !IsNil(o.BootTime) {
		toSerialize["boot_time"] = o.BootTime
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !IsNil(o.SpecializedCores) {
		toSerialize["specialized_cores"] = o.SpecializedCores
	}
	if !IsNil(o.CpuBinding) {
		toSerialize["cpu_binding"] = o.CpuBinding
	}
	if !IsNil(o.CpuLoad) {
		toSerialize["cpu_load"] = o.CpuLoad
	}
	if !IsNil(o.FreeMem) {
		toSerialize["free_mem"] = o.FreeMem
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.EffectiveCpus) {
		toSerialize["effective_cpus"] = o.EffectiveCpus
	}
	if !IsNil(o.SpecializedCpus) {
		toSerialize["specialized_cpus"] = o.SpecializedCpus
	}
	if !IsNil(o.Energy) {
		toSerialize["energy"] = o.Energy
	}
	if !IsNil(o.ExternalSensors) {
		toSerialize["external_sensors"] = o.ExternalSensors
	}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.Power) {
		toSerialize["power"] = o.Power
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.ActiveFeatures) {
		toSerialize["active_features"] = o.ActiveFeatures
	}
	if !IsNil(o.Gres) {
		toSerialize["gres"] = o.Gres
	}
	if !IsNil(o.GresDrained) {
		toSerialize["gres_drained"] = o.GresDrained
	}
	if !IsNil(o.GresUsed) {
		toSerialize["gres_used"] = o.GresUsed
	}
	if !IsNil(o.LastBusy) {
		toSerialize["last_busy"] = o.LastBusy
	}
	if !IsNil(o.McsLabel) {
		toSerialize["mcs_label"] = o.McsLabel
	}
	if !IsNil(o.SpecializedMemory) {
		toSerialize["specialized_memory"] = o.SpecializedMemory
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NextStateAfterReboot) {
		toSerialize["next_state_after_reboot"] = o.NextStateAfterReboot
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Partitions) {
		toSerialize["partitions"] = o.Partitions
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.RealMemory) {
		toSerialize["real_memory"] = o.RealMemory
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.ReasonChangedAt) {
		toSerialize["reason_changed_at"] = o.ReasonChangedAt
	}
	if !IsNil(o.ReasonSetByUser) {
		toSerialize["reason_set_by_user"] = o.ReasonSetByUser
	}
	if !IsNil(o.ResumeAfter) {
		toSerialize["resume_after"] = o.ResumeAfter
	}
	if !IsNil(o.Reservation) {
		toSerialize["reservation"] = o.Reservation
	}
	if !IsNil(o.AllocMemory) {
		toSerialize["alloc_memory"] = o.AllocMemory
	}
	if !IsNil(o.AllocCpus) {
		toSerialize["alloc_cpus"] = o.AllocCpus
	}
	if !IsNil(o.AllocIdleCpus) {
		toSerialize["alloc_idle_cpus"] = o.AllocIdleCpus
	}
	if !IsNil(o.TresUsed) {
		toSerialize["tres_used"] = o.TresUsed
	}
	if !IsNil(o.TresWeighted) {
		toSerialize["tres_weighted"] = o.TresWeighted
	}
	if !IsNil(o.SlurmdStartTime) {
		toSerialize["slurmd_start_time"] = o.SlurmdStartTime
	}
	if !IsNil(o.Sockets) {
		toSerialize["sockets"] = o.Sockets
	}
	if !IsNil(o.Threads) {
		toSerialize["threads"] = o.Threads
	}
	if !IsNil(o.TemporaryDisk) {
		toSerialize["temporary_disk"] = o.TemporaryDisk
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV0039Node struct {
	value *V0039Node
	isSet bool
}

func (v NullableV0039Node) Get() *V0039Node {
	return v.value
}

func (v *NullableV0039Node) Set(val *V0039Node) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039Node) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039Node) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039Node(val *V0039Node) *NullableV0039Node {
	return &NullableV0039Node{value: val, isSet: true}
}

func (v NullableV0039Node) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039Node) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


