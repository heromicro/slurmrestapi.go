/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039StepCPURequestedFrequency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039StepCPURequestedFrequency{}

// V0039StepCPURequestedFrequency struct for V0039StepCPURequestedFrequency
type V0039StepCPURequestedFrequency struct {
	Min *V0039Uint32NoVal `json:"min,omitempty"`
	Max *V0039Uint32NoVal `json:"max,omitempty"`
}

// NewV0039StepCPURequestedFrequency instantiates a new V0039StepCPURequestedFrequency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039StepCPURequestedFrequency() *V0039StepCPURequestedFrequency {
	this := V0039StepCPURequestedFrequency{}
	return &this
}

// NewV0039StepCPURequestedFrequencyWithDefaults instantiates a new V0039StepCPURequestedFrequency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039StepCPURequestedFrequencyWithDefaults() *V0039StepCPURequestedFrequency {
	this := V0039StepCPURequestedFrequency{}
	return &this
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *V0039StepCPURequestedFrequency) GetMin() V0039Uint32NoVal {
	if o == nil || IsNil(o.Min) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StepCPURequestedFrequency) GetMinOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *V0039StepCPURequestedFrequency) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given V0039Uint32NoVal and assigns it to the Min field.
func (o *V0039StepCPURequestedFrequency) SetMin(v V0039Uint32NoVal) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *V0039StepCPURequestedFrequency) GetMax() V0039Uint32NoVal {
	if o == nil || IsNil(o.Max) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StepCPURequestedFrequency) GetMaxOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *V0039StepCPURequestedFrequency) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given V0039Uint32NoVal and assigns it to the Max field.
func (o *V0039StepCPURequestedFrequency) SetMax(v V0039Uint32NoVal) {
	o.Max = &v
}

func (o V0039StepCPURequestedFrequency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039StepCPURequestedFrequency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

type NullableV0039StepCPURequestedFrequency struct {
	value *V0039StepCPURequestedFrequency
	isSet bool
}

func (v NullableV0039StepCPURequestedFrequency) Get() *V0039StepCPURequestedFrequency {
	return v.value
}

func (v *NullableV0039StepCPURequestedFrequency) Set(val *V0039StepCPURequestedFrequency) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039StepCPURequestedFrequency) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039StepCPURequestedFrequency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039StepCPURequestedFrequency(val *V0039StepCPURequestedFrequency) *NullableV0039StepCPURequestedFrequency {
	return &NullableV0039StepCPURequestedFrequency{value: val, isSet: true}
}

func (v NullableV0039StepCPURequestedFrequency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039StepCPURequestedFrequency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


