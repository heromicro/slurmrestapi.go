/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038QosLimitsMaxJobs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038QosLimitsMaxJobs{}

// Dbv0038QosLimitsMaxJobs Limits on jobs settings
type Dbv0038QosLimitsMaxJobs struct {
	ActiveJobs *Dbv0038QosLimitsMaxJobsActiveJobs `json:"active_jobs,omitempty"`
}

// NewDbv0038QosLimitsMaxJobs instantiates a new Dbv0038QosLimitsMaxJobs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038QosLimitsMaxJobs() *Dbv0038QosLimitsMaxJobs {
	this := Dbv0038QosLimitsMaxJobs{}
	return &this
}

// NewDbv0038QosLimitsMaxJobsWithDefaults instantiates a new Dbv0038QosLimitsMaxJobs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038QosLimitsMaxJobsWithDefaults() *Dbv0038QosLimitsMaxJobs {
	this := Dbv0038QosLimitsMaxJobs{}
	return &this
}

// GetActiveJobs returns the ActiveJobs field value if set, zero value otherwise.
func (o *Dbv0038QosLimitsMaxJobs) GetActiveJobs() Dbv0038QosLimitsMaxJobsActiveJobs {
	if o == nil || IsNil(o.ActiveJobs) {
		var ret Dbv0038QosLimitsMaxJobsActiveJobs
		return ret
	}
	return *o.ActiveJobs
}

// GetActiveJobsOk returns a tuple with the ActiveJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimitsMaxJobs) GetActiveJobsOk() (*Dbv0038QosLimitsMaxJobsActiveJobs, bool) {
	if o == nil || IsNil(o.ActiveJobs) {
		return nil, false
	}
	return o.ActiveJobs, true
}

// HasActiveJobs returns a boolean if a field has been set.
func (o *Dbv0038QosLimitsMaxJobs) HasActiveJobs() bool {
	if o != nil && !IsNil(o.ActiveJobs) {
		return true
	}

	return false
}

// SetActiveJobs gets a reference to the given Dbv0038QosLimitsMaxJobsActiveJobs and assigns it to the ActiveJobs field.
func (o *Dbv0038QosLimitsMaxJobs) SetActiveJobs(v Dbv0038QosLimitsMaxJobsActiveJobs) {
	o.ActiveJobs = &v
}

func (o Dbv0038QosLimitsMaxJobs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038QosLimitsMaxJobs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveJobs) {
		toSerialize["active_jobs"] = o.ActiveJobs
	}
	return toSerialize, nil
}

type NullableDbv0038QosLimitsMaxJobs struct {
	value *Dbv0038QosLimitsMaxJobs
	isSet bool
}

func (v NullableDbv0038QosLimitsMaxJobs) Get() *Dbv0038QosLimitsMaxJobs {
	return v.value
}

func (v *NullableDbv0038QosLimitsMaxJobs) Set(val *Dbv0038QosLimitsMaxJobs) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038QosLimitsMaxJobs) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038QosLimitsMaxJobs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038QosLimitsMaxJobs(val *Dbv0038QosLimitsMaxJobs) *NullableDbv0038QosLimitsMaxJobs {
	return &NullableDbv0038QosLimitsMaxJobs{value: val, isSet: true}
}

func (v NullableDbv0038QosLimitsMaxJobs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038QosLimitsMaxJobs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


