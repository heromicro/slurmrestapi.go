/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.38
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0038DiagRpcm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0038DiagRpcm{}

// V0038DiagRpcm struct for V0038DiagRpcm
type V0038DiagRpcm struct {
	// message type
	MessageType *string `json:"message_type,omitempty"`
	// message type id
	TypeId *int32 `json:"type_id,omitempty"`
	// rpc count
	Count *int32 `json:"count,omitempty"`
	// average time
	AverageTime *int32 `json:"average_time,omitempty"`
	// total time
	TotalTime *int32 `json:"total_time,omitempty"`
}

// NewV0038DiagRpcm instantiates a new V0038DiagRpcm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0038DiagRpcm() *V0038DiagRpcm {
	this := V0038DiagRpcm{}
	return &this
}

// NewV0038DiagRpcmWithDefaults instantiates a new V0038DiagRpcm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0038DiagRpcmWithDefaults() *V0038DiagRpcm {
	this := V0038DiagRpcm{}
	return &this
}

// GetMessageType returns the MessageType field value if set, zero value otherwise.
func (o *V0038DiagRpcm) GetMessageType() string {
	if o == nil || IsNil(o.MessageType) {
		var ret string
		return ret
	}
	return *o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0038DiagRpcm) GetMessageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MessageType) {
		return nil, false
	}
	return o.MessageType, true
}

// HasMessageType returns a boolean if a field has been set.
func (o *V0038DiagRpcm) HasMessageType() bool {
	if o != nil && !IsNil(o.MessageType) {
		return true
	}

	return false
}

// SetMessageType gets a reference to the given string and assigns it to the MessageType field.
func (o *V0038DiagRpcm) SetMessageType(v string) {
	o.MessageType = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *V0038DiagRpcm) GetTypeId() int32 {
	if o == nil || IsNil(o.TypeId) {
		var ret int32
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0038DiagRpcm) GetTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *V0038DiagRpcm) HasTypeId() bool {
	if o != nil && !IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given int32 and assigns it to the TypeId field.
func (o *V0038DiagRpcm) SetTypeId(v int32) {
	o.TypeId = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *V0038DiagRpcm) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0038DiagRpcm) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *V0038DiagRpcm) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *V0038DiagRpcm) SetCount(v int32) {
	o.Count = &v
}

// GetAverageTime returns the AverageTime field value if set, zero value otherwise.
func (o *V0038DiagRpcm) GetAverageTime() int32 {
	if o == nil || IsNil(o.AverageTime) {
		var ret int32
		return ret
	}
	return *o.AverageTime
}

// GetAverageTimeOk returns a tuple with the AverageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0038DiagRpcm) GetAverageTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AverageTime) {
		return nil, false
	}
	return o.AverageTime, true
}

// HasAverageTime returns a boolean if a field has been set.
func (o *V0038DiagRpcm) HasAverageTime() bool {
	if o != nil && !IsNil(o.AverageTime) {
		return true
	}

	return false
}

// SetAverageTime gets a reference to the given int32 and assigns it to the AverageTime field.
func (o *V0038DiagRpcm) SetAverageTime(v int32) {
	o.AverageTime = &v
}

// GetTotalTime returns the TotalTime field value if set, zero value otherwise.
func (o *V0038DiagRpcm) GetTotalTime() int32 {
	if o == nil || IsNil(o.TotalTime) {
		var ret int32
		return ret
	}
	return *o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0038DiagRpcm) GetTotalTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalTime) {
		return nil, false
	}
	return o.TotalTime, true
}

// HasTotalTime returns a boolean if a field has been set.
func (o *V0038DiagRpcm) HasTotalTime() bool {
	if o != nil && !IsNil(o.TotalTime) {
		return true
	}

	return false
}

// SetTotalTime gets a reference to the given int32 and assigns it to the TotalTime field.
func (o *V0038DiagRpcm) SetTotalTime(v int32) {
	o.TotalTime = &v
}

func (o V0038DiagRpcm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0038DiagRpcm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageType) {
		toSerialize["message_type"] = o.MessageType
	}
	if !IsNil(o.TypeId) {
		toSerialize["type_id"] = o.TypeId
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.AverageTime) {
		toSerialize["average_time"] = o.AverageTime
	}
	if !IsNil(o.TotalTime) {
		toSerialize["total_time"] = o.TotalTime
	}
	return toSerialize, nil
}

type NullableV0038DiagRpcm struct {
	value *V0038DiagRpcm
	isSet bool
}

func (v NullableV0038DiagRpcm) Get() *V0038DiagRpcm {
	return v.value
}

func (v *NullableV0038DiagRpcm) Set(val *V0038DiagRpcm) {
	v.value = val
	v.isSet = true
}

func (v NullableV0038DiagRpcm) IsSet() bool {
	return v.isSet
}

func (v *NullableV0038DiagRpcm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0038DiagRpcm(val *V0038DiagRpcm) *NullableV0038DiagRpcm {
	return &NullableV0038DiagRpcm{value: val, isSet: true}
}

func (v NullableV0038DiagRpcm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0038DiagRpcm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


