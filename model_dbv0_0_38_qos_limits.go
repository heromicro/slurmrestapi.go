/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.38
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038QosLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038QosLimits{}

// Dbv0038QosLimits Assigned limits
type Dbv0038QosLimits struct {
	// factor to apply to TRES count for associations using this QOS
	Factor *float32 `json:"factor,omitempty"`
	Max *Dbv0038QosLimitsMax `json:"max,omitempty"`
	Min *Dbv0038QosLimitsMin `json:"min,omitempty"`
}

// NewDbv0038QosLimits instantiates a new Dbv0038QosLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038QosLimits() *Dbv0038QosLimits {
	this := Dbv0038QosLimits{}
	return &this
}

// NewDbv0038QosLimitsWithDefaults instantiates a new Dbv0038QosLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038QosLimitsWithDefaults() *Dbv0038QosLimits {
	this := Dbv0038QosLimits{}
	return &this
}

// GetFactor returns the Factor field value if set, zero value otherwise.
func (o *Dbv0038QosLimits) GetFactor() float32 {
	if o == nil || IsNil(o.Factor) {
		var ret float32
		return ret
	}
	return *o.Factor
}

// GetFactorOk returns a tuple with the Factor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimits) GetFactorOk() (*float32, bool) {
	if o == nil || IsNil(o.Factor) {
		return nil, false
	}
	return o.Factor, true
}

// HasFactor returns a boolean if a field has been set.
func (o *Dbv0038QosLimits) HasFactor() bool {
	if o != nil && !IsNil(o.Factor) {
		return true
	}

	return false
}

// SetFactor gets a reference to the given float32 and assigns it to the Factor field.
func (o *Dbv0038QosLimits) SetFactor(v float32) {
	o.Factor = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *Dbv0038QosLimits) GetMax() Dbv0038QosLimitsMax {
	if o == nil || IsNil(o.Max) {
		var ret Dbv0038QosLimitsMax
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimits) GetMaxOk() (*Dbv0038QosLimitsMax, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *Dbv0038QosLimits) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given Dbv0038QosLimitsMax and assigns it to the Max field.
func (o *Dbv0038QosLimits) SetMax(v Dbv0038QosLimitsMax) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *Dbv0038QosLimits) GetMin() Dbv0038QosLimitsMin {
	if o == nil || IsNil(o.Min) {
		var ret Dbv0038QosLimitsMin
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimits) GetMinOk() (*Dbv0038QosLimitsMin, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *Dbv0038QosLimits) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given Dbv0038QosLimitsMin and assigns it to the Min field.
func (o *Dbv0038QosLimits) SetMin(v Dbv0038QosLimitsMin) {
	o.Min = &v
}

func (o Dbv0038QosLimits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038QosLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Factor) {
		toSerialize["factor"] = o.Factor
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	return toSerialize, nil
}

type NullableDbv0038QosLimits struct {
	value *Dbv0038QosLimits
	isSet bool
}

func (v NullableDbv0038QosLimits) Get() *Dbv0038QosLimits {
	return v.value
}

func (v *NullableDbv0038QosLimits) Set(val *Dbv0038QosLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038QosLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038QosLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038QosLimits(val *Dbv0038QosLimits) *NullableDbv0038QosLimits {
	return &NullableDbv0038QosLimits{value: val, isSet: true}
}

func (v NullableDbv0038QosLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038QosLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


