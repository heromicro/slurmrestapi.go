/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038QosLimitsMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038QosLimitsMax{}

// Dbv0038QosLimitsMax Limits on max settings
type Dbv0038QosLimitsMax struct {
	WallClock *Dbv0038QosLimitsMaxWallClock `json:"wall_clock,omitempty"`
	Jobs *Dbv0038QosLimitsMaxJobs `json:"jobs,omitempty"`
	Accruing *Dbv0038QosLimitsMaxAccruing `json:"accruing,omitempty"`
	Tres *Dbv0038QosLimitsMaxTres `json:"tres,omitempty"`
}

// NewDbv0038QosLimitsMax instantiates a new Dbv0038QosLimitsMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038QosLimitsMax() *Dbv0038QosLimitsMax {
	this := Dbv0038QosLimitsMax{}
	return &this
}

// NewDbv0038QosLimitsMaxWithDefaults instantiates a new Dbv0038QosLimitsMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038QosLimitsMaxWithDefaults() *Dbv0038QosLimitsMax {
	this := Dbv0038QosLimitsMax{}
	return &this
}

// GetWallClock returns the WallClock field value if set, zero value otherwise.
func (o *Dbv0038QosLimitsMax) GetWallClock() Dbv0038QosLimitsMaxWallClock {
	if o == nil || IsNil(o.WallClock) {
		var ret Dbv0038QosLimitsMaxWallClock
		return ret
	}
	return *o.WallClock
}

// GetWallClockOk returns a tuple with the WallClock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimitsMax) GetWallClockOk() (*Dbv0038QosLimitsMaxWallClock, bool) {
	if o == nil || IsNil(o.WallClock) {
		return nil, false
	}
	return o.WallClock, true
}

// HasWallClock returns a boolean if a field has been set.
func (o *Dbv0038QosLimitsMax) HasWallClock() bool {
	if o != nil && !IsNil(o.WallClock) {
		return true
	}

	return false
}

// SetWallClock gets a reference to the given Dbv0038QosLimitsMaxWallClock and assigns it to the WallClock field.
func (o *Dbv0038QosLimitsMax) SetWallClock(v Dbv0038QosLimitsMaxWallClock) {
	o.WallClock = &v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *Dbv0038QosLimitsMax) GetJobs() Dbv0038QosLimitsMaxJobs {
	if o == nil || IsNil(o.Jobs) {
		var ret Dbv0038QosLimitsMaxJobs
		return ret
	}
	return *o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimitsMax) GetJobsOk() (*Dbv0038QosLimitsMaxJobs, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *Dbv0038QosLimitsMax) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given Dbv0038QosLimitsMaxJobs and assigns it to the Jobs field.
func (o *Dbv0038QosLimitsMax) SetJobs(v Dbv0038QosLimitsMaxJobs) {
	o.Jobs = &v
}

// GetAccruing returns the Accruing field value if set, zero value otherwise.
func (o *Dbv0038QosLimitsMax) GetAccruing() Dbv0038QosLimitsMaxAccruing {
	if o == nil || IsNil(o.Accruing) {
		var ret Dbv0038QosLimitsMaxAccruing
		return ret
	}
	return *o.Accruing
}

// GetAccruingOk returns a tuple with the Accruing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimitsMax) GetAccruingOk() (*Dbv0038QosLimitsMaxAccruing, bool) {
	if o == nil || IsNil(o.Accruing) {
		return nil, false
	}
	return o.Accruing, true
}

// HasAccruing returns a boolean if a field has been set.
func (o *Dbv0038QosLimitsMax) HasAccruing() bool {
	if o != nil && !IsNil(o.Accruing) {
		return true
	}

	return false
}

// SetAccruing gets a reference to the given Dbv0038QosLimitsMaxAccruing and assigns it to the Accruing field.
func (o *Dbv0038QosLimitsMax) SetAccruing(v Dbv0038QosLimitsMaxAccruing) {
	o.Accruing = &v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *Dbv0038QosLimitsMax) GetTres() Dbv0038QosLimitsMaxTres {
	if o == nil || IsNil(o.Tres) {
		var ret Dbv0038QosLimitsMaxTres
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038QosLimitsMax) GetTresOk() (*Dbv0038QosLimitsMaxTres, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *Dbv0038QosLimitsMax) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given Dbv0038QosLimitsMaxTres and assigns it to the Tres field.
func (o *Dbv0038QosLimitsMax) SetTres(v Dbv0038QosLimitsMaxTres) {
	o.Tres = &v
}

func (o Dbv0038QosLimitsMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038QosLimitsMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WallClock) {
		toSerialize["wall_clock"] = o.WallClock
	}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.Accruing) {
		toSerialize["accruing"] = o.Accruing
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	return toSerialize, nil
}

type NullableDbv0038QosLimitsMax struct {
	value *Dbv0038QosLimitsMax
	isSet bool
}

func (v NullableDbv0038QosLimitsMax) Get() *Dbv0038QosLimitsMax {
	return v.value
}

func (v *NullableDbv0038QosLimitsMax) Set(val *Dbv0038QosLimitsMax) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038QosLimitsMax) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038QosLimitsMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038QosLimitsMax(val *Dbv0038QosLimitsMax) *NullableDbv0038QosLimitsMax {
	return &NullableDbv0038QosLimitsMax{value: val, isSet: true}
}

func (v NullableDbv0038QosLimitsMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038QosLimitsMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


