/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037AssociationMaxTresGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037AssociationMaxTresGroup{}

// Dbv0037AssociationMaxTresGroup Max TRES per group
type Dbv0037AssociationMaxTresGroup struct {
	// TRES list of attributes
	Minutes []Dbv0037TresListInner `json:"minutes,omitempty"`
	// TRES list of attributes
	Active []Dbv0037TresListInner `json:"active,omitempty"`
}

// NewDbv0037AssociationMaxTresGroup instantiates a new Dbv0037AssociationMaxTresGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037AssociationMaxTresGroup() *Dbv0037AssociationMaxTresGroup {
	this := Dbv0037AssociationMaxTresGroup{}
	return &this
}

// NewDbv0037AssociationMaxTresGroupWithDefaults instantiates a new Dbv0037AssociationMaxTresGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037AssociationMaxTresGroupWithDefaults() *Dbv0037AssociationMaxTresGroup {
	this := Dbv0037AssociationMaxTresGroup{}
	return &this
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *Dbv0037AssociationMaxTresGroup) GetMinutes() []Dbv0037TresListInner {
	if o == nil || IsNil(o.Minutes) {
		var ret []Dbv0037TresListInner
		return ret
	}
	return o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationMaxTresGroup) GetMinutesOk() ([]Dbv0037TresListInner, bool) {
	if o == nil || IsNil(o.Minutes) {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *Dbv0037AssociationMaxTresGroup) HasMinutes() bool {
	if o != nil && !IsNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given []Dbv0037TresListInner and assigns it to the Minutes field.
func (o *Dbv0037AssociationMaxTresGroup) SetMinutes(v []Dbv0037TresListInner) {
	o.Minutes = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Dbv0037AssociationMaxTresGroup) GetActive() []Dbv0037TresListInner {
	if o == nil || IsNil(o.Active) {
		var ret []Dbv0037TresListInner
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationMaxTresGroup) GetActiveOk() ([]Dbv0037TresListInner, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Dbv0037AssociationMaxTresGroup) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []Dbv0037TresListInner and assigns it to the Active field.
func (o *Dbv0037AssociationMaxTresGroup) SetActive(v []Dbv0037TresListInner) {
	o.Active = v
}

func (o Dbv0037AssociationMaxTresGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037AssociationMaxTresGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullableDbv0037AssociationMaxTresGroup struct {
	value *Dbv0037AssociationMaxTresGroup
	isSet bool
}

func (v NullableDbv0037AssociationMaxTresGroup) Get() *Dbv0037AssociationMaxTresGroup {
	return v.value
}

func (v *NullableDbv0037AssociationMaxTresGroup) Set(val *Dbv0037AssociationMaxTresGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037AssociationMaxTresGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037AssociationMaxTresGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037AssociationMaxTresGroup(val *Dbv0037AssociationMaxTresGroup) *NullableDbv0037AssociationMaxTresGroup {
	return &NullableDbv0037AssociationMaxTresGroup{value: val, isSet: true}
}

func (v NullableDbv0037AssociationMaxTresGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037AssociationMaxTresGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


