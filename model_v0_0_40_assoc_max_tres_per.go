/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040AssocMaxTresPer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040AssocMaxTresPer{}

// V0040AssocMaxTresPer struct for V0040AssocMaxTresPer
type V0040AssocMaxTresPer struct {
	Job []V0040Tres `json:"job,omitempty"`
	Node []V0040Tres `json:"node,omitempty"`
}

// NewV0040AssocMaxTresPer instantiates a new V0040AssocMaxTresPer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040AssocMaxTresPer() *V0040AssocMaxTresPer {
	this := V0040AssocMaxTresPer{}
	return &this
}

// NewV0040AssocMaxTresPerWithDefaults instantiates a new V0040AssocMaxTresPer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040AssocMaxTresPerWithDefaults() *V0040AssocMaxTresPer {
	this := V0040AssocMaxTresPer{}
	return &this
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *V0040AssocMaxTresPer) GetJob() []V0040Tres {
	if o == nil || IsNil(o.Job) {
		var ret []V0040Tres
		return ret
	}
	return o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040AssocMaxTresPer) GetJobOk() ([]V0040Tres, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *V0040AssocMaxTresPer) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given []V0040Tres and assigns it to the Job field.
func (o *V0040AssocMaxTresPer) SetJob(v []V0040Tres) {
	o.Job = v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *V0040AssocMaxTresPer) GetNode() []V0040Tres {
	if o == nil || IsNil(o.Node) {
		var ret []V0040Tres
		return ret
	}
	return o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040AssocMaxTresPer) GetNodeOk() ([]V0040Tres, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *V0040AssocMaxTresPer) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given []V0040Tres and assigns it to the Node field.
func (o *V0040AssocMaxTresPer) SetNode(v []V0040Tres) {
	o.Node = v
}

func (o V0040AssocMaxTresPer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040AssocMaxTresPer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	return toSerialize, nil
}

type NullableV0040AssocMaxTresPer struct {
	value *V0040AssocMaxTresPer
	isSet bool
}

func (v NullableV0040AssocMaxTresPer) Get() *V0040AssocMaxTresPer {
	return v.value
}

func (v *NullableV0040AssocMaxTresPer) Set(val *V0040AssocMaxTresPer) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040AssocMaxTresPer) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040AssocMaxTresPer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040AssocMaxTresPer(val *V0040AssocMaxTresPer) *NullableV0040AssocMaxTresPer {
	return &NullableV0040AssocMaxTresPer{value: val, isSet: true}
}

func (v NullableV0040AssocMaxTresPer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040AssocMaxTresPer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


