/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038ClusterInfoAssociations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038ClusterInfoAssociations{}

// Dbv0038ClusterInfoAssociations Information about associations
type Dbv0038ClusterInfoAssociations struct {
	Root *Dbv0038AssociationShortInfo `json:"root,omitempty"`
}

// NewDbv0038ClusterInfoAssociations instantiates a new Dbv0038ClusterInfoAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038ClusterInfoAssociations() *Dbv0038ClusterInfoAssociations {
	this := Dbv0038ClusterInfoAssociations{}
	return &this
}

// NewDbv0038ClusterInfoAssociationsWithDefaults instantiates a new Dbv0038ClusterInfoAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038ClusterInfoAssociationsWithDefaults() *Dbv0038ClusterInfoAssociations {
	this := Dbv0038ClusterInfoAssociations{}
	return &this
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *Dbv0038ClusterInfoAssociations) GetRoot() Dbv0038AssociationShortInfo {
	if o == nil || IsNil(o.Root) {
		var ret Dbv0038AssociationShortInfo
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038ClusterInfoAssociations) GetRootOk() (*Dbv0038AssociationShortInfo, bool) {
	if o == nil || IsNil(o.Root) {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *Dbv0038ClusterInfoAssociations) HasRoot() bool {
	if o != nil && !IsNil(o.Root) {
		return true
	}

	return false
}

// SetRoot gets a reference to the given Dbv0038AssociationShortInfo and assigns it to the Root field.
func (o *Dbv0038ClusterInfoAssociations) SetRoot(v Dbv0038AssociationShortInfo) {
	o.Root = &v
}

func (o Dbv0038ClusterInfoAssociations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038ClusterInfoAssociations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Root) {
		toSerialize["root"] = o.Root
	}
	return toSerialize, nil
}

type NullableDbv0038ClusterInfoAssociations struct {
	value *Dbv0038ClusterInfoAssociations
	isSet bool
}

func (v NullableDbv0038ClusterInfoAssociations) Get() *Dbv0038ClusterInfoAssociations {
	return v.value
}

func (v *NullableDbv0038ClusterInfoAssociations) Set(val *Dbv0038ClusterInfoAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038ClusterInfoAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038ClusterInfoAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038ClusterInfoAssociations(val *Dbv0038ClusterInfoAssociations) *NullableDbv0038ClusterInfoAssociations {
	return &NullableDbv0038ClusterInfoAssociations{value: val, isSet: true}
}

func (v NullableDbv0038ClusterInfoAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038ClusterInfoAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


