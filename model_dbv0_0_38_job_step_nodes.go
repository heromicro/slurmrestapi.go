/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038JobStepNodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038JobStepNodes{}

// Dbv0038JobStepNodes Node details
type Dbv0038JobStepNodes struct {
	// Total number of nodes in step
	Count *int32 `json:"count,omitempty"`
	// Nodes in step
	Range *string `json:"range,omitempty"`
}

// NewDbv0038JobStepNodes instantiates a new Dbv0038JobStepNodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038JobStepNodes() *Dbv0038JobStepNodes {
	this := Dbv0038JobStepNodes{}
	return &this
}

// NewDbv0038JobStepNodesWithDefaults instantiates a new Dbv0038JobStepNodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038JobStepNodesWithDefaults() *Dbv0038JobStepNodes {
	this := Dbv0038JobStepNodes{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *Dbv0038JobStepNodes) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepNodes) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *Dbv0038JobStepNodes) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *Dbv0038JobStepNodes) SetCount(v int32) {
	o.Count = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *Dbv0038JobStepNodes) GetRange() string {
	if o == nil || IsNil(o.Range) {
		var ret string
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobStepNodes) GetRangeOk() (*string, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *Dbv0038JobStepNodes) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given string and assigns it to the Range field.
func (o *Dbv0038JobStepNodes) SetRange(v string) {
	o.Range = &v
}

func (o Dbv0038JobStepNodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038JobStepNodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	return toSerialize, nil
}

type NullableDbv0038JobStepNodes struct {
	value *Dbv0038JobStepNodes
	isSet bool
}

func (v NullableDbv0038JobStepNodes) Get() *Dbv0038JobStepNodes {
	return v.value
}

func (v *NullableDbv0038JobStepNodes) Set(val *Dbv0038JobStepNodes) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038JobStepNodes) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038JobStepNodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038JobStepNodes(val *Dbv0038JobStepNodes) *NullableDbv0038JobStepNodes {
	return &NullableDbv0038JobStepNodes{value: val, isSet: true}
}

func (v NullableDbv0038JobStepNodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038JobStepNodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


