/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037JobStepTres type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037JobStepTres{}

// Dbv0037JobStepTres TRES usage
type Dbv0037JobStepTres struct {
	Requested *Dbv0037JobStepTresRequested `json:"requested,omitempty"`
	Consumed *Dbv0037JobStepTresRequested `json:"consumed,omitempty"`
	// TRES list of attributes
	Allocated []Dbv0037TresListInner `json:"allocated,omitempty"`
}

// NewDbv0037JobStepTres instantiates a new Dbv0037JobStepTres object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037JobStepTres() *Dbv0037JobStepTres {
	this := Dbv0037JobStepTres{}
	return &this
}

// NewDbv0037JobStepTresWithDefaults instantiates a new Dbv0037JobStepTres object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037JobStepTresWithDefaults() *Dbv0037JobStepTres {
	this := Dbv0037JobStepTres{}
	return &this
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *Dbv0037JobStepTres) GetRequested() Dbv0037JobStepTresRequested {
	if o == nil || IsNil(o.Requested) {
		var ret Dbv0037JobStepTresRequested
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStepTres) GetRequestedOk() (*Dbv0037JobStepTresRequested, bool) {
	if o == nil || IsNil(o.Requested) {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *Dbv0037JobStepTres) HasRequested() bool {
	if o != nil && !IsNil(o.Requested) {
		return true
	}

	return false
}

// SetRequested gets a reference to the given Dbv0037JobStepTresRequested and assigns it to the Requested field.
func (o *Dbv0037JobStepTres) SetRequested(v Dbv0037JobStepTresRequested) {
	o.Requested = &v
}

// GetConsumed returns the Consumed field value if set, zero value otherwise.
func (o *Dbv0037JobStepTres) GetConsumed() Dbv0037JobStepTresRequested {
	if o == nil || IsNil(o.Consumed) {
		var ret Dbv0037JobStepTresRequested
		return ret
	}
	return *o.Consumed
}

// GetConsumedOk returns a tuple with the Consumed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStepTres) GetConsumedOk() (*Dbv0037JobStepTresRequested, bool) {
	if o == nil || IsNil(o.Consumed) {
		return nil, false
	}
	return o.Consumed, true
}

// HasConsumed returns a boolean if a field has been set.
func (o *Dbv0037JobStepTres) HasConsumed() bool {
	if o != nil && !IsNil(o.Consumed) {
		return true
	}

	return false
}

// SetConsumed gets a reference to the given Dbv0037JobStepTresRequested and assigns it to the Consumed field.
func (o *Dbv0037JobStepTres) SetConsumed(v Dbv0037JobStepTresRequested) {
	o.Consumed = &v
}

// GetAllocated returns the Allocated field value if set, zero value otherwise.
func (o *Dbv0037JobStepTres) GetAllocated() []Dbv0037TresListInner {
	if o == nil || IsNil(o.Allocated) {
		var ret []Dbv0037TresListInner
		return ret
	}
	return o.Allocated
}

// GetAllocatedOk returns a tuple with the Allocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037JobStepTres) GetAllocatedOk() ([]Dbv0037TresListInner, bool) {
	if o == nil || IsNil(o.Allocated) {
		return nil, false
	}
	return o.Allocated, true
}

// HasAllocated returns a boolean if a field has been set.
func (o *Dbv0037JobStepTres) HasAllocated() bool {
	if o != nil && !IsNil(o.Allocated) {
		return true
	}

	return false
}

// SetAllocated gets a reference to the given []Dbv0037TresListInner and assigns it to the Allocated field.
func (o *Dbv0037JobStepTres) SetAllocated(v []Dbv0037TresListInner) {
	o.Allocated = v
}

func (o Dbv0037JobStepTres) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037JobStepTres) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Requested) {
		toSerialize["requested"] = o.Requested
	}
	if !IsNil(o.Consumed) {
		toSerialize["consumed"] = o.Consumed
	}
	if !IsNil(o.Allocated) {
		toSerialize["allocated"] = o.Allocated
	}
	return toSerialize, nil
}

type NullableDbv0037JobStepTres struct {
	value *Dbv0037JobStepTres
	isSet bool
}

func (v NullableDbv0037JobStepTres) Get() *Dbv0037JobStepTres {
	return v.value
}

func (v *NullableDbv0037JobStepTres) Set(val *Dbv0037JobStepTres) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037JobStepTres) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037JobStepTres) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037JobStepTres(val *Dbv0037JobStepTres) *NullableDbv0037JobStepTres {
	return &NullableDbv0037JobStepTres{value: val, isSet: true}
}

func (v NullableDbv0037JobStepTres) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037JobStepTres) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


