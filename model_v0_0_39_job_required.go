/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039JobRequired type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039JobRequired{}

// V0039JobRequired struct for V0039JobRequired
type V0039JobRequired struct {
	CPUs *int32 `json:"CPUs,omitempty"`
	MemoryPerCpu *V0039Uint64NoVal `json:"memory_per_cpu,omitempty"`
	MemoryPerNode *V0039Uint64NoVal `json:"memory_per_node,omitempty"`
	Memory *int64 `json:"memory,omitempty"`
}

// NewV0039JobRequired instantiates a new V0039JobRequired object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039JobRequired() *V0039JobRequired {
	this := V0039JobRequired{}
	return &this
}

// NewV0039JobRequiredWithDefaults instantiates a new V0039JobRequired object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039JobRequiredWithDefaults() *V0039JobRequired {
	this := V0039JobRequired{}
	return &this
}

// GetCPUs returns the CPUs field value if set, zero value otherwise.
func (o *V0039JobRequired) GetCPUs() int32 {
	if o == nil || IsNil(o.CPUs) {
		var ret int32
		return ret
	}
	return *o.CPUs
}

// GetCPUsOk returns a tuple with the CPUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobRequired) GetCPUsOk() (*int32, bool) {
	if o == nil || IsNil(o.CPUs) {
		return nil, false
	}
	return o.CPUs, true
}

// HasCPUs returns a boolean if a field has been set.
func (o *V0039JobRequired) HasCPUs() bool {
	if o != nil && !IsNil(o.CPUs) {
		return true
	}

	return false
}

// SetCPUs gets a reference to the given int32 and assigns it to the CPUs field.
func (o *V0039JobRequired) SetCPUs(v int32) {
	o.CPUs = &v
}

// GetMemoryPerCpu returns the MemoryPerCpu field value if set, zero value otherwise.
func (o *V0039JobRequired) GetMemoryPerCpu() V0039Uint64NoVal {
	if o == nil || IsNil(o.MemoryPerCpu) {
		var ret V0039Uint64NoVal
		return ret
	}
	return *o.MemoryPerCpu
}

// GetMemoryPerCpuOk returns a tuple with the MemoryPerCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobRequired) GetMemoryPerCpuOk() (*V0039Uint64NoVal, bool) {
	if o == nil || IsNil(o.MemoryPerCpu) {
		return nil, false
	}
	return o.MemoryPerCpu, true
}

// HasMemoryPerCpu returns a boolean if a field has been set.
func (o *V0039JobRequired) HasMemoryPerCpu() bool {
	if o != nil && !IsNil(o.MemoryPerCpu) {
		return true
	}

	return false
}

// SetMemoryPerCpu gets a reference to the given V0039Uint64NoVal and assigns it to the MemoryPerCpu field.
func (o *V0039JobRequired) SetMemoryPerCpu(v V0039Uint64NoVal) {
	o.MemoryPerCpu = &v
}

// GetMemoryPerNode returns the MemoryPerNode field value if set, zero value otherwise.
func (o *V0039JobRequired) GetMemoryPerNode() V0039Uint64NoVal {
	if o == nil || IsNil(o.MemoryPerNode) {
		var ret V0039Uint64NoVal
		return ret
	}
	return *o.MemoryPerNode
}

// GetMemoryPerNodeOk returns a tuple with the MemoryPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobRequired) GetMemoryPerNodeOk() (*V0039Uint64NoVal, bool) {
	if o == nil || IsNil(o.MemoryPerNode) {
		return nil, false
	}
	return o.MemoryPerNode, true
}

// HasMemoryPerNode returns a boolean if a field has been set.
func (o *V0039JobRequired) HasMemoryPerNode() bool {
	if o != nil && !IsNil(o.MemoryPerNode) {
		return true
	}

	return false
}

// SetMemoryPerNode gets a reference to the given V0039Uint64NoVal and assigns it to the MemoryPerNode field.
func (o *V0039JobRequired) SetMemoryPerNode(v V0039Uint64NoVal) {
	o.MemoryPerNode = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *V0039JobRequired) GetMemory() int64 {
	if o == nil || IsNil(o.Memory) {
		var ret int64
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobRequired) GetMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *V0039JobRequired) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *V0039JobRequired) SetMemory(v int64) {
	o.Memory = &v
}

func (o V0039JobRequired) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039JobRequired) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CPUs) {
		toSerialize["CPUs"] = o.CPUs
	}
	if !IsNil(o.MemoryPerCpu) {
		toSerialize["memory_per_cpu"] = o.MemoryPerCpu
	}
	if !IsNil(o.MemoryPerNode) {
		toSerialize["memory_per_node"] = o.MemoryPerNode
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	return toSerialize, nil
}

type NullableV0039JobRequired struct {
	value *V0039JobRequired
	isSet bool
}

func (v NullableV0039JobRequired) Get() *V0039JobRequired {
	return v.value
}

func (v *NullableV0039JobRequired) Set(val *V0039JobRequired) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039JobRequired) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039JobRequired) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039JobRequired(val *V0039JobRequired) *NullableV0039JobRequired {
	return &NullableV0039JobRequired{value: val, isSet: true}
}

func (v NullableV0039JobRequired) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039JobRequired) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


