/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039StatsRec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039StatsRec{}

// V0039StatsRec struct for V0039StatsRec
type V0039StatsRec struct {
	TimeStart *int64 `json:"time_start,omitempty"`
	// list of recorded rollup statistics
	Rollups []V0040RollupStatsInner `json:"rollups,omitempty"`
	RPCs []V0039StatsRpc `json:"RPCs,omitempty"`
	Users []V0039StatsUser `json:"users,omitempty"`
}

// NewV0039StatsRec instantiates a new V0039StatsRec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039StatsRec() *V0039StatsRec {
	this := V0039StatsRec{}
	return &this
}

// NewV0039StatsRecWithDefaults instantiates a new V0039StatsRec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039StatsRecWithDefaults() *V0039StatsRec {
	this := V0039StatsRec{}
	return &this
}

// GetTimeStart returns the TimeStart field value if set, zero value otherwise.
func (o *V0039StatsRec) GetTimeStart() int64 {
	if o == nil || IsNil(o.TimeStart) {
		var ret int64
		return ret
	}
	return *o.TimeStart
}

// GetTimeStartOk returns a tuple with the TimeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StatsRec) GetTimeStartOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeStart) {
		return nil, false
	}
	return o.TimeStart, true
}

// HasTimeStart returns a boolean if a field has been set.
func (o *V0039StatsRec) HasTimeStart() bool {
	if o != nil && !IsNil(o.TimeStart) {
		return true
	}

	return false
}

// SetTimeStart gets a reference to the given int64 and assigns it to the TimeStart field.
func (o *V0039StatsRec) SetTimeStart(v int64) {
	o.TimeStart = &v
}

// GetRollups returns the Rollups field value if set, zero value otherwise.
func (o *V0039StatsRec) GetRollups() []V0040RollupStatsInner {
	if o == nil || IsNil(o.Rollups) {
		var ret []V0040RollupStatsInner
		return ret
	}
	return o.Rollups
}

// GetRollupsOk returns a tuple with the Rollups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StatsRec) GetRollupsOk() ([]V0040RollupStatsInner, bool) {
	if o == nil || IsNil(o.Rollups) {
		return nil, false
	}
	return o.Rollups, true
}

// HasRollups returns a boolean if a field has been set.
func (o *V0039StatsRec) HasRollups() bool {
	if o != nil && !IsNil(o.Rollups) {
		return true
	}

	return false
}

// SetRollups gets a reference to the given []V0040RollupStatsInner and assigns it to the Rollups field.
func (o *V0039StatsRec) SetRollups(v []V0040RollupStatsInner) {
	o.Rollups = v
}

// GetRPCs returns the RPCs field value if set, zero value otherwise.
func (o *V0039StatsRec) GetRPCs() []V0039StatsRpc {
	if o == nil || IsNil(o.RPCs) {
		var ret []V0039StatsRpc
		return ret
	}
	return o.RPCs
}

// GetRPCsOk returns a tuple with the RPCs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StatsRec) GetRPCsOk() ([]V0039StatsRpc, bool) {
	if o == nil || IsNil(o.RPCs) {
		return nil, false
	}
	return o.RPCs, true
}

// HasRPCs returns a boolean if a field has been set.
func (o *V0039StatsRec) HasRPCs() bool {
	if o != nil && !IsNil(o.RPCs) {
		return true
	}

	return false
}

// SetRPCs gets a reference to the given []V0039StatsRpc and assigns it to the RPCs field.
func (o *V0039StatsRec) SetRPCs(v []V0039StatsRpc) {
	o.RPCs = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *V0039StatsRec) GetUsers() []V0039StatsUser {
	if o == nil || IsNil(o.Users) {
		var ret []V0039StatsUser
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StatsRec) GetUsersOk() ([]V0039StatsUser, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *V0039StatsRec) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []V0039StatsUser and assigns it to the Users field.
func (o *V0039StatsRec) SetUsers(v []V0039StatsUser) {
	o.Users = v
}

func (o V0039StatsRec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039StatsRec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeStart) {
		toSerialize["time_start"] = o.TimeStart
	}
	if !IsNil(o.Rollups) {
		toSerialize["rollups"] = o.Rollups
	}
	if !IsNil(o.RPCs) {
		toSerialize["RPCs"] = o.RPCs
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableV0039StatsRec struct {
	value *V0039StatsRec
	isSet bool
}

func (v NullableV0039StatsRec) Get() *V0039StatsRec {
	return v.value
}

func (v *NullableV0039StatsRec) Set(val *V0039StatsRec) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039StatsRec) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039StatsRec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039StatsRec(val *V0039StatsRec) *NullableV0039StatsRec {
	return &NullableV0039StatsRec{value: val, isSet: true}
}

func (v NullableV0039StatsRec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039StatsRec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


