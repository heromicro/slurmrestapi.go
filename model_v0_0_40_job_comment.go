/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040JobComment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040JobComment{}

// V0040JobComment struct for V0040JobComment
type V0040JobComment struct {
	Administrator *string `json:"administrator,omitempty"`
	Job *string `json:"job,omitempty"`
	System *string `json:"system,omitempty"`
}

// NewV0040JobComment instantiates a new V0040JobComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040JobComment() *V0040JobComment {
	this := V0040JobComment{}
	return &this
}

// NewV0040JobCommentWithDefaults instantiates a new V0040JobComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040JobCommentWithDefaults() *V0040JobComment {
	this := V0040JobComment{}
	return &this
}

// GetAdministrator returns the Administrator field value if set, zero value otherwise.
func (o *V0040JobComment) GetAdministrator() string {
	if o == nil || IsNil(o.Administrator) {
		var ret string
		return ret
	}
	return *o.Administrator
}

// GetAdministratorOk returns a tuple with the Administrator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobComment) GetAdministratorOk() (*string, bool) {
	if o == nil || IsNil(o.Administrator) {
		return nil, false
	}
	return o.Administrator, true
}

// HasAdministrator returns a boolean if a field has been set.
func (o *V0040JobComment) HasAdministrator() bool {
	if o != nil && !IsNil(o.Administrator) {
		return true
	}

	return false
}

// SetAdministrator gets a reference to the given string and assigns it to the Administrator field.
func (o *V0040JobComment) SetAdministrator(v string) {
	o.Administrator = &v
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *V0040JobComment) GetJob() string {
	if o == nil || IsNil(o.Job) {
		var ret string
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobComment) GetJobOk() (*string, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *V0040JobComment) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given string and assigns it to the Job field.
func (o *V0040JobComment) SetJob(v string) {
	o.Job = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *V0040JobComment) GetSystem() string {
	if o == nil || IsNil(o.System) {
		var ret string
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobComment) GetSystemOk() (*string, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *V0040JobComment) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given string and assigns it to the System field.
func (o *V0040JobComment) SetSystem(v string) {
	o.System = &v
}

func (o V0040JobComment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040JobComment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Administrator) {
		toSerialize["administrator"] = o.Administrator
	}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	return toSerialize, nil
}

type NullableV0040JobComment struct {
	value *V0040JobComment
	isSet bool
}

func (v NullableV0040JobComment) Get() *V0040JobComment {
	return v.value
}

func (v *NullableV0040JobComment) Set(val *V0040JobComment) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040JobComment) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040JobComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040JobComment(val *V0040JobComment) *NullableV0040JobComment {
	return &NullableV0040JobComment{value: val, isSet: true}
}

func (v NullableV0040JobComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040JobComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


