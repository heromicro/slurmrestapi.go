/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.40
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040OpenapiMetaSlurm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040OpenapiMetaSlurm{}

// V0040OpenapiMetaSlurm struct for V0040OpenapiMetaSlurm
type V0040OpenapiMetaSlurm struct {
	Version *V0040OpenapiMetaSlurmVersion `json:"version,omitempty"`
	// Slurm release string
	Release *string `json:"release,omitempty"`
	// Slurm cluster name
	Cluster *string `json:"cluster,omitempty"`
}

// NewV0040OpenapiMetaSlurm instantiates a new V0040OpenapiMetaSlurm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040OpenapiMetaSlurm() *V0040OpenapiMetaSlurm {
	this := V0040OpenapiMetaSlurm{}
	return &this
}

// NewV0040OpenapiMetaSlurmWithDefaults instantiates a new V0040OpenapiMetaSlurm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040OpenapiMetaSlurmWithDefaults() *V0040OpenapiMetaSlurm {
	this := V0040OpenapiMetaSlurm{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V0040OpenapiMetaSlurm) GetVersion() V0040OpenapiMetaSlurmVersion {
	if o == nil || IsNil(o.Version) {
		var ret V0040OpenapiMetaSlurmVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040OpenapiMetaSlurm) GetVersionOk() (*V0040OpenapiMetaSlurmVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V0040OpenapiMetaSlurm) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given V0040OpenapiMetaSlurmVersion and assigns it to the Version field.
func (o *V0040OpenapiMetaSlurm) SetVersion(v V0040OpenapiMetaSlurmVersion) {
	o.Version = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *V0040OpenapiMetaSlurm) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040OpenapiMetaSlurm) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *V0040OpenapiMetaSlurm) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *V0040OpenapiMetaSlurm) SetRelease(v string) {
	o.Release = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *V0040OpenapiMetaSlurm) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040OpenapiMetaSlurm) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *V0040OpenapiMetaSlurm) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *V0040OpenapiMetaSlurm) SetCluster(v string) {
	o.Cluster = &v
}

func (o V0040OpenapiMetaSlurm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040OpenapiMetaSlurm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableV0040OpenapiMetaSlurm struct {
	value *V0040OpenapiMetaSlurm
	isSet bool
}

func (v NullableV0040OpenapiMetaSlurm) Get() *V0040OpenapiMetaSlurm {
	return v.value
}

func (v *NullableV0040OpenapiMetaSlurm) Set(val *V0040OpenapiMetaSlurm) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040OpenapiMetaSlurm) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040OpenapiMetaSlurm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040OpenapiMetaSlurm(val *V0040OpenapiMetaSlurm) *NullableV0040OpenapiMetaSlurm {
	return &NullableV0040OpenapiMetaSlurm{value: val, isSet: true}
}

func (v NullableV0040OpenapiMetaSlurm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040OpenapiMetaSlurm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


