/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037UserAssociations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037UserAssociations{}

// Dbv0037UserAssociations Assigned associations
type Dbv0037UserAssociations struct {
	Root *Dbv0037AssociationShortInfo `json:"root,omitempty"`
}

// NewDbv0037UserAssociations instantiates a new Dbv0037UserAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037UserAssociations() *Dbv0037UserAssociations {
	this := Dbv0037UserAssociations{}
	return &this
}

// NewDbv0037UserAssociationsWithDefaults instantiates a new Dbv0037UserAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037UserAssociationsWithDefaults() *Dbv0037UserAssociations {
	this := Dbv0037UserAssociations{}
	return &this
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *Dbv0037UserAssociations) GetRoot() Dbv0037AssociationShortInfo {
	if o == nil || IsNil(o.Root) {
		var ret Dbv0037AssociationShortInfo
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037UserAssociations) GetRootOk() (*Dbv0037AssociationShortInfo, bool) {
	if o == nil || IsNil(o.Root) {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *Dbv0037UserAssociations) HasRoot() bool {
	if o != nil && !IsNil(o.Root) {
		return true
	}

	return false
}

// SetRoot gets a reference to the given Dbv0037AssociationShortInfo and assigns it to the Root field.
func (o *Dbv0037UserAssociations) SetRoot(v Dbv0037AssociationShortInfo) {
	o.Root = &v
}

func (o Dbv0037UserAssociations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037UserAssociations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Root) {
		toSerialize["root"] = o.Root
	}
	return toSerialize, nil
}

type NullableDbv0037UserAssociations struct {
	value *Dbv0037UserAssociations
	isSet bool
}

func (v NullableDbv0037UserAssociations) Get() *Dbv0037UserAssociations {
	return v.value
}

func (v *NullableDbv0037UserAssociations) Set(val *Dbv0037UserAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037UserAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037UserAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037UserAssociations(val *Dbv0037UserAssociations) *NullableDbv0037UserAssociations {
	return &NullableDbv0037UserAssociations{value: val, isSet: true}
}

func (v NullableDbv0037UserAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037UserAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


