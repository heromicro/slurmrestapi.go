{
    "tags": [
        {
            "name": "slurm",
            "description": "methods that query slurmctld"
        },
        {
            "name": "openapi",
            "description": "methods that query for OpenAPI specifications"
        }
    ],
    "paths": {
        "\/slurm\/v0.0.39\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_diag",
                "summary": "get diagnostics",
                "responses": {
                    "200": {
                        "description": "diagnostic results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_diag"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/licenses": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_slurmctld_get_licenses",
                "summary": "get all Slurm tracked license info",
                "responses": {
                    "200": {
                        "description": "results of get all licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/ping": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_ping",
                "summary": "ping test",
                "responses": {
                    "200": {
                        "description": "results of ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_pings"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_pings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_jobs",
                "summary": "get list of jobs",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_job",
                "summary": "get job info",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job matching JobId not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_update_job",
                "summary": "update job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_cancel_job",
                "summary": "cancel or signal job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signal",
                        "in": "query",
                        "description": "signal to send to job",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "description": "POSIX signal name",
                            "enum": [
                                "HUP",
                                "INT",
                                "QUIT",
                                "ABRT",
                                "KILL",
                                "ALRM",
                                "TERM",
                                "USR1",
                                "USR2",
                                "URG",
                                "CONT",
                                "STOP",
                                "TSTP",
                                "TTIN",
                                "TTOU"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job cancelled or sent signal",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Job cancel request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/job\/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_submit_job",
                "summary": "submit new job",
                "requestBody": {
                    "description": "submit new job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job submitted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job rejected",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/nodes": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_nodes",
                "summary": "get all node info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no nodes in cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/node\/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_node",
                "summary": "get node info",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_update_node",
                "summary": "update node properties",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update node",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_delete_node",
                "summary": "delete node",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node delete request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/partitions": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_partitions",
                "summary": "get all partition info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/partition\/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_partition",
                "summary": "get partition info",
                "parameters": [
                    {
                        "name": "partition_name",
                        "in": "path",
                        "description": "Slurm Partition Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/reservations": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_reservations",
                "summary": "get all reservation info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/reservation\/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_reservation",
                "summary": "get reservation info",
                "parameters": [
                    {
                        "name": "reservation_name",
                        "in": "path",
                        "description": "Slurm Reservation Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openapi.yaml": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi.json": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi\/v3": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/slurm\/v0.0.40\/reconfigure": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "request slurmctld reconfigure",
                "responses": {
                    "200": {
                        "description": "reconfigure requested successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "reconfigure requested failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_reconfigure"
            }
        },
        "\/slurm\/v0.0.40\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get diagnostics",
                "responses": {
                    "200": {
                        "description": "diagnostic results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request diagnostics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_diag"
            }
        },
        "\/slurm\/v0.0.40\/licenses": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all Slurm tracked license info",
                "responses": {
                    "200": {
                        "description": "results of get all licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_licenses"
            }
        },
        "\/slurm\/v0.0.40\/ping": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "ping test",
                "responses": {
                    "200": {
                        "description": "results of ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_ping"
            }
        },
        "\/slurm\/v0.0.40\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get list of jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_jobs"
            }
        },
        "\/slurm\/v0.0.40\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get job info",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job matching JobId not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_job"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_post_job"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "cancel or signal job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signal",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signal to send to Job",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signalling flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "WARNING_SENT"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job cancelled or sent signal",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Job cancel request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_delete_job"
            }
        },
        "\/slurm\/v0.0.40\/job\/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "submit new job",
                "requestBody": {
                    "description": "submit new job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_job_submit_req"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_job_submit_req"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job submitted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job rejected",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_post_job_submit"
            }
        },
        "\/slurm\/v0.0.40\/nodes": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all node info",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no nodes in cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_nodes"
            }
        },
        "\/slurm\/v0.0.40\/node\/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get node info",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_node"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update node properties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update node",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_update_node_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_update_node_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_post_node"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "delete node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node delete request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_delete_node"
            }
        },
        "\/slurm\/v0.0.40\/partitions": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all partition info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_partitions"
            }
        },
        "\/slurm\/v0.0.40\/partition\/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get partition info",
                "parameters": [
                    {
                        "name": "partition_name",
                        "in": "path",
                        "description": "Slurm Partition Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_partition"
            }
        },
        "\/slurm\/v0.0.40\/reservations": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all reservation info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_reservations"
            }
        },
        "\/slurm\/v0.0.40\/reservation\/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get reservation info",
                "parameters": [
                    {
                        "name": "reservation_name",
                        "in": "path",
                        "description": "Slurm Reservation Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_reservation"
            }
        },
        "\/slurm\/v0.0.40\/shares": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get fairshare info",
                "parameters": [
                    {
                        "in": "query",
                        "name": "accounts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Accounts to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Users to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shares information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to query shares",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurm_v0040_get_shares"
            }
        },
        "\/slurmdb\/v0.0.40\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "operationId": "slurmdb_v0040_get_job",
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Job id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "description": "Unable to find job",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurmdb\/v0.0.40\/config": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Dump all configuration information",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "description": "Unable to dump config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurmdb_v0040_get_config"
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Load all configuration information",
                "responses": {
                    "200": {
                        "description": "Load config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unable to set config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update config",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                            }
                        }
                    },
                    "required": false
                },
                "operationId": "slurmdb_v0040_post_config"
            }
        },
        "\/slurmdb\/v0.0.40\/tres": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to update TRES",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Set TRES info",
                "requestBody": {
                    "description": "Add or Update TRES",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                            }
                        }
                    },
                    "required": true
                },
                "operationId": "slurmdb_v0040_post_tres"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to retrieve TRES"
                    }
                },
                "summary": "Get TRES info",
                "operationId": "slurmdb_v0040_get_tres"
            }
        },
        "\/slurmdb\/v0.0.40\/qos\/{qos}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete QOS",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            }
                        },
                        "description": "Delete qos"
                    },
                    "default": {
                        "description": "Unable to delete QOS",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_delete_single_qos"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get QOS info",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Query includes deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_single_qos"
            }
        },
        "\/slurmdb\/v0.0.40\/qos": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preempt_mode",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "SUSPEND",
                                "REQUEUE",
                                "CANCEL",
                                "GANG"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "List of QOS'"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get QOS list",
                "operationId": "slurmdb_v0040_get_qos"
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "description": "Unable to update QOSs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update QOSs",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                            }
                        }
                    },
                    "required": true
                },
                "summary": "Set QOS info",
                "operationId": "slurmdb_v0040_post_qos"
            }
        },
        "\/slurmdb\/v0.0.40\/associations": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "description": "Unable to update associations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Set associations info",
                "requestBody": {
                    "description": "Add or update associations",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                            }
                        }
                    },
                    "required": true
                },
                "operationId": "slurmdb_v0040_post_associations"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id\/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association list",
                "operationId": "slurmdb_v0040_get_associations"
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id\/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Associations not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete associations",
                "operationId": "slurmdb_v0040_delete_associations"
            }
        },
        "\/slurmdb\/v0.0.40\/association": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id\/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association info",
                "operationId": "slurmdb_v0040_get_association"
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id\/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Association not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete association",
                "operationId": "slurmdb_v0040_delete_association"
            }
        },
        "\/slurmdb\/v0.0.40\/instances": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Arbitrary string",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance_id",
                        "in": "query",
                        "description": "Cloud instance ID",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance_type",
                        "in": "query",
                        "description": "Cloud instance type",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "description": "Instance not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get instance list",
                "operationId": "slurmdb_v0040_get_instances"
            }
        },
        "\/slurmdb\/v0.0.40\/instance": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Arbitrary string",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance_id",
                        "in": "query",
                        "description": "Cloud instance ID",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "instance_type",
                        "in": "query",
                        "description": "Cloud instance type",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "description": "Instance not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get instance info",
                "operationId": "slurmdb_v0040_get_instance"
            }
        },
        "\/slurmdb\/v0.0.40\/user\/{name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "User not found or unable to delete user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_delete_user"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include assocations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_user"
            }
        },
        "\/slurmdb\/v0.0.40\/users_association": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add users with conditional association",
                "requestBody": {
                    "description": "Create users with conditional association",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of users with conditional association"
                    },
                    "default": {
                        "description": "Unable to add accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurmdb_v0040_post_users_association"
            }
        },
        "\/slurmdb\/v0.0.40\/users": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Update user",
                "requestBody": {
                    "description": "add or update user",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Update users"
                    },
                    "default": {
                        "description": "User not found or not able to update user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "operationId": "slurmdb_v0040_post_users"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user list",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "admin_level",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Administrator level",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_wckey",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Exclude defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_users"
            }
        },
        "\/slurmdb\/v0.0.40\/cluster\/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                                }
                            }
                        },
                        "description": "Delete cluster"
                    },
                    "default": {
                        "description": "Cluster not found or unable to delete cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_delete_cluster"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster info",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_cluster"
            }
        },
        "\/slurmdb\/v0.0.40\/clusters": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get cluster list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_clusters"
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Modify clusters response"
                    },
                    "default": {
                        "description": "Unable to add cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "update clusters",
                "requestBody": {
                    "description": "Add or modify clusters",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                            }
                        }
                    },
                    "required": true
                },
                "operationId": "slurmdb_v0040_post_clusters"
            }
        },
        "\/slurmdb\/v0.0.40\/wckey\/{id}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                                }
                            }
                        },
                        "description": "Delete wckey"
                    },
                    "default": {
                        "description": "wckey not found or unable to delete wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_delete_wckey"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get wckey info",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckey"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_wckey"
            }
        },
        "\/slurmdb\/v0.0.40\/wckeys": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get wckey list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "only query defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include usage with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted wckeys with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_wckeys"
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "Unable to add wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Add wckeys",
                "requestBody": {
                    "description": "add wckeys",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                            }
                        }
                    },
                    "required": false
                },
                "operationId": "slurmdb_v0040_post_wckeys"
            }
        },
        "\/slurmdb\/v0.0.40\/account\/{account_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                                }
                            }
                        },
                        "description": "Delete account"
                    },
                    "default": {
                        "description": "Unable to delete account",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_delete_account"
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get account info",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "slurmdb_v0040_get_account"
            }
        },
        "\/slurmdb\/v0.0.40\/accounts_association": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of accounts with conditional association"
                    },
                    "default": {
                        "description": "Unable to add accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        }
                    }
                },
                "summary": "Add accounts with conditional association",
                "requestBody": {
                    "description": "Create accounts with conditional association",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp"
                            }
                        }
                    },
                    "required": true
                },
                "operationId": "slurmdb_v0040_post_accounts_association"
            }
        },
        "\/slurmdb\/v0.0.40\/accounts": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted accounts",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get account list",
                "operationId": "slurmdb_v0040_get_accounts"
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Add\/update list of accounts"
                    },
                    "default": {
                        "description": "Unable to add or update accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Update accounts",
                "requestBody": {
                    "description": "update\/create accounts",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                            }
                        }
                    },
                    "required": true
                },
                "operationId": "slurmdb_v0040_post_accounts"
            }
        },
        "\/slurmdb\/v0.0.40\/jobs": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV association list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV constraint list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of cpus high range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of cpus low range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduler_unset",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_on_submit",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_main",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_backfill",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_started",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "job exit code (numeric)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_duplicates",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_truncate_usage_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_time_as_submit_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_batch_script",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_job_environment",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "groups",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV group list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV job name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of nodes high range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of nodes low range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reason list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation_id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation ID list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV state list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV step id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timelimit_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "maximum timelimit (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timelimit_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "minimum timelimit (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "submit_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "submit time timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string where jobs ran",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "description": "Unable to query jobs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get job list",
                "operationId": "slurmdb_v0040_get_jobs"
            }
        },
        "\/slurmdb\/v0.0.40\/diag": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "description": "Unable to query diagnostics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                                }
                            }
                        }
                    }
                },
                "summary": "Get slurmdb diagnostics",
                "operationId": "slurmdb_v0040_get_diag"
            }
        },
        "\/slurm\/v0.0.38\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_diag",
                "summary": "get diagnostics",
                "responses": {
                    "200": {
                        "description": "diagnostic results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_diag"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/licenses": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_slurmctld_get_licenses",
                "summary": "get all Slurm tracked license info",
                "responses": {
                    "200": {
                        "description": "results of get all licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_licenses"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_licenses"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request licenses"
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/ping": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_ping",
                "summary": "ping test",
                "responses": {
                    "200": {
                        "description": "results of ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_pings"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_pings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_jobs",
                "summary": "get list of jobs",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_job",
                "summary": "get job info",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job matching JobId not found"
                    }
                },
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_update_job",
                "summary": "update job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job information"
                    },
                    "500": {
                        "description": "job not found"
                    }
                },
                "deprecated": true
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_cancel_job",
                "summary": "cancel or signal job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signal",
                        "in": "query",
                        "description": "signal to send to job",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/v0.0.38_signal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job cancelled or sent signal"
                    },
                    "500": {
                        "description": "job not found"
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/job\/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_submit_job",
                "summary": "submit new job",
                "requestBody": {
                    "description": "submit new job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.38_job_submission"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.38_job_submission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job submitted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_job_submission_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_job_submission_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job rejected",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/nodes": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_nodes",
                "summary": "get all node info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no nodes in cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/node\/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_node",
                "summary": "get node info",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/partitions": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_partitions",
                "summary": "get all partition info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/partition\/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_partition",
                "summary": "get partition info",
                "parameters": [
                    {
                        "name": "partition_name",
                        "in": "path",
                        "description": "Slurm Partition Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/reservations": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_reservations",
                "summary": "get all reservation info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurm\/v0.0.38\/reservation\/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0038_get_reservation",
                "summary": "get reservation info",
                "parameters": [
                    {
                        "name": "reservation_name",
                        "in": "path",
                        "description": "Slurm Reservation Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_job",
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "description": "Unable to find job",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/config": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_config",
                "summary": "Dump all configuration information",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_config_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_config_info"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "description": "Unable to dump config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_set_config",
                "summary": "Load all configuration information",
                "responses": {
                    "200": {
                        "description": "Load config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_config_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_config_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unable to set config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update config",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_set_config"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_set_config"
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/tres": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_update_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to update TRES",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Set TRES info",
                "requestBody": {
                    "description": "Add or Update TRES",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_update"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_update"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_tres_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_tres_info"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to retrieve TRES"
                    }
                },
                "summary": "Get TRES info",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/qos\/{qos_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0038_delete_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos_delete"
                                }
                            }
                        },
                        "description": "Delete qos"
                    },
                    "default": {
                        "description": "Unable to delete QOS",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0038_get_single_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/qos": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_qos",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                                }
                            }
                        },
                        "description": "List of QOS'"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get QOS list",
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_update_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "description": "Unable to update QOSs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update QOSs",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_qos"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_qos"
                            }
                        }
                    },
                    "required": true
                },
                "summary": "Set QOS info",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/associations": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_update_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "description": "Unable to update associations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Set associations info",
                "requestBody": {
                    "description": "Add or update associations",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association list",
                "deprecated": true
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_delete_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Associations not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete associations",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/association": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association info",
                "deprecated": true
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_delete_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Association not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete association",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/user\/{user_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete user",
                "operationId": "slurmdb_v0038_delete_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_delete"
                                }
                            }
                        },
                        "description": "Delete user"
                    },
                    "default": {
                        "description": "User not found or unable to delete user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user info",
                "operationId": "slurmdb_v0038_get_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/users": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "Update user",
                "operationId": "slurmdb_v0038_update_users",
                "requestBody": {
                    "description": "add or update user",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_users"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_users"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_update"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_update"
                                }
                            }
                        },
                        "description": "Update users"
                    },
                    "default": {
                        "description": "User not found or not able to update user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user list",
                "operationId": "slurmdb_v0038_get_users",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/cluster\/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0038_delete_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_delete"
                                }
                            }
                        },
                        "description": "Delete cluster"
                    },
                    "default": {
                        "description": "Cluster not found or unable to delete cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0038_get_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/clusters": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get cluster list",
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_add_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_add"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_add"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Unable to add cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Add clusters",
                "requestBody": {
                    "description": "Add or update clusters",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/wckey\/{wckey}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0038_delete_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_delete"
                                }
                            }
                        },
                        "description": "Delete wckey"
                    },
                    "default": {
                        "description": "wckey not found or unable to delete wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0038_get_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckey"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/wckeys": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get wckey list",
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_add_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_add"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_add"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "Unable to add wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Add wckeys",
                "requestBody": {
                    "description": "add wckeys",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/account\/{account_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete account",
                "operationId": "slurmdb_v0038_delete_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_account_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_response_account_delete"
                                }
                            }
                        },
                        "description": "Delete account"
                    },
                    "default": {
                        "description": "Unable to delete account",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "deprecated": true
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get account info",
                "operationId": "slurmdb_v0038_get_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/accounts": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_accounts",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get account list",
                "deprecated": true
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_update_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_account_response"
                                }
                            }
                        },
                        "description": "Add\/update list of accounts"
                    },
                    "default": {
                        "description": "Unable to add or update accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Update accounts",
                "requestBody": {
                    "description": "update\/create accounts",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "submit_time",
                        "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "account",
                        "description": "Comma delimited list of accounts to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "description": "Comma delimited list of associations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "description": "Comma delimited list of cluster to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "description": "Comma delimited list of constraints to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "description": "Number of CPUs high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "description": "Number of CPUs low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "description": "Report job step information",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "description": "Disable waiting for result from slurmdbd",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "description": "Exit code of job",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "Comma delimited list of formats to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Comma delimited list of groups to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "description": "Comma delimited list of job names to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "description": "Number of nodes high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "description": "Number of nodes low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "description": "Comma delimited list of partitions to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "description": "Comma delimited list of QOS to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Comma delimited list of job reasons to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "description": "Comma delimited list of reservations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "Comma delimited list of states to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "description": "Comma delimited list of job steps to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "description": "Comma delimited list of used nodes to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "description": "Comma delimited list of wckeys to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "description": "Unable to query jobs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get job list",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.38\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0038_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_diag"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "description": "Unable to query diagnostics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                                }
                            }
                        }
                    }
                },
                "summary": "Get slurmdb diagnostics",
                "deprecated": true
            }
        },
        "\/slurmdb\/v0.0.39\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_job",
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "description": "Unable to find job",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurmdb\/v0.0.39\/config": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_config",
                "summary": "Dump all configuration information",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "description": "Unable to dump config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_set_config",
                "summary": "Load all configuration information",
                "responses": {
                    "200": {
                        "description": "Load config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unable to set config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update config",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "\/slurmdb\/v0.0.39\/tres": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to update TRES",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Set TRES info",
                "requestBody": {
                    "description": "Add or Update TRES",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to retrieve TRES"
                    }
                },
                "summary": "Get TRES info"
            }
        },
        "\/slurmdb\/v0.0.39\/qos\/{qos_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0039_delete_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete qos"
                    },
                    "default": {
                        "description": "Unable to delete QOS",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0039_get_single_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/qos": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_qos",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "List of QOS'"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get QOS list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "description": "Unable to update QOSs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update QOSs",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
                            }
                        }
                    },
                    "required": true
                },
                "summary": "Set QOS info"
            }
        },
        "\/slurmdb\/v0.0.39\/associations": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "description": "Unable to update associations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Set associations info",
                "requestBody": {
                    "description": "Add or update associations",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association list"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_delete_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Associations not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete associations"
            }
        },
        "\/slurmdb\/v0.0.39\/association": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association info"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_delete_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Association not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete association"
            }
        },
        "\/slurmdb\/v0.0.39\/user\/{user_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete user",
                "operationId": "slurmdb_v0039_delete_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "User not found or unable to delete user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user info",
                "operationId": "slurmdb_v0039_get_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/users": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "Update user",
                "operationId": "slurmdb_v0039_update_users",
                "requestBody": {
                    "description": "add or update user",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Update users"
                    },
                    "default": {
                        "description": "User not found or not able to update user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user list",
                "operationId": "slurmdb_v0039_get_users",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/cluster\/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0039_delete_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete cluster"
                    },
                    "default": {
                        "description": "Cluster not found or unable to delete cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0039_get_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/clusters": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get cluster list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_add_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Unable to add cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Add clusters",
                "requestBody": {
                    "description": "Add or update clusters",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "\/slurmdb\/v0.0.39\/wckey\/{wckey}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0039_delete_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete wckey"
                    },
                    "default": {
                        "description": "wckey not found or unable to delete wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0039_get_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckey"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/wckeys": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get wckey list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_add_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "Unable to add wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Add wckeys",
                "requestBody": {
                    "description": "add wckeys",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "\/slurmdb\/v0.0.39\/account\/{account_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete account",
                "operationId": "slurmdb_v0039_delete_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete account"
                    },
                    "default": {
                        "description": "Unable to delete account",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get account info",
                "operationId": "slurmdb_v0039_get_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/accounts": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_accounts",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get account list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_accounts",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Add\/update list of accounts"
                    },
                    "default": {
                        "description": "Unable to add or update accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Update accounts",
                "requestBody": {
                    "description": "update\/create accounts",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "\/slurmdb\/v0.0.39\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "users",
                        "description": "Filter by comma delimited list of user names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "submit_time",
                        "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "account",
                        "description": "Comma delimited list of accounts to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "description": "Comma delimited list of associations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "description": "Comma delimited list of cluster to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "description": "Comma delimited list of constraints to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "description": "Number of CPUs high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "description": "Number of CPUs low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "description": "Report job step information",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "description": "Disable waiting for result from slurmdbd",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "description": "Exit code of job",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "Comma delimited list of formats to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Comma delimited list of groups to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "description": "Comma delimited list of job names to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "description": "Number of nodes high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "description": "Number of nodes low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "description": "Comma delimited list of partitions to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "description": "Comma delimited list of QOS to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Comma delimited list of job reasons to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "description": "Comma delimited list of reservations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "Comma delimited list of states to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "description": "Comma delimited list of job steps to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "description": "Comma delimited list of used nodes to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "description": "Comma delimited list of wckeys to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "description": "Unable to query jobs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get job list"
            }
        },
        "\/slurmdb\/v0.0.39\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "description": "Unable to query diagnostics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get slurmdb diagnostics"
            }
        }
    },
    "components": {
        "schemas": {
            "v0.0.39_diag": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg"
                    }
                }
            },
            "v0.0.39_licenses_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "licenses": {
                        "$ref": "#\/components\/schemas\/v0.0.39_licenses"
                    }
                }
            },
            "v0.0.39_pings": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "pings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_controller_ping_array"
                    }
                }
            },
            "v0.0.39_partitions_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.39_partition_info_array"
                    }
                }
            },
            "v0.0.39_reservations_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "reservations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_array"
                    }
                }
            },
            "status": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    }
                }
            },
            "v0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_warning"
                }
            },
            "v0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_error"
                }
            },
            "v0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_job_update_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "results": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg_ptr"
                    }
                }
            },
            "v0.0.39_job_submission_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "job_id": {
                        "description": "new job ID",
                        "type": "integer"
                    },
                    "step_id": {
                        "description": "new job step ID",
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "description": "Message to user from job_submit plugin",
                        "type": "string"
                    }
                }
            },
            "v0.0.39_jobs_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_info_msg"
                    }
                }
            },
            "v0.0.39_job_submission": {
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Executable script (full contents) to run in batch step for all job components"
                    },
                    "job": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_list"
                    }
                }
            },
            "v0.0.39_nodes_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_nodes"
                    }
                }
            },
            "v0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "v0.0.39_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_argv"
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_AUTO_BIND_TO_THREADS",
                                "CPU_AUTO_BIND_TO_CORES",
                                "CPU_AUTO_BIND_TO_SOCKETS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "VERBOSE",
                                "CPU_BIND_ONE_THREAD_PER_CORE",
                                "SLURMD_OFF_SPEC",
                                "CPU_BIND_OFF"
                            ]
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cron_entry_ptr"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_env"
                    },
                    "excluded_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "VERBOSE",
                                "SORT",
                                "PREFER"
                            ]
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ]
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "power_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "EQUAL_POWER"
                            ]
                        }
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_spank_env"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.39_mem_per_cpus"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_mem_per_node"
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ]
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "environment"
                ]
            },
            "v0.0.39_job_desc_msg_argv": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_string_array": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_cron_entry_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_cron_entry"
            },
            "v0.0.39_cron_entry": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "WILD_MINUTE",
                                "WILD_HOUR",
                                "WILD_DAY_OF_MONTH",
                                "WILD_MONTH",
                                "WILD_DAY_OF_WEEK"
                            ]
                        }
                    },
                    "minute": {
                        "type": "string"
                    },
                    "hour": {
                        "type": "string"
                    },
                    "day_of_month": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day_of_week": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "line": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_job_desc_msg_env": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_csv_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_uint32_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_exclusive": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "flags",
                    "enum": [
                        "true",
                        "false",
                        "user",
                        "mcs"
                    ]
                }
            },
            "v0.0.39_job_desc_msg_spank_env": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_uint16_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_mem_per_cpus": {
                "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
            },
            "v0.0.39_uint64_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_mem_per_node": {
                "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
            },
            "v0.0.39_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32",
                        "description": "default CPU binding type"
                    },
                    "extra": {
                        "type": "string",
                        "description": "arbitrary string"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string",
                        "description": "new available feature for node"
                    },
                    "features_act": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string",
                        "description": "new active feature for node"
                    },
                    "gres": {
                        "type": "string",
                        "description": "new generic resources for node"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string",
                        "description": "communication name"
                    },
                    "hostname": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string",
                        "description": "node's hostname"
                    },
                    "name": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string",
                        "description": "node to update"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        },
                        "description": "assign new node state"
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_uid": {
                        "type": "string",
                        "description": "user ID of sending (needed if user root is sending message)"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val",
                        "description": "automatically resume DOWN or DRAINED node after this amount of seconds"
                    },
                    "weight": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val",
                        "description": "new weight for node"
                    }
                },
                "required": []
            },
            "v0.0.39_hostlist_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_stats_msg": {
                "type": "object",
                "properties": {
                    "parts_packed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "req_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "req_time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "server_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dbd_agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gettimeofday_latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_mean_depth": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_per_minute": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_queue_length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_submitted": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_started": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_pending": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_states_ts": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_backfilled_het_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_counter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean_try": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_sum": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth_try": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_try_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_queue_len_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_when_last_cycle": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_active": {
                        "type": "boolean"
                    },
                    "rpcs_by_message_type": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_type"
                    },
                    "rpcs_by_user": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_user"
                    }
                },
                "required": []
            },
            "v0.0.39_stats_msg_rpcs_by_type": {
                "type": "array",
                "description": "RPCs by message type",
                "items": {
                    "type": "object",
                    "description": "RPC",
                    "properties": {
                        "message_type": {
                            "type": "string",
                            "description": "Message type as string"
                        },
                        "type_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Message type as integer"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_stats_msg_rpcs_by_user": {
                "type": "array",
                "description": "RPCs by user",
                "items": {
                    "type": "object",
                    "description": "user",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "user name"
                        },
                        "user_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user id (numeric)"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_licenses": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_license"
                }
            },
            "v0.0.39_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string"
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Used": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Remote": {
                        "type": "boolean"
                    },
                    "Reserved": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastConsumed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastDeficit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdate": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_controller_ping_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_controller_ping"
                }
            },
            "v0.0.39_controller_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "pinged": {
                        "type": "string"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_partition_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_partition_info"
                }
            },
            "v0.0.39_partition_info": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "allowed_allocation": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "accounts": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            }
                        }
                    },
                    "groups": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            }
                        }
                    },
                    "qos": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            },
                            "assigned": {
                                "type": "string"
                            }
                        }
                    },
                    "alternate": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "billing_weights": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            }
                        }
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cpus": {
                        "type": "object",
                        "properties": {
                            "task_binding": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "defaults": {
                        "type": "object",
                        "properties": {
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "job": {
                                "type": "string"
                            }
                        }
                    },
                    "grace_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximums": {
                        "type": "object",
                        "properties": {
                            "cpus_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "cpus_per_socket": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "nodes": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "shares": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "over_time_limit": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "minimums": {
                        "type": "object",
                        "properties": {
                            "nodes": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_sets": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "object",
                        "properties": {
                            "job_factor": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "tier": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "timeouts": {
                        "type": "object",
                        "properties": {
                            "resume": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                            },
                            "suspend": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "suspend_time": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_reservation_info"
                }
            },
            "v0.0.39_reservation_info": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string"
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "core_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specializations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_core_spec"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "features": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "MAINT",
                                "NO_MAINT",
                                "DAILY",
                                "NO_DAILY",
                                "WEEKLY",
                                "NO_WEEKLY",
                                "IGNORE_JOBS",
                                "NO_IGNORE_JOBS",
                                "ANY_NODES",
                                "STATIC",
                                "NO_STATIC",
                                "PART_NODES",
                                "NO_PART_NODES",
                                "OVERLAP",
                                "SPEC_NODES",
                                "TIME_FLOAT",
                                "REPLACE",
                                "ALL_NODES",
                                "PURGE_COMP",
                                "WEEKDAY",
                                "NO_WEEKDAY",
                                "WEEKEND",
                                "NO_WEEKEND",
                                "FLEX",
                                "NO_FLEX",
                                "DURATION_PLUS",
                                "DURATION_MINUS",
                                "NO_HOLD_JOBS_AFTER_END",
                                "NO_PURGE_COMP",
                                "MAGNETIC",
                                "SKIP",
                                "HOURLY",
                                "NO_HOURLY",
                                "REOCCURRING"
                            ]
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "node_list": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "purge_completed": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "watts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_core_spec": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_reservation_core_spec"
                }
            },
            "v0.0.39_reservation_core_spec": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "core": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_array_response_msg_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg"
            },
            "v0.0.39_job_array_response_msg": {
                "type": "array",
                "description": "Result per ArrayJob",
                "items": {
                    "type": "object",
                    "description": "ArrayJob",
                    "properties": {
                        "job_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "JobId"
                        },
                        "error_code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "numeric error code"
                        },
                        "error": {
                            "type": "string",
                            "description": "error code description"
                        },
                        "why": {
                            "type": "string",
                            "description": "error message"
                        }
                    }
                }
            },
            "v0.0.39_job_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job_info"
                }
            },
            "v0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "accrue_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocating_node": {
                        "type": "string"
                    },
                    "array_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_task_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_max_tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_task_string": {
                        "type": "string"
                    },
                    "association_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "batch_flag": {
                        "type": "boolean"
                    },
                    "batch_host": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "burst_buffer_state": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cluster_features": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "core_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cores_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "billable_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    },
                    "cpus_per_task": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "cpu_frequency_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_maximum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_governor": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "eligible_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "excluded_nodes": {
                        "type": "string"
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "federation_origin": {
                        "type": "string"
                    },
                    "federation_siblings_active": {
                        "type": "string"
                    },
                    "federation_siblings_viable": {
                        "type": "string"
                    },
                    "gres_detail": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_info_gres_detail"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "het_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "het_job_id_set": {
                        "type": "string"
                    },
                    "het_job_offset": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_resources": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_res_ptr"
                    },
                    "job_size_str": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "job_state": {
                        "type": "string"
                    },
                    "last_sched_evaluation": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "max_cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "max_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_board": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "node_count": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.39_mem_per_cpus"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_mem_per_node"
                    },
                    "minimum_cpus_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "minimum_tmp_disk_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "power": {
                        "type": "object",
                        "properties": {
                            "flags": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "flags",
                                    "enum": [
                                        "EQUAL_POWER"
                                    ]
                                }
                            }
                        }
                    },
                    "preempt_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "preemptable_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pre_sus_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "string"
                    },
                    "minimum_switches": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "resize_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resv_name": {
                        "type": "string"
                    },
                    "scheduled_nodes": {
                        "type": "string"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "show_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_description": {
                        "type": "string"
                    },
                    "state_reason": {
                        "type": "string"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "submit_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "suspend_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "system_comment": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "threads_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "tres_req_str": {
                        "type": "string"
                    },
                    "tres_alloc_str": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "maximum_switch_wait_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "current_working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_float64_no_val": {
                "type": "object",
                "description": "64 bit floating point number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0.0
                    },
                    "number": {
                        "type": "number",
                        "format": "double",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_info_gres_detail": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_res_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_job_res"
            },
            "v0.0.39_job_res": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string"
                    },
                    "allocated_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_res_nodes"
                    }
                },
                "required": []
            },
            "v0.0.39_job_res_nodes": {
                "type": "array",
                "description": "job node resources",
                "items": {}
            },
            "v0.0.39_job_desc_msg_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                }
            },
            "v0.0.39_nodes": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_node"
                }
            },
            "v0.0.39_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "burstbuffer_network_address": {
                        "type": "string"
                    },
                    "boards": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "boot_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cluster_name": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_load": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "free_mem": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effective_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cpus": {
                        "type": "string"
                    },
                    "energy": {
                        "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy_ptr"
                    },
                    "external_sensors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data_ptr"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "power": {
                        "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data_ptr"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "active_features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "gres_drained": {
                        "type": "string"
                    },
                    "gres_used": {
                        "type": "string"
                    },
                    "last_busy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "specialized_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "next_state_after_reboot": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "operating_system": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "real_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_changed_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason_set_by_user": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alloc_idle_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres_used": {
                        "type": "string"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double"
                    },
                    "slurmd_start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_acct_gather_energy_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy"
            },
            "v0.0.39_acct_gather_energy": {
                "type": "object",
                "properties": {
                    "average_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "base_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "previous_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_ext_sensors_data_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data"
            },
            "v0.0.39_ext_sensors_data": {
                "type": "object",
                "properties": {
                    "consumed_energy": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "temperature": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "energy_update_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.39_power_mgmt_data_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data"
            },
            "v0.0.39_power_mgmt_data": {
                "type": "object",
                "properties": {
                    "maximum_watts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "new_maximum_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "peak_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lowest_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "new_job_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time_start_day": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_resp": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Slurm plugin type (if applicable)"
                            },
                            "name": {
                                "type": "string",
                                "description": "Slurm plugin name (if applicable)"
                            },
                            "data_parser": {
                                "type": "string",
                                "description": "Slurm data_parser plugin"
                            },
                            "accounting_storage": {
                                "type": "string",
                                "description": "Slurm accounting plugin"
                            }
                        }
                    },
                    "client": {
                        "type": "object",
                        "properties": {
                            "source": {
                                "type": "string",
                                "description": "Client source description"
                            },
                            "user": {
                                "type": "string",
                                "description": "Client user (if known)"
                            },
                            "group": {
                                "type": "string",
                                "description": "Client group (if known)"
                            }
                        }
                    },
                    "command": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_array",
                        "description": "CLI command (if applicable)"
                    },
                    "slurm": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "string",
                                        "description": "Slurm release major version"
                                    },
                                    "micro": {
                                        "type": "string",
                                        "description": "Slurm release micro version"
                                    },
                                    "minor": {
                                        "type": "string",
                                        "description": "Slurm release minor version"
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "Slurm release string"
                            },
                            "cluster": {
                                "type": "string",
                                "description": "Slurm cluster name"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_string_array": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_openapi_errors": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_error"
                }
            },
            "v0.0.40_openapi_error": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Long form error description"
                    },
                    "error_number": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Slurm numeric error identifier"
                    },
                    "error": {
                        "type": "string",
                        "description": "Short form error description"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of error or where error was first detected"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_warnings": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_openapi_warning"
                }
            },
            "v0.0.40_openapi_warning": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Long form warning description"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of warning or where warning was first detected"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_diag_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_msg",
                        "description": "statistics"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_stats_msg": {
                "type": "object",
                "properties": {
                    "parts_packed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "req_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "req_time_start": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "server_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dbd_agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gettimeofday_latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_mean_depth": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_per_minute": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_queue_length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_exit": {
                        "$ref": "#\/components\/schemas\/v0.0.40_schedule_exit_fields"
                    },
                    "jobs_submitted": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_started": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_pending": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_states_ts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "bf_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_backfilled_het_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_counter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean_try": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_sum": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth_try": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_try_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_queue_len_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_when_last_cycle": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "bf_active": {
                        "type": "boolean"
                    },
                    "bf_exit": {
                        "$ref": "#\/components\/schemas\/v0.0.40_bf_exit_fields"
                    },
                    "rpcs_by_message_type": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_msg_rpcs_by_type"
                    },
                    "rpcs_by_user": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_msg_rpcs_by_user"
                    }
                },
                "required": []
            },
            "v0.0.40_uint64_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_schedule_exit_fields": {
                "type": "object",
                "properties": {
                    "end_job_queue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "default_queue_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_job_start": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_rpc_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_sched_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "licenses": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_bf_exit_fields": {
                "type": "object",
                "properties": {
                    "end_job_queue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_job_start": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_job_test": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_node_space_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "state_changed": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_stats_msg_rpcs_by_type": {
                "type": "array",
                "description": "RPCs by message type",
                "items": {
                    "type": "object",
                    "description": "RPC",
                    "properties": {
                        "message_type": {
                            "type": "string",
                            "description": "Message type as string"
                        },
                        "type_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Message type as integer"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.40_stats_msg_rpcs_by_user": {
                "type": "array",
                "description": "RPCs by user",
                "items": {
                    "type": "object",
                    "description": "user",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "user name"
                        },
                        "user_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user id (numeric)"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.40_openapi_licenses_resp": {
                "type": "object",
                "properties": {
                    "licenses": {
                        "$ref": "#\/components\/schemas\/v0.0.40_licenses",
                        "description": "list of licenses"
                    },
                    "last_update": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last licenses change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "licenses",
                    "last_update"
                ]
            },
            "v0.0.40_licenses": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_license"
                }
            },
            "v0.0.40_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string"
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Used": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Remote": {
                        "type": "boolean"
                    },
                    "Reserved": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastConsumed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastDeficit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdate": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_ping_array_resp": {
                "type": "object",
                "properties": {
                    "pings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_controller_ping_array",
                        "description": "pings"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "pings"
                ]
            },
            "v0.0.40_controller_ping_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_controller_ping"
                }
            },
            "v0.0.40_controller_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "pinged": {
                        "type": "string"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_job_info_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_info_msg",
                        "description": "list of jobs"
                    },
                    "last_backfill": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last backfill scheduler run (UNIX timestamp)"
                    },
                    "last_update": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last job change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "jobs",
                    "last_backfill",
                    "last_update"
                ]
            },
            "v0.0.40_job_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_job_info"
                }
            },
            "v0.0.40_job_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "accrue_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocating_node": {
                        "type": "string"
                    },
                    "array_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "array_task_id": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "array_max_tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "array_task_string": {
                        "type": "string"
                    },
                    "association_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "batch_flag": {
                        "type": "boolean"
                    },
                    "batch_host": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "burst_buffer_state": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cluster_features": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "core_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cores_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "billable_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val"
                    },
                    "cpus_per_task": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "cpu_frequency_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "cpu_frequency_maximum": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "cpu_frequency_governor": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string"
                    },
                    "deadline": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "delay_boot": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "eligible_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "end_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "excluded_nodes": {
                        "type": "string"
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "federation_origin": {
                        "type": "string"
                    },
                    "federation_siblings_active": {
                        "type": "string"
                    },
                    "federation_siblings_viable": {
                        "type": "string"
                    },
                    "gres_detail": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_info_gres_detail"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "het_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "het_job_id_set": {
                        "type": "string"
                    },
                    "het_job_offset": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_resources": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_res"
                    },
                    "job_size_str": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "job_state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ]
                        }
                    },
                    "last_sched_evaluation": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "max_cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "max_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_board": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "node_count": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "minimum_cpus_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "minimum_tmp_disk_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "power": {
                        "type": "object",
                        "properties": {
                            "flags": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "EQUAL_POWER"
                                    ]
                                }
                            }
                        }
                    },
                    "preempt_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "preemptable_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "pre_sus_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "string"
                    },
                    "minimum_switches": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "resize_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resv_name": {
                        "type": "string"
                    },
                    "scheduled_nodes": {
                        "type": "string"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "true",
                                "false",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "show_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "start_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "state_description": {
                        "type": "string"
                    },
                    "state_reason": {
                        "type": "string"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "submit_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "suspend_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "system_comment": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "threads_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "tres_req_str": {
                        "type": "string"
                    },
                    "tres_alloc_str": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "maximum_switch_wait_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "current_working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_uint32_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_uint16_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_float64_no_val": {
                "type": "object",
                "description": "64 bit floating point number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0.0
                    },
                    "number": {
                        "type": "number",
                        "format": "double",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_process_exit_code_verbose": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "array",
                        "description": "Status given by return code",
                        "items": {
                            "enum": [
                                "INVALID",
                                "PENDING",
                                "SUCCESS",
                                "ERROR",
                                "SIGNALED",
                                "CORE_DUMPED"
                            ]
                        }
                    },
                    "return_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Process return code (numeric)"
                    },
                    "signal": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
                                "description": "Signal sent to process (numeric)"
                            },
                            "name": {
                                "type": "string",
                                "description": "Signal sent to process"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_job_info_gres_detail": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_job_res": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string"
                    },
                    "allocated_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_res_nodes"
                    }
                },
                "required": []
            },
            "v0.0.40_job_res_nodes": {
                "type": "array",
                "description": "job node resources",
                "items": {}
            },
            "v0.0.40_csv_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_array"
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "VERBOSE",
                                "CPU_BIND_ONE_THREAD_PER_CORE"
                            ]
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "$ref": "#\/components\/schemas\/v0.0.40_cron_entry"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_array"
                    },
                    "rlimits": {
                        "type": "object",
                        "properties": {
                            "cpu": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Per-process CPU limit, in seconds."
                            },
                            "fsize": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Largest file that can be created, in bytes."
                            },
                            "data": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Maximum size of data segment, in bytes. "
                            },
                            "stack": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Maximum size of stack segment, in bytes."
                            },
                            "core": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Largest core file that can be created, in bytes."
                            },
                            "rss": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them."
                            },
                            "nproc": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Number of processes."
                            },
                            "nofile": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Number of open files."
                            },
                            "memlock": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Locked-in-memory address space"
                            },
                            "as": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                                "description": "Address space limit."
                            }
                        }
                    },
                    "excluded_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "VERBOSE",
                                "SORT",
                                "PREFER"
                            ]
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ]
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "power_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "EQUAL_POWER"
                            ]
                        }
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "true",
                                "false",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_array"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ]
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_cron_entry": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "WILD_MINUTE",
                                "WILD_HOUR",
                                "WILD_DAY_OF_MONTH",
                                "WILD_MONTH",
                                "WILD_DAY_OF_WEEK"
                            ]
                        }
                    },
                    "minute": {
                        "type": "string"
                    },
                    "hour": {
                        "type": "string"
                    },
                    "day_of_month": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day_of_week": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "line": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_job_post_response": {
                "type": "object",
                "properties": {
                    "results": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_array_response_array",
                        "description": "Job update results"
                    },
                    "job_id": {
                        "type": "string",
                        "description": "First updated JobId - Use results instead"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "First updated StepID - Use results instead"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "First updated Job submision user message - Use results instead"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_job_array_response_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_job_array_response_msg_entry"
                }
            },
            "v0.0.40_job_array_response_msg_entry": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "JobId for updated Job"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "StepId for updated Job"
                    },
                    "error": {
                        "type": "string",
                        "description": "Verbose update status or error"
                    },
                    "error_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Verbose update status or error"
                    },
                    "why": {
                        "type": "string",
                        "description": "Update response message"
                    }
                },
                "required": []
            },
            "v0.0.40_job_submit_req": {
                "type": "object",
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "batch job script"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg_list",
                        "description": "HetJob description"
                    },
                    "job": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg",
                        "description": "Job description"
                    }
                },
                "required": []
            },
            "v0.0.40_job_desc_msg_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
                }
            },
            "v0.0.40_openapi_job_submit_response": {
                "type": "object",
                "properties": {
                    "result": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_submit_response_msg",
                        "description": "Job submission"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "submited JobId"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "submited StepID"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "job submision user message"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_job_submit_response_msg": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "step_id": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_nodes_resp": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.40_nodes",
                        "description": "list of nodes"
                    },
                    "last_update": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last node change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "nodes",
                    "last_update"
                ]
            },
            "v0.0.40_nodes": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_node"
                }
            },
            "v0.0.40_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "burstbuffer_network_address": {
                        "type": "string"
                    },
                    "boards": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "boot_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "cluster_name": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_load": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "free_mem": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effective_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cpus": {
                        "type": "string"
                    },
                    "energy": {
                        "$ref": "#\/components\/schemas\/v0.0.40_acct_gather_energy"
                    },
                    "external_sensors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_ext_sensors_data"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "power": {
                        "$ref": "#\/components\/schemas\/v0.0.40_power_mgmt_data"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "active_features": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "gres_drained": {
                        "type": "string"
                    },
                    "gres_used": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "string"
                    },
                    "last_busy": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "specialized_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "next_state_after_reboot": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "operating_system": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "real_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_changed_at": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "reason_set_by_user": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alloc_idle_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres_used": {
                        "type": "string"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double"
                    },
                    "slurmd_start_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_acct_gather_energy": {
                "type": "object",
                "properties": {
                    "average_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "base_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "previous_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.40_ext_sensors_data": {
                "type": "object",
                "properties": {
                    "consumed_energy": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "temperature": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "energy_update_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_power_mgmt_data": {
                "type": "object",
                "properties": {
                    "maximum_watts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "new_maximum_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "peak_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lowest_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "new_job_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "state": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time_start_day": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.40_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32",
                        "description": "default CPU binding type"
                    },
                    "extra": {
                        "type": "string",
                        "description": "arbitrary string"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
                        "description": "new available feature for node"
                    },
                    "features_act": {
                        "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
                        "description": "new active feature for node"
                    },
                    "gres": {
                        "type": "string",
                        "description": "new generic resources for node"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
                        "description": "communication name"
                    },
                    "hostname": {
                        "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
                        "description": "node's hostname"
                    },
                    "name": {
                        "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
                        "description": "node to update"
                    },
                    "state": {
                        "type": "array",
                        "description": "assign new node state",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_uid": {
                        "type": "string",
                        "description": "user ID of sending (needed if user root is sending message)"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "automatically resume DOWN or DRAINED node after this amount of seconds"
                    },
                    "weight": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "new weight for node"
                    }
                },
                "required": []
            },
            "v0.0.40_hostlist_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_openapi_partition_resp": {
                "type": "object",
                "properties": {
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.40_partition_info_msg",
                        "description": "list of partitions"
                    },
                    "last_update": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last partition change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "partitions",
                    "last_update"
                ]
            },
            "v0.0.40_partition_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_partition_info"
                }
            },
            "v0.0.40_partition_info": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "allowed_allocation": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "accounts": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            }
                        }
                    },
                    "groups": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            }
                        }
                    },
                    "qos": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            },
                            "assigned": {
                                "type": "string"
                            }
                        }
                    },
                    "alternate": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "billing_weights": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            }
                        }
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cpus": {
                        "type": "object",
                        "properties": {
                            "task_binding": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "defaults": {
                        "type": "object",
                        "properties": {
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "partition_memory_per_cpu": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "partition_memory_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "job": {
                                "type": "string"
                            }
                        }
                    },
                    "grace_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximums": {
                        "type": "object",
                        "properties": {
                            "cpus_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "cpus_per_socket": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "partition_memory_per_cpu": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "partition_memory_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "nodes": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "shares": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "oversubscribe": {
                                "type": "object",
                                "properties": {
                                    "jobs": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "items": {
                                            "enum": [
                                                "force"
                                            ]
                                        }
                                    }
                                }
                            },
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "over_time_limit": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                            }
                        }
                    },
                    "minimums": {
                        "type": "object",
                        "properties": {
                            "nodes": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_sets": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "object",
                        "properties": {
                            "job_factor": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "tier": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "timeouts": {
                        "type": "object",
                        "properties": {
                            "resume": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                            },
                            "suspend": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val"
                            }
                        }
                    },
                    "partition": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "INACTIVE",
                                        "UNKNOWN",
                                        "UP",
                                        "DOWN",
                                        "DRAIN"
                                    ]
                                }
                            }
                        }
                    },
                    "suspend_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_reservation_resp": {
                "type": "object",
                "properties": {
                    "reservations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_reservation_info_msg",
                        "description": "list of reservations"
                    },
                    "last_update": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "time of last reservation change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "reservations",
                    "last_update"
                ]
            },
            "v0.0.40_reservation_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_reservation_info"
                }
            },
            "v0.0.40_reservation_info": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string"
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "core_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specializations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_reservation_info_core_spec"
                    },
                    "end_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "features": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "MAINT",
                                "NO_MAINT",
                                "DAILY",
                                "NO_DAILY",
                                "WEEKLY",
                                "NO_WEEKLY",
                                "IGNORE_JOBS",
                                "NO_IGNORE_JOBS",
                                "ANY_NODES",
                                "STATIC",
                                "NO_STATIC",
                                "PART_NODES",
                                "NO_PART_NODES",
                                "OVERLAP",
                                "SPEC_NODES",
                                "TIME_FLOAT",
                                "REPLACE",
                                "ALL_NODES",
                                "PURGE_COMP",
                                "WEEKDAY",
                                "NO_WEEKDAY",
                                "WEEKEND",
                                "NO_WEEKEND",
                                "FLEX",
                                "NO_FLEX",
                                "DURATION_PLUS",
                                "DURATION_MINUS",
                                "NO_HOLD_JOBS_AFTER_END",
                                "NO_PURGE_COMP",
                                "MAGNETIC",
                                "SKIP",
                                "HOURLY",
                                "NO_HOURLY",
                                "REOCCURRING"
                            ]
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "node_list": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "purge_completed": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "start_time": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                    },
                    "watts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_reservation_info_core_spec": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_reservation_core_spec"
                }
            },
            "v0.0.40_reservation_core_spec": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "core": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_shares_resp": {
                "type": "object",
                "properties": {
                    "shares": {
                        "$ref": "#\/components\/schemas\/v0.0.40_shares_resp_msg",
                        "description": "fairshare info"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "shares"
                ]
            },
            "v0.0.40_shares_resp_msg": {
                "type": "object",
                "properties": {
                    "shares": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_shares_obj_list",
                        "description": "Assocation shares"
                    },
                    "total_shares": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of shares"
                    }
                },
                "required": []
            },
            "v0.0.40_assoc_shares_obj_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_assoc_shares_obj_wrap"
                }
            },
            "v0.0.40_assoc_shares_obj_wrap": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "assocation id"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "cluster name"
                    },
                    "name": {
                        "type": "string",
                        "description": "share name"
                    },
                    "parent": {
                        "type": "string",
                        "description": "parent name"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition name"
                    },
                    "shares_normalized": {
                        "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
                        "description": "normalized shares"
                    },
                    "shares": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "number of shares allocated"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "run_seconds": {
                                "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres_list",
                                "description": "currently running tres-secs = grp_used_tres_run_secs"
                            },
                            "group_minutes": {
                                "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres_list",
                                "description": "tres-minute limit"
                            },
                            "usage": {
                                "$ref": "#\/components\/schemas\/v0.0.40_shares_float128_tres_list",
                                "description": "measure of each tres usage"
                            }
                        }
                    },
                    "effective_usage": {
                        "type": "number",
                        "format": "double",
                        "description": "effective, normalized usage"
                    },
                    "usage_normalized": {
                        "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
                        "description": "normalized usage"
                    },
                    "usage": {
                        "type": "integer",
                        "format": "int64",
                        "description": "measure of tresbillableunits usage"
                    },
                    "fairshare": {
                        "type": "object",
                        "properties": {
                            "factor": {
                                "type": "number",
                                "format": "double",
                                "description": "fairshare factor"
                            },
                            "level": {
                                "type": "number",
                                "format": "double",
                                "description": "fairshare factor at this level. stored on an assoc as a long double, but that is not needed for display in sshare"
                            }
                        }
                    },
                    "type": {
                        "type": "array",
                        "description": "user or account association",
                        "items": {
                            "enum": [
                                "USER",
                                "ASSOCIATION"
                            ]
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_shares_uint64_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres"
                }
            },
            "v0.0.40_shares_uint64_tres": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "TRES name"
                    },
                    "value": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                        "description": "TRES value"
                    }
                },
                "required": []
            },
            "v0.0.40_shares_float128_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_shares_float128_tres"
                }
            },
            "v0.0.40_shares_float128_tres": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "TRES name"
                    },
                    "value": {
                        "type": "number",
                        "description": "TRES value"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_slurmdbd_jobs_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_job_list",
                        "description": "jobs"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "jobs"
                ]
            },
            "v0.0.40_job_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_job"
                }
            },
            "v0.0.40_job": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "object",
                        "properties": {
                            "administrator": {
                                "type": "string"
                            },
                            "job": {
                                "type": "string"
                            },
                            "system": {
                                "type": "string"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "array": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "limits": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "type": "object",
                                        "properties": {
                                            "running": {
                                                "type": "object",
                                                "properties": {
                                                    "tasks": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "task_id": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "task": {
                                "type": "string"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_short"
                    },
                    "block": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eligible": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "submission": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "limit": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "CLEAR_SCHEDULING",
                                "NOT_SET",
                                "STARTED_ON_SUBMIT",
                                "STARTED_ON_SCHEDULE",
                                "STARTED_ON_BACKFILL",
                                "START_RECEIVED"
                            ]
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "het": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "job_offset": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mcs": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "qos": {
                        "type": "string"
                    },
                    "required": {
                        "type": "object",
                        "properties": {
                            "CPUs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "memory_per_cpu": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "memory_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "reservation": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "script": {
                        "type": "string"
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "PENDING",
                                        "RUNNING",
                                        "SUSPENDED",
                                        "COMPLETED",
                                        "CANCELLED",
                                        "FAILED",
                                        "TIMEOUT",
                                        "NODE_FAIL",
                                        "PREEMPTED",
                                        "BOOT_FAIL",
                                        "DEADLINE",
                                        "OUT_OF_MEMORY",
                                        "LAUNCH_FAILED",
                                        "UPDATE_DB",
                                        "REQUEUED",
                                        "REQUEUE_HOLD",
                                        "SPECIAL_EXIT",
                                        "RESIZING",
                                        "CONFIGURING",
                                        "COMPLETING",
                                        "STOPPED",
                                        "RECONFIG_FAIL",
                                        "POWER_UP_NODE",
                                        "REVOKED",
                                        "REQUEUE_FED",
                                        "RESV_DEL_HOLD",
                                        "SIGNALING",
                                        "STAGE_OUT"
                                    ]
                                }
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    },
                    "steps": {
                        "$ref": "#\/components\/schemas\/v0.0.40_step_list"
                    },
                    "submit_line": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "allocated": {
                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                            },
                            "requested": {
                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                            }
                        }
                    },
                    "used_gres": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "wckey": {
                        "$ref": "#\/components\/schemas\/v0.0.40_wckey_tag_struct",
                        "description": "WCKey ID with tagging"
                    },
                    "working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_assoc_short": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Association account (if assigned)"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "Association cluster (if assigned)"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Association partition (if assigned)"
                    },
                    "user": {
                        "type": "string",
                        "description": "Assocation user (if assigned)"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Numeric Association ID (if known)"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.40_step_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_step"
                }
            },
            "v0.0.40_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "start": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "range": {
                                "type": "string"
                            },
                            "list": {
                                "$ref": "#\/components\/schemas\/v0.0.40_hostlist"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "pid": {
                        "type": "string"
                    },
                    "CPU": {
                        "type": "object",
                        "properties": {
                            "requested_frequency": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    },
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    }
                                }
                            },
                            "governor": {
                                "type": "string"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ]
                        }
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "CPU": {
                                "type": "object",
                                "properties": {
                                    "actual_frequency": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "energy": {
                                "type": "object",
                                "properties": {
                                    "consumed": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Slurm Job StepId"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "task": {
                        "type": "object",
                        "properties": {
                            "distribution": {
                                "type": "string"
                            }
                        }
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_step_tres_req_max"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_step_tres_req_min"
                                    },
                                    "average": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                    }
                                }
                            },
                            "consumed": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_step_tres_usage_max"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_step_tres_usage_min"
                                    },
                                    "average": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                    }
                                }
                            },
                            "allocated": {
                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_hostlist": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_step_tres_req_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_tres"
                }
            },
            "v0.0.40_tres": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "v0.0.40_step_tres_req_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_tres"
                }
            },
            "v0.0.40_step_tres_usage_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_tres"
                }
            },
            "v0.0.40_step_tres_usage_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_tres"
                }
            },
            "v0.0.40_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_tres"
                }
            },
            "v0.0.40_wckey_tag_struct": {
                "type": "object",
                "properties": {
                    "wckey": {
                        "type": "string",
                        "description": "WCKey name"
                    },
                    "flags": {
                        "type": "array",
                        "description": "Active flags",
                        "items": {
                            "enum": [
                                "ASSIGNED_DEFAULT"
                            ]
                        }
                    }
                },
                "required": [
                    "wckey",
                    "flags"
                ]
            },
            "v0.0.40_openapi_slurmdbd_config_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec_list",
                        "description": "clusters"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "tres"
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_account_list",
                        "description": "accounts"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.40_user_list",
                        "description": "users"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.40_qos_list",
                        "description": "qos"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.40_wckey_list",
                        "description": "wckeys"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_list",
                        "description": "associations"
                    },
                    "instances": {
                        "$ref": "#\/components\/schemas\/v0.0.40_instance_list",
                        "description": "instances"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_cluster_rec_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec"
                }
            },
            "v0.0.40_cluster_rec": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "select_plugin": {
                        "type": "string"
                    },
                    "associations": {
                        "type": "object",
                        "properties": {
                            "root": {
                                "$ref": "#\/components\/schemas\/v0.0.40_assoc_short"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                    }
                },
                "required": []
            },
            "v0.0.40_account_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_account"
                }
            },
            "v0.0.40_account": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.40_coord_list"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "organization"
                ]
            },
            "v0.0.40_assoc_short_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_assoc_short"
                }
            },
            "v0.0.40_coord_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_coord"
                }
            },
            "v0.0.40_coord": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "direct": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.40_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_user"
                }
            },
            "v0.0.40_user": {
                "type": "object",
                "properties": {
                    "administrator_level": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.40_coord_list"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "string"
                            },
                            "wckey": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "DELETED"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.40_wckey_list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.40_wckey_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_wckey"
                }
            },
            "v0.0.40_wckey": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#\/components\/schemas\/v0.0.40_accounting_list"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "cluster",
                    "name",
                    "user"
                ]
            },
            "v0.0.40_accounting_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_accounting"
                }
            },
            "v0.0.40_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TRES": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres"
                    }
                },
                "required": []
            },
            "v0.0.40_qos_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_qos"
                }
            },
            "v0.0.40_qos": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "ADD",
                                "REMOVE",
                                "PARTITION_MINIMUM_NODE",
                                "PARTITION_MAXIMUM_NODE",
                                "PARTITION_TIME_LIMIT",
                                "ENFORCE_USAGE_THRESHOLD",
                                "NO_RESERVE",
                                "REQUIRED_RESERVATION",
                                "DENY_LIMIT",
                                "OVERRIDE_PARTITION_QOS",
                                "NO_DECAY",
                                "USAGE_FACTOR_SAFE",
                                "RELATIVE"
                            ]
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "grace_time": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "max": {
                                "type": "object",
                                "properties": {
                                    "active_jobs": {
                                        "type": "object",
                                        "properties": {
                                            "accruing": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            },
                                            "count": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            },
                                            "minutes": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "qos": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                            },
                                                            "job": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                            },
                                                            "account": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                            },
                                                            "user": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    },
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    },
                                                    "node": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "wall_clock": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "qos": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    },
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "jobs": {
                                        "type": "object",
                                        "properties": {
                                            "active_jobs": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "account": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                            },
                                                            "user": {
                                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "accruing": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "factor": {
                                "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val"
                            },
                            "min": {
                                "type": "object",
                                "properties": {
                                    "priority_threshold": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "preempt": {
                        "type": "object",
                        "properties": {
                            "list": {
                                "$ref": "#\/components\/schemas\/v0.0.40_qos_preempt_list"
                            },
                            "mode": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "DISABLED",
                                        "SUSPEND",
                                        "REQUEUE",
                                        "CANCEL",
                                        "GANG"
                                    ]
                                }
                            },
                            "exempt_time": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "usage_factor": {
                        "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val"
                    },
                    "usage_threshold": {
                        "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val"
                    }
                },
                "required": []
            },
            "v0.0.40_qos_preempt_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_assoc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_assoc"
                }
            },
            "v0.0.40_assoc": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#\/components\/schemas\/v0.0.40_accounting_list",
                        "description": "Usage accounting"
                    },
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "description": "comment for the association"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "qos": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ]
                        }
                    },
                    "max": {
                        "type": "object",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            },
                                            "accruing": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            },
                                            "submitted": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            },
                                            "wall_clock": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    },
                                    "active": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    },
                                    "accruing": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                    }
                                }
                            },
                            "tres": {
                                "type": "object",
                                "properties": {
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                    },
                                    "group": {
                                        "type": "object",
                                        "properties": {
                                            "minutes": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            },
                                            "active": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            }
                                        }
                                    },
                                    "minutes": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "job": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            },
                                            "node": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                                            }
                                        }
                                    }
                                }
                            },
                            "per": {
                                "type": "object",
                                "properties": {
                                    "account": {
                                        "type": "object",
                                        "properties": {
                                            "wall_clock": {
                                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "id": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_short",
                        "description": "Association ID"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "lineage": {
                        "type": "string",
                        "description": "Complete path up the hierarchy to the root association"
                    },
                    "min": {
                        "type": "object",
                        "properties": {
                            "priority_threshold": {
                                "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.40_qos_string_id_list",
                        "description": "List of QOS names"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.40_qos_string_id_list": {
                "type": "array",
                "description": "List of QOS names",
                "items": {
                    "type": "string",
                    "description": "List of QOS names"
                }
            },
            "v0.0.40_instance_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_instance"
                }
            },
            "v0.0.40_instance": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "type": "string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "string"
                    },
                    "node_name": {
                        "type": "string"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "time_end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "time_start": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_tres_resp": {
                "type": "object",
                "properties": {
                    "TRES": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "TRES"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "TRES"
                ]
            },
            "v0.0.40_openapi_slurmdbd_qos_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_qos": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "removed QOS"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_qos"
                ]
            },
            "v0.0.40_string_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_openapi_slurmdbd_qos_resp": {
                "type": "object",
                "properties": {
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.40_qos_list",
                        "description": "List of QOS"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "qos"
                ]
            },
            "v0.0.40_openapi_assocs_resp": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_list",
                        "description": "associations"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "associations"
                ]
            },
            "v0.0.40_openapi_assocs_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_associations": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "removed_associations"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_associations"
                ]
            },
            "v0.0.40_openapi_instances_resp": {
                "type": "object",
                "properties": {
                    "instances": {
                        "$ref": "#\/components\/schemas\/v0.0.40_instance_list",
                        "description": "instances"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "instances"
                ]
            },
            "v0.0.40_openapi_users_resp": {
                "type": "object",
                "properties": {
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.40_user_list",
                        "description": "users"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "users"
                ]
            },
            "v0.0.40_openapi_users_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "$ref": "#\/components\/schemas\/v0.0.40_users_add_cond",
                        "description": "Filters to select associations for users"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/v0.0.40_user_short",
                        "description": "Admin level of user, DefaultAccount, DefaultWCKey"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_users_add_cond": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV accounts list"
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_rec_set",
                        "description": "Association limits and options"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV clusters list"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV partitions list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV users list"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV WCKeys list"
                    }
                },
                "required": [
                    "users"
                ]
            },
            "v0.0.40_assoc_rec_set": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Comment for the association"
                    },
                    "defaultqos": {
                        "type": "string",
                        "description": "Which QOS id is this association default"
                    },
                    "grpjobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can run at one time"
                    },
                    "grpjobsaccrue": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can have accruing priority at one time"
                    },
                    "grpsubmitjobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can submit at one time"
                    },
                    "grptres": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list"
                    },
                    "grptresmins": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes the underlying group of associations can run for"
                    },
                    "grptresrunmins": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes the underlying group of associations can having running at one time"
                    },
                    "grpwall": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Total time in minutes the underlying group of associations can run for"
                    },
                    "maxjobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs this association can run at one time"
                    },
                    "maxjobsaccrue": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs this association can have accruing priority time"
                    },
                    "maxsubmitjobs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs that can be submitted by association"
                    },
                    "maxtresminsperjob": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes this association can have per job"
                    },
                    "maxtresrunmins": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes this association can having running at one time"
                    },
                    "maxtresperjob": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of cpus this association can allocate per job"
                    },
                    "maxtrespernode": {
                        "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                        "description": "Max number of TRES this association can allocate per node"
                    },
                    "maxwalldurationperjob": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Longest time this association can run a job"
                    },
                    "minpriothresh": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Don't reserve resources for pending jobs unless they have a priority equal to or higher than this"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Name of parent account"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                        "description": "Association priority"
                    },
                    "qoslevel": {
                        "$ref": "#\/components\/schemas\/v0.0.40_qos_string_id_list",
                        "description": "List of QOS names"
                    },
                    "fairshare": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of shares allocated to this association"
                    }
                },
                "required": []
            },
            "v0.0.40_user_short": {
                "type": "object",
                "properties": {
                    "adminlevel": {
                        "type": "array",
                        "description": "Admin level of user.  Valid levels are None, Operator, and Admin.",
                        "items": {
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    "defaultaccount": {
                        "type": "string",
                        "description": "Identify the default bank account name to be used for a job if none is specified at submission time."
                    },
                    "defaultwckey": {
                        "type": "string",
                        "description": "Identify the default Workload Characterization Key."
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_users_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_users": {
                        "type": "string",
                        "description": "added_users"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "added_users"
                ]
            },
            "v0.0.40_openapi_clusters_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "deleted_clusters"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "deleted_clusters"
                ]
            },
            "v0.0.40_openapi_clusters_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec_list",
                        "description": "clusters"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "clusters"
                ]
            },
            "v0.0.40_openapi_wckey_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "deleted wckeys"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "deleted_wckeys"
                ]
            },
            "v0.0.40_openapi_wckey_resp": {
                "type": "object",
                "properties": {
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.40_wckey_list",
                        "description": "wckeys"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "wckeys"
                ]
            },
            "v0.0.40_openapi_accounts_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "removed_accounts"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_accounts"
                ]
            },
            "v0.0.40_openapi_accounts_resp": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_account_list",
                        "description": "accounts"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "v0.0.40_openapi_accounts_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_accounts": {
                        "type": "string",
                        "description": "added_accounts"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "added_accounts"
                ]
            },
            "v0.0.40_openapi_accounts_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "$ref": "#\/components\/schemas\/v0.0.40_accounts_add_cond",
                        "description": "CSV list of accounts, association limits and options, CSV list of clusters"
                    },
                    "account": {
                        "$ref": "#\/components\/schemas\/v0.0.40_account_short",
                        "description": "Account organization and description"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_accounts_add_cond": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV accounts list"
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/v0.0.40_assoc_rec_set",
                        "description": "Association limits and options"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.40_string_list",
                        "description": "CSV clusters list"
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "v0.0.40_account_short": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An arbitrary string describing an account"
                    },
                    "organization": {
                        "type": "string",
                        "description": "Organization to which the account belongs"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_slurmdbd_stats_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_rec",
                        "description": "statistics"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_stats_rec": {
                "type": "object",
                "properties": {
                    "time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollups": {
                        "$ref": "#\/components\/schemas\/v0.0.40_rollup_stats"
                    },
                    "RPCs": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_rpc_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.40_stats_user_list"
                    }
                },
                "required": []
            },
            "v0.0.40_rollup_stats": {
                "type": "array",
                "description": "list of recorded rollup statistics",
                "items": {
                    "type": "object",
                    "description": "recorded rollup statistics",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type",
                            "enum": [
                                "internal",
                                "user",
                                "unknown"
                            ]
                        },
                        "last run": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last time rollup ran (UNIX timestamp)"
                        },
                        "max_cycle": {
                            "type": "integer",
                            "format": "int64",
                            "description": "longest rollup time (seconds)"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "total time spent doing rollups (seconds)"
                        },
                        "total_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "number of rollups since last_run"
                        },
                        "mean_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "average time for rollup (seconds)"
                        }
                    }
                }
            },
            "v0.0.40_stats_rpc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_stats_rpc"
                }
            },
            "v0.0.40_stats_rpc": {
                "type": "object",
                "properties": {
                    "rpc": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_stats_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.40_stats_user"
                }
            },
            "v0.0.40_stats_user": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.38_diag": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "statistics": {
                        "type": "object",
                        "description": "Slurm statistics",
                        "properties": {
                            "parts_packed": {
                                "type": "integer",
                                "description": "partition records packed"
                            },
                            "req_time": {
                                "type": "integer",
                                "description": "generation time"
                            },
                            "req_time_start": {
                                "type": "integer",
                                "description": "data since"
                            },
                            "server_thread_count": {
                                "type": "integer",
                                "description": "Server thread count"
                            },
                            "agent_queue_size": {
                                "type": "integer",
                                "description": "Agent queue size"
                            },
                            "agent_count": {
                                "type": "integer",
                                "description": "Agent count"
                            },
                            "agent_thread_count": {
                                "type": "integer",
                                "description": "Agent thread count"
                            },
                            "dbd_agent_queue_size": {
                                "type": "integer",
                                "description": "DBD Agent queue size"
                            },
                            "gettimeofday_latency": {
                                "type": "integer",
                                "description": "Latency for 1000 calls to gettimeofday()"
                            },
                            "schedule_cycle_max": {
                                "type": "integer",
                                "description": "Main Schedule max cycle"
                            },
                            "schedule_cycle_last": {
                                "type": "integer",
                                "description": "Main Schedule last cycle"
                            },
                            "schedule_cycle_total": {
                                "type": "integer",
                                "description": "Main Schedule cycle iterations"
                            },
                            "schedule_cycle_mean": {
                                "type": "integer",
                                "description": "Average time for Schedule Max cycle"
                            },
                            "schedule_cycle_mean_depth": {
                                "type": "integer",
                                "description": "Average depth for Schedule Max cycle"
                            },
                            "schedule_cycle_per_minute": {
                                "type": "integer",
                                "description": "Main Schedule Cycles per minute"
                            },
                            "schedule_queue_length": {
                                "type": "integer",
                                "description": "Main Schedule Last queue length"
                            },
                            "jobs_submitted": {
                                "type": "integer",
                                "description": "Job submitted"
                            },
                            "jobs_started": {
                                "type": "integer",
                                "description": "Job started"
                            },
                            "jobs_completed": {
                                "type": "integer",
                                "description": "Job completed"
                            },
                            "jobs_canceled": {
                                "type": "integer",
                                "description": "Job cancelled"
                            },
                            "jobs_failed": {
                                "type": "integer",
                                "description": "Job failed"
                            },
                            "jobs_pending": {
                                "type": "integer",
                                "description": "Job pending"
                            },
                            "jobs_running": {
                                "type": "integer",
                                "description": "Job running"
                            },
                            "job_states_ts": {
                                "type": "integer",
                                "description": "Job states timestamp"
                            },
                            "bf_backfilled_jobs": {
                                "type": "integer",
                                "description": "Total backfilled jobs (since last slurm start)"
                            },
                            "bf_last_backfilled_jobs": {
                                "type": "integer",
                                "description": "Total backfilled jobs (since last stats cycle start)"
                            },
                            "bf_backfilled_het_jobs": {
                                "type": "integer",
                                "description": "Total backfilled heterogeneous job components"
                            },
                            "bf_cycle_counter": {
                                "type": "integer",
                                "description": "Backfill Schedule Total cycles"
                            },
                            "bf_cycle_mean": {
                                "type": "integer",
                                "description": "Backfill Schedule Mean cycle"
                            },
                            "bf_cycle_max": {
                                "type": "integer",
                                "description": "Backfill Schedule Max cycle time"
                            },
                            "bf_last_depth": {
                                "type": "integer",
                                "description": "Backfill Schedule Last depth cycle"
                            },
                            "bf_last_depth_try": {
                                "type": "integer",
                                "description": "Backfill Schedule Mean cycle (try sched)"
                            },
                            "bf_depth_mean": {
                                "type": "integer",
                                "description": "Backfill Schedule Depth Mean"
                            },
                            "bf_depth_mean_try": {
                                "type": "integer",
                                "description": "Backfill Schedule Depth Mean (try sched)"
                            },
                            "bf_cycle_last": {
                                "type": "integer",
                                "description": "Backfill Schedule Last cycle time"
                            },
                            "bf_queue_len": {
                                "type": "integer",
                                "description": "Backfill Schedule Last queue length"
                            },
                            "bf_queue_len_mean": {
                                "type": "integer",
                                "description": "Backfill Schedule Mean queue length"
                            },
                            "bf_table_size": {
                                "type": "integer",
                                "description": "Backfill Schedule Last table size"
                            },
                            "bf_table_size_mean": {
                                "type": "integer",
                                "description": "Backfill Schedule Mean table size"
                            },
                            "bf_when_last_cycle": {
                                "type": "integer",
                                "description": "Last cycle timestamp"
                            },
                            "bf_active": {
                                "type": "boolean",
                                "description": "Backfill Schedule currently active"
                            },
                            "rpcs_by_message_type": {
                                "type": "array",
                                "description": "Remote Procedure Call statistics by message type",
                                "items": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_diag_rpcm"
                                }
                            },
                            "rpcs_by_user": {
                                "type": "array",
                                "description": "Remote Procedure Call statistics by user",
                                "items": {
                                    "$ref": "#\/components\/schemas\/v0.0.38_diag_rpcu"
                                }
                            }
                        }
                    }
                }
            },
            "v0.0.38_diag_rpcm": {
                "type": "object",
                "properties": {
                    "message_type": {
                        "type": "string",
                        "description": "message type"
                    },
                    "type_id": {
                        "type": "integer",
                        "description": "message type id"
                    },
                    "count": {
                        "type": "integer",
                        "description": "rpc count"
                    },
                    "average_time": {
                        "type": "integer",
                        "description": "average time"
                    },
                    "total_time": {
                        "type": "integer",
                        "description": "total time"
                    }
                }
            },
            "v0.0.38_diag_rpcu": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "user"
                    },
                    "user_id": {
                        "type": "integer",
                        "description": "user id"
                    },
                    "count": {
                        "type": "integer",
                        "description": "rpc count"
                    },
                    "average_time": {
                        "type": "integer",
                        "description": "average time"
                    },
                    "total_time": {
                        "type": "integer",
                        "description": "total time"
                    }
                }
            },
            "v0.0.38_licenses": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "licenses": {
                        "type": "array",
                        "description": "licenses info",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_license"
                        }
                    }
                }
            },
            "v0.0.38_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string",
                        "description": "name of license"
                    },
                    "Total": {
                        "type": "integer",
                        "description": "total number of licenses"
                    },
                    "Used": {
                        "type": "integer",
                        "description": "number of licenses in use"
                    },
                    "Free": {
                        "type": "integer",
                        "description": "number of licenses available"
                    },
                    "Reserved": {
                        "type": "integer",
                        "description": "number of licenses reserved"
                    },
                    "Remote": {
                        "type": "boolean",
                        "description": "license is remote"
                    }
                }
            },
            "v0.0.38_pings": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "pings": {
                        "type": "array",
                        "description": "slurm controller pings",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_ping"
                        }
                    }
                }
            },
            "v0.0.38_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "slurm controller hostname"
                    },
                    "ping": {
                        "type": "string",
                        "description": "slurm controller host up",
                        "enum": [
                            "UP",
                            "DOWN"
                        ]
                    },
                    "mode": {
                        "type": "string",
                        "description": "slurm controller mode"
                    },
                    "status": {
                        "type": "integer",
                        "description": "slurm controller status"
                    }
                }
            },
            "v0.0.38_partition": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "description": "partition options",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preemption_mode": {
                        "type": "array",
                        "description": "preemption type",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_allocation_nodes": {
                        "type": "string",
                        "description": "list names of allowed allocating nodes"
                    },
                    "allowed_accounts": {
                        "type": "string",
                        "description": "comma delimited list of accounts"
                    },
                    "allowed_groups": {
                        "type": "string",
                        "description": "comma delimited list of groups"
                    },
                    "allowed_qos": {
                        "type": "string",
                        "description": "comma delimited list of qos"
                    },
                    "alternative": {
                        "type": "string",
                        "description": "name of alternate partition"
                    },
                    "billing_weights": {
                        "type": "string",
                        "description": "TRES billing weights"
                    },
                    "default_memory_per_cpu": {
                        "type": "integer",
                        "format": "int64",
                        "description": "default MB memory per allocated CPU"
                    },
                    "default_time_limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "default time limit (minutes)"
                    },
                    "denied_accounts": {
                        "type": "string",
                        "description": "comma delimited list of denied accounts"
                    },
                    "denied_qos": {
                        "type": "string",
                        "description": "comma delimited list of denied qos"
                    },
                    "preemption_grace_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "preemption grace time (seconds)"
                    },
                    "maximum_cpus_per_node": {
                        "type": "integer",
                        "description": "maximum allocated CPUs per node"
                    },
                    "maximum_memory_per_node": {
                        "type": "integer",
                        "format": "int64",
                        "description": "maximum memory per allocated node (MiB)"
                    },
                    "maximum_nodes_per_job": {
                        "type": "integer",
                        "description": "Max nodes per job"
                    },
                    "max_time_limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Max time limit per job"
                    },
                    "min_nodes_per_job": {
                        "type": "integer",
                        "description": "Min number of nodes per job"
                    },
                    "name": {
                        "type": "string",
                        "description": "Partition name"
                    },
                    "nodes": {
                        "type": "string",
                        "description": "list names of nodes in partition"
                    },
                    "over_time_limit": {
                        "type": "integer",
                        "description": "job's time limit can be exceeded by this number of minutes before cancellation"
                    },
                    "priority_job_factor": {
                        "type": "integer",
                        "description": "job priority weight factor"
                    },
                    "priority_tier": {
                        "type": "integer",
                        "description": "tier for scheduling and preemption"
                    },
                    "qos": {
                        "type": "string",
                        "description": "partition QOS name"
                    },
                    "state": {
                        "type": "string",
                        "description": "Partition state"
                    },
                    "total_cpus": {
                        "type": "integer",
                        "description": "Total cpus in partition"
                    },
                    "total_nodes": {
                        "type": "integer",
                        "description": "Total number of nodes in partition"
                    },
                    "tres": {
                        "type": "string",
                        "description": "configured TRES in partition"
                    },
                    "maximum_memory_per_cpu": {
                        "type": "integer",
                        "format": "int64",
                        "description": "maximum memory per allocated CPU (MiB)"
                    },
                    "default_memory_per_node": {
                        "type": "integer",
                        "format": "int64",
                        "description": "default MB memory per allocated node"
                    }
                }
            },
            "v0.0.38_partitions_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "partitions": {
                        "type": "array",
                        "description": "partition info",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_partition"
                        }
                    }
                }
            },
            "v0.0.38_reservation": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string",
                        "description": "Allowed accounts"
                    },
                    "burst_buffer": {
                        "type": "string",
                        "description": "Reserved burst buffer"
                    },
                    "core_count": {
                        "type": "integer",
                        "description": "Number of reserved cores"
                    },
                    "core_spec_cnt": {
                        "type": "integer",
                        "description": "Number of reserved specialized cores"
                    },
                    "end_time": {
                        "type": "integer",
                        "description": "End time of the reservation"
                    },
                    "features": {
                        "type": "string",
                        "description": "List of features"
                    },
                    "flags": {
                        "type": "array",
                        "description": "Reservation options",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "string",
                        "description": "List of groups permitted to use the reserved nodes"
                    },
                    "licenses": {
                        "type": "string",
                        "description": "List of licenses"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "description": "Maximum delay in which jobs outside of the reservation will be permitted to overlap once any jobs are queued for the reservation"
                    },
                    "name": {
                        "type": "string",
                        "description": "Reservationn name"
                    },
                    "node_count": {
                        "type": "integer",
                        "description": "Count of nodes reserved"
                    },
                    "node_list": {
                        "type": "string",
                        "description": "List of reserved nodes"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Partition"
                    },
                    "purge_completed": {
                        "type": "object",
                        "description": "If PURGE_COMP flag is set the amount of seconds this reservation will sit idle until it is revoked",
                        "properties": {
                            "time": {
                                "type": "integer",
                                "description": "amount of seconds this reservation will sit idle until it is revoked"
                            }
                        }
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "Start time of reservation"
                    },
                    "watts": {
                        "type": "integer",
                        "description": "amount of power to reserve in watts"
                    },
                    "tres": {
                        "type": "string",
                        "description": "List of TRES"
                    },
                    "users": {
                        "type": "string",
                        "description": "List of users"
                    }
                }
            },
            "v0.0.38_reservations_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "reservations": {
                        "type": "array",
                        "description": "reservation info",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_reservation"
                        }
                    }
                }
            },
            "v0.0.38_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.38_error"
                }
            },
            "v0.0.38_error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "error message"
                    },
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    }
                }
            },
            "v0.0.38_signal": {
                "type": "string",
                "description": "POSIX signal name",
                "format": "int32",
                "enum": [
                    "HUP",
                    "INT",
                    "QUIT",
                    "ABRT",
                    "KILL",
                    "ALRM",
                    "TERM",
                    "USR1",
                    "USR2",
                    "URG",
                    "CONT",
                    "STOP",
                    "TSTP",
                    "TTIN",
                    "TTOU"
                ]
            },
            "v0.0.38_job_submission_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "job_id": {
                        "description": "new job ID",
                        "type": "integer"
                    },
                    "step_id": {
                        "description": "new job step ID",
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "description": "Message to user from job_submit plugin",
                        "type": "string"
                    }
                }
            },
            "v0.0.38_job_submission": {
                "required": [
                    "script"
                ],
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Executable script (full contents) to run in batch step"
                    },
                    "job": {
                        "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
                    },
                    "jobs": {
                        "description": "Properties of an HetJob",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
                        }
                    }
                }
            },
            "v0.0.38_jobs_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "jobs": {
                        "type": "array",
                        "description": "job descriptions",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_job_response_properties"
                        }
                    }
                }
            },
            "v0.0.38_job_response_properties": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Charge resources used by this job to specified account"
                    },
                    "accrue_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time job is eligible for running"
                    },
                    "admin_comment": {
                        "type": "string",
                        "description": "administrator's arbitrary comment"
                    },
                    "array_job_id": {
                        "type": "integer",
                        "description": "job_id of a job array or 0 if N\/A"
                    },
                    "array_task_id": {
                        "type": "integer",
                        "description": "task_id of a job array"
                    },
                    "array_max_tasks": {
                        "type": "integer",
                        "description": "Maximum number of running array tasks"
                    },
                    "array_task_string": {
                        "type": "string",
                        "description": "string expression of task IDs in this record"
                    },
                    "association_id": {
                        "type": "integer",
                        "description": "association id for job"
                    },
                    "batch_features": {
                        "type": "string",
                        "description": "features required for batch script's node"
                    },
                    "batch_flag": {
                        "type": "boolean",
                        "description": "if batch: queued job with script"
                    },
                    "batch_host": {
                        "type": "string",
                        "description": "name of host running batch script"
                    },
                    "flags": {
                        "type": "array",
                        "description": "Job flags",
                        "items": {
                            "type": "string"
                        }
                    },
                    "burst_buffer": {
                        "type": "string",
                        "description": "burst buffer specifications"
                    },
                    "burst_buffer_state": {
                        "type": "string",
                        "description": "burst buffer state info"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "name of cluster that the job is on"
                    },
                    "cluster_features": {
                        "type": "string",
                        "description": "comma separated list of required cluster features"
                    },
                    "command": {
                        "type": "string",
                        "description": "command to be executed"
                    },
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "container": {
                        "type": "string",
                        "description": "absolute path to OCI container bundle"
                    },
                    "contiguous": {
                        "type": "boolean",
                        "description": "job requires contiguous nodes"
                    },
                    "core_spec": {
                        "type": "string",
                        "description": "specialized core count"
                    },
                    "thread_spec": {
                        "type": "string",
                        "description": "specialized thread count"
                    },
                    "cores_per_socket": {
                        "type": "string",
                        "description": "cores per socket required by job"
                    },
                    "billable_tres": {
                        "type": "number",
                        "description": "billable TRES"
                    },
                    "cpus_per_task": {
                        "type": "string",
                        "description": "number of processors required for each task"
                    },
                    "cpu_frequency_minimum": {
                        "type": "string",
                        "description": "Minimum cpu frequency"
                    },
                    "cpu_frequency_maximum": {
                        "type": "string",
                        "description": "Maximum cpu frequency"
                    },
                    "cpu_frequency_governor": {
                        "type": "string",
                        "description": "cpu frequency governor"
                    },
                    "cpus_per_tres": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "deadline": {
                        "type": "integer",
                        "description": "job start deadline "
                    },
                    "delay_boot": {
                        "type": "integer",
                        "description": "command to be executed"
                    },
                    "dependency": {
                        "type": "string",
                        "description": "synchronize job execution with other jobs"
                    },
                    "derived_exit_code": {
                        "type": "integer",
                        "description": "highest exit code of all job steps"
                    },
                    "eligible_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time job is eligible for running"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time of termination, actual or expected"
                    },
                    "excluded_nodes": {
                        "type": "string",
                        "description": "comma separated list of excluded nodes"
                    },
                    "exit_code": {
                        "type": "integer",
                        "description": "exit code for job"
                    },
                    "features": {
                        "type": "string",
                        "description": "comma separated list of required features"
                    },
                    "federation_origin": {
                        "type": "string",
                        "description": "Origin cluster's name"
                    },
                    "federation_siblings_active": {
                        "type": "string",
                        "description": "string of active sibling names"
                    },
                    "federation_siblings_viable": {
                        "type": "string",
                        "description": "string of viable sibling names"
                    },
                    "gres_detail": {
                        "type": "array",
                        "description": "Job flags",
                        "items": {
                            "type": "string"
                        }
                    },
                    "group_id": {
                        "type": "integer",
                        "description": "group job submitted as"
                    },
                    "job_id": {
                        "type": "integer",
                        "description": "job ID"
                    },
                    "job_resources": {
                        "$ref": "#\/components\/schemas\/v0.0.38_job_resources"
                    },
                    "job_state": {
                        "type": "string",
                        "description": "state of the job"
                    },
                    "last_sched_evaluation": {
                        "type": "integer",
                        "description": "last time job was evaluated for scheduling"
                    },
                    "licenses": {
                        "type": "string",
                        "description": "licenses required by the job"
                    },
                    "max_cpus": {
                        "type": "integer",
                        "description": "maximum number of cpus usable by job"
                    },
                    "max_nodes": {
                        "type": "integer",
                        "description": "maximum number of nodes usable by job"
                    },
                    "mcs_label": {
                        "type": "string",
                        "description": "mcs_label if mcs plugin in use"
                    },
                    "memory_per_tres": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the job"
                    },
                    "nodes": {
                        "type": "string",
                        "description": "list of nodes allocated to job"
                    },
                    "nice": {
                        "type": "integer",
                        "description": "requested priority change"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "description": "number of tasks to invoke on each core"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "description": "number of tasks to invoke on each socket"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "description": "number of tasks to invoke on each board"
                    },
                    "cpus": {
                        "type": "integer",
                        "description": "minimum number of cpus required by job"
                    },
                    "node_count": {
                        "type": "integer",
                        "description": "minimum number of nodes required by job"
                    },
                    "tasks": {
                        "type": "integer",
                        "description": "requested task count"
                    },
                    "het_job_id": {
                        "type": "integer",
                        "description": "job ID of hetjob leader"
                    },
                    "het_job_id_set": {
                        "type": "string",
                        "description": "job IDs for all components"
                    },
                    "het_job_offset": {
                        "type": "integer",
                        "description": "HetJob component offset from leader"
                    },
                    "partition": {
                        "type": "string",
                        "description": "name of assigned partition"
                    },
                    "memory_per_node": {
                        "type": "integer",
                        "description": "minimum real memory per node"
                    },
                    "memory_per_cpu": {
                        "type": "integer",
                        "description": "minimum real memory per cpu"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "description": "minimum # CPUs per node"
                    },
                    "minimum_tmp_disk_per_node": {
                        "type": "integer",
                        "description": "minimum tmp disk per node"
                    },
                    "preempt_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "preemption signal time"
                    },
                    "pre_sus_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time job ran prior to last suspend"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "relative priority of the job"
                    },
                    "profile": {
                        "type": "array",
                        "description": "Job profiling requested",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qos": {
                        "type": "string",
                        "description": "Quality of Service"
                    },
                    "reboot": {
                        "type": "boolean",
                        "description": "node reboot requested before start"
                    },
                    "required_nodes": {
                        "type": "string",
                        "description": "comma separated list of required nodes"
                    },
                    "requeue": {
                        "type": "boolean",
                        "description": "enable or disable job requeue option"
                    },
                    "resize_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time of latest size change"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "description": "count of job restarts"
                    },
                    "resv_name": {
                        "type": "string",
                        "description": "reservation name"
                    },
                    "shared": {
                        "type": "string",
                        "description": "type and if job can share nodes with other jobs"
                    },
                    "show_flags": {
                        "type": "array",
                        "description": "details requested",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "description": "sockets per board required by job"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "description": "sockets per node required by job"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time execution begins, actual or expected"
                    },
                    "state_description": {
                        "type": "string",
                        "description": "optional details for state_reason"
                    },
                    "state_reason": {
                        "type": "string",
                        "description": "reason job still pending or failed"
                    },
                    "standard_error": {
                        "type": "string",
                        "description": "pathname of job's stderr file"
                    },
                    "standard_input": {
                        "type": "string",
                        "description": "pathname of job's stdin file"
                    },
                    "standard_output": {
                        "type": "string",
                        "description": "pathname of job's stdout file"
                    },
                    "submit_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time of job submission"
                    },
                    "suspend_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "time job last suspended or resumed"
                    },
                    "system_comment": {
                        "type": "string",
                        "description": "slurmctld's arbitrary comment"
                    },
                    "time_limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "maximum run time in minutes"
                    },
                    "time_minimum": {
                        "type": "integer",
                        "format": "int64",
                        "description": "minimum run time in minutes"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "description": "threads per core required by job"
                    },
                    "tres_bind": {
                        "type": "string",
                        "description": "Task to TRES binding directives"
                    },
                    "tres_freq": {
                        "type": "string",
                        "description": "TRES frequency directives"
                    },
                    "tres_per_job": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "tres_per_node": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "tres_per_socket": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "tres_per_task": {
                        "type": "string",
                        "description": "semicolon delimited list of TRES=# values"
                    },
                    "tres_req_str": {
                        "type": "string",
                        "description": "tres requested in the job"
                    },
                    "tres_alloc_str": {
                        "type": "string",
                        "description": "tres used in the job"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "user id the job runs as"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "user the job runs as"
                    },
                    "wckey": {
                        "type": "string",
                        "description": "wckey for job"
                    },
                    "current_working_directory": {
                        "type": "string",
                        "description": "pathname of working directory"
                    }
                }
            },
            "v0.0.38_job_resources": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string",
                        "description": "list of assigned job nodes"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "description": "number of assigned job cpus"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "description": "number of assigned job hosts"
                    },
                    "allocated_nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_node_allocation"
                        },
                        "description": "array of allocated nodes"
                    }
                }
            },
            "v0.0.38_node_allocation": {
                "type": "object",
                "properties": {
                    "memory": {
                        "type": "integer",
                        "description": "amount of assigned job memory"
                    },
                    "cpus": {
                        "type": "integer",
                        "description": "number of assigned job CPUs"
                    },
                    "sockets": {
                        "type": "object",
                        "description": "assignment status of each socket by numeric socket id",
                        "properties": {
                            "cores": {
                                "type": "object",
                                "description": "assignment status of each core by core id in each socket"
                            }
                        }
                    },
                    "nodename": {
                        "type": "string",
                        "description": "node name"
                    }
                }
            },
            "v0.0.38_job_properties": {
                "type": "object",
                "required": [
                    "environment"
                ],
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Charge resources used by this job to specified account."
                    },
                    "account_gather_frequency": {
                        "type": "string",
                        "description": "Define the job accounting and profiling sampling intervals."
                    },
                    "argv": {
                        "type": "array",
                        "description": "Arguments to the script.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "array": {
                        "type": "string",
                        "description": "Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used."
                    },
                    "batch_features": {
                        "type": "string",
                        "description": "features required for batch script's node"
                    },
                    "begin_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time."
                    },
                    "burst_buffer": {
                        "type": "string",
                        "description": "Burst buffer specification."
                    },
                    "cluster_constraint": {
                        "type": "string",
                        "description": "Specifies features that a federated cluster must have to have a sibling job submitted to it."
                    },
                    "comment": {
                        "type": "string",
                        "description": "An arbitrary comment."
                    },
                    "constraints": {
                        "type": "string",
                        "description": "node features required by job."
                    },
                    "container": {
                        "type": "string",
                        "description": "absolute path to OCI container bundle"
                    },
                    "core_specification": {
                        "type": "integer",
                        "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
                    },
                    "cores_per_socket": {
                        "type": "integer",
                        "description": "Restrict node selection to nodes with at least the specified number of cores per socket."
                    },
                    "cpu_binding": {
                        "type": "string",
                        "description": "Cpu binding"
                    },
                    "cpu_binding_hint": {
                        "type": "string",
                        "description": "Cpu binding hint"
                    },
                    "cpu_frequency": {
                        "type": "string",
                        "description": "Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s)."
                    },
                    "cpus_per_gpu": {
                        "type": "string",
                        "description": "Number of CPUs requested per allocated GPU."
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "description": "Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task."
                    },
                    "current_working_directory": {
                        "type": "string",
                        "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
                    },
                    "deadline": {
                        "type": "string",
                        "description": "Remove the job if no ending is possible before this deadline (start > (deadline - time[-min]))."
                    },
                    "delay_boot": {
                        "type": "integer",
                        "description": "Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period."
                    },
                    "dependency": {
                        "type": "string",
                        "description": "Defer the start of this job until the specified dependencies have been satisfied completed."
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Specify alternate distribution methods for remote processes."
                    },
                    "environment": {
                        "type": "object",
                        "description": "Dictionary of environment entries."
                    },
                    "exclusive": {
                        "type": "string",
                        "description": "The job allocation can share nodes just other users with the \"user\" option or with the \"mcs\" option).",
                        "enum": [
                            "user",
                            "mcs",
                            "true",
                            "false"
                        ]
                    },
                    "get_user_environment": {
                        "type": "boolean",
                        "description": "Load new login environment for user on job node."
                    },
                    "gres": {
                        "type": "string",
                        "description": "Specifies a comma delimited list of generic consumable resources."
                    },
                    "gres_flags": {
                        "type": "string",
                        "description": "Specify generic resource task binding options.",
                        "enum": [
                            "disable-binding",
                            "enforce-binding"
                        ]
                    },
                    "gpu_binding": {
                        "type": "string",
                        "description": "Requested binding of tasks to GPU."
                    },
                    "gpu_frequency": {
                        "type": "string",
                        "description": "Requested GPU frequency."
                    },
                    "gpus": {
                        "type": "string",
                        "description": "GPUs per job."
                    },
                    "gpus_per_node": {
                        "type": "string",
                        "description": "GPUs per node."
                    },
                    "gpus_per_socket": {
                        "type": "string",
                        "description": "GPUs per socket."
                    },
                    "gpus_per_task": {
                        "type": "string",
                        "description": "GPUs per task."
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Specify the job is to be submitted in a held state (priority of zero)."
                    },
                    "kill_on_invalid_dependency": {
                        "type": "boolean",
                        "description": "If a job has an invalid dependency, then Slurm is to terminate it."
                    },
                    "licenses": {
                        "type": "string",
                        "description": "Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job."
                    },
                    "mail_type": {
                        "type": "string",
                        "description": "Notify user by email when certain event types occur."
                    },
                    "mail_user": {
                        "type": "string",
                        "description": "User to receive email notification of state changes as defined by mail_type."
                    },
                    "mcs_label": {
                        "type": "string",
                        "description": "This parameter is a group among the groups of the user."
                    },
                    "memory_binding": {
                        "type": "string",
                        "description": "Bind tasks to memory."
                    },
                    "memory_per_cpu": {
                        "type": "integer",
                        "description": "Minimum real memory per cpu (MB)."
                    },
                    "memory_per_gpu": {
                        "type": "integer",
                        "description": "Minimum memory required per allocated GPU."
                    },
                    "memory_per_node": {
                        "type": "integer",
                        "description": "Minimum real memory per node (MB)."
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "description": "Minimum number of CPUs per node."
                    },
                    "minimum_nodes": {
                        "type": "boolean",
                        "description": "If a range of node counts is given, prefer the smaller count."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specify a name for the job allocation."
                    },
                    "nice": {
                        "type": "integer",
                        "description": "Run the job with an adjusted scheduling priority within Slurm."
                    },
                    "no_kill": {
                        "type": "boolean",
                        "description": "Do not automatically terminate a job if one of the nodes it has been allocated fails."
                    },
                    "nodes": {
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "description": "Request that a minimum of minnodes nodes and a maximum node count.",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "open_mode": {
                        "type": "string",
                        "description": "Open the output and error files using append or truncate mode as specified.",
                        "default": "append",
                        "enum": [
                            "append",
                            "truncate"
                        ]
                    },
                    "oversubscribe": {
                        "type": "boolean",
                        "description": "The job allocation can over-subscribe resources with other running jobs.",
                        "default": "false"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Request a specific partition for the resource allocation."
                    },
                    "prefer": {
                        "type": "string",
                        "description": "Comma delimited list of features for scheduler to prefer but not a strict requirement like a constraint. Value can be used for job submission but is only displayed for PENDING jobs."
                    },
                    "priority": {
                        "type": "string",
                        "description": "Request a specific job priority."
                    },
                    "qos": {
                        "type": "string",
                        "description": "Request a quality of service for the job."
                    },
                    "requeue": {
                        "type": "boolean",
                        "description": "Specifies that the batch job should eligible to being requeue."
                    },
                    "reservation": {
                        "type": "string",
                        "description": "Allocate resources for the job from the named reservation."
                    },
                    "signal": {
                        "pattern": "(B:|)sig_num(@sig_time|)",
                        "type": "string",
                        "description": "When a job is within sig_time seconds of its end time, send it the signal sig_num."
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "description": "Restrict node selection to nodes with at least the specified number of sockets."
                    },
                    "spread_job": {
                        "type": "boolean",
                        "description": "Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes."
                    },
                    "standard_error": {
                        "type": "string",
                        "description": "Instruct Slurm to connect the batch script's standard error directly to the file name."
                    },
                    "standard_input": {
                        "type": "string",
                        "description": "Instruct Slurm to connect the batch script's standard input directly to the file name specified."
                    },
                    "standard_output": {
                        "type": "string",
                        "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
                    },
                    "tasks": {
                        "type": "integer",
                        "description": "Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources."
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "description": "Request the maximum ntasks be invoked on each core."
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "description": "Request the maximum ntasks be invoked on each node."
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "description": "Request the maximum ntasks be invoked on each socket."
                    },
                    "thread_specification": {
                        "type": "integer",
                        "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "description": "Restrict node selection to nodes with at least the specified number of threads per core."
                    },
                    "time_limit": {
                        "type": "integer",
                        "description": "Step time limit in minutes."
                    },
                    "time_minimum": {
                        "type": "integer",
                        "description": "Minimum run time in minutes."
                    },
                    "wait_all_nodes": {
                        "type": "boolean",
                        "description": "Do not begin execution until all nodes are ready for use."
                    },
                    "wckey": {
                        "type": "string",
                        "description": "Specify wckey to be used with job."
                    }
                }
            },
            "v0.0.38_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string",
                        "description": "computer architecture"
                    },
                    "burstbuffer_network_address": {
                        "type": "string",
                        "description": "BcastAddr"
                    },
                    "boards": {
                        "type": "integer",
                        "description": "total number of boards per node"
                    },
                    "boot_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "timestamp of node boot"
                    },
                    "cores": {
                        "type": "integer",
                        "description": "number of cores per socket"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "description": "Default task binding"
                    },
                    "cpu_load": {
                        "type": "integer",
                        "format": "int64",
                        "description": "CPU load * 100"
                    },
                    "free_memory": {
                        "type": "integer",
                        "description": "free memory in MiB"
                    },
                    "cpus": {
                        "type": "integer",
                        "description": "configured count of cpus running on the node"
                    },
                    "features": {
                        "type": "string",
                        "description": ""
                    },
                    "active_features": {
                        "type": "string",
                        "description": "list of a node's available features"
                    },
                    "gres": {
                        "type": "string",
                        "description": "list of a node's generic resources"
                    },
                    "gres_drained": {
                        "type": "string",
                        "description": "list of drained GRES"
                    },
                    "gres_used": {
                        "type": "string",
                        "description": "list of GRES in current use"
                    },
                    "mcs_label": {
                        "type": "string",
                        "description": "mcs label if mcs plugin in use"
                    },
                    "name": {
                        "type": "string",
                        "description": "node name to slurm"
                    },
                    "next_state_after_reboot": {
                        "type": "string",
                        "description": "state after reboot"
                    },
                    "next_state_after_reboot_flags": {
                        "type": "array",
                        "description": "node state flags",
                        "items": {
                            "type": "string"
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "state after reboot"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "node's hostname"
                    },
                    "state": {
                        "type": "string",
                        "description": "current node state"
                    },
                    "state_flags": {
                        "type": "array",
                        "description": "node state flags",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operating_system": {
                        "type": "string",
                        "description": "operating system"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User allowed to use this node"
                    },
                    "partitions": {
                        "type": "array",
                        "description": "assigned partitions",
                        "items": {
                            "type": "string"
                        }
                    },
                    "port": {
                        "type": "integer",
                        "description": "TCP port number of the slurmd"
                    },
                    "real_memory": {
                        "type": "integer",
                        "description": "configured MB of real memory on the node"
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_changed_at": {
                        "type": "integer",
                        "description": "Time stamp when reason was set"
                    },
                    "reason_set_by_user": {
                        "type": "string",
                        "description": "User that set the reason"
                    },
                    "slurmd_start_time": {
                        "type": "integer",
                        "format": "int64",
                        "description": "timestamp of slurmd startup"
                    },
                    "sockets": {
                        "type": "integer",
                        "description": "total number of sockets per node"
                    },
                    "threads": {
                        "type": "integer",
                        "description": "number of threads per core"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "description": "configured MB of total disk in TMP_FS"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "arbitrary priority of node for scheduling"
                    },
                    "tres": {
                        "type": "string",
                        "description": "TRES on node"
                    },
                    "tres_used": {
                        "type": "string",
                        "description": "TRES used on node"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double",
                        "description": "TRES weight used on node"
                    },
                    "slurmd_version": {
                        "type": "string",
                        "description": "Slurmd version"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Allocated CPUs"
                    },
                    "idle_cpus": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Idle CPUs"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Allocated memory (MB)"
                    }
                }
            },
            "v0.0.38_nodes_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_error"
                        }
                    },
                    "nodes": {
                        "type": "array",
                        "description": "nodes info",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.38_node"
                        }
                    }
                }
            },
            "v0.0.38_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "dbv0.0.38_diag": {
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "time_start": {
                                "type": "integer",
                                "description": "Unix timestamp of start time"
                            },
                            "rollups": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Rollup statistics",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Type of rollup"
                                        },
                                        "last_run": {
                                            "type": "integer",
                                            "description": "Timestamp of last rollup"
                                        },
                                        "last_cycle": {
                                            "type": "integer",
                                            "description": "Timestamp of last cycle"
                                        },
                                        "max_cycle": {
                                            "type": "integer",
                                            "description": "Max time of all cycles"
                                        },
                                        "total_time": {
                                            "type": "integer",
                                            "description": "Total time (s) spent doing rollup"
                                        },
                                        "mean_cycles": {
                                            "type": "integer",
                                            "description": "Average time (s) of cycle"
                                        }
                                    }
                                }
                            },
                            "RPCs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Statistics by RPC type",
                                    "properties": {
                                        "rpc": {
                                            "type": "string",
                                            "description": "RPC type"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "description": "Number of RPCs"
                                        },
                                        "time": {
                                            "type": "object",
                                            "description": "Time values",
                                            "properties": {
                                                "average": {
                                                    "type": "integer",
                                                    "description": "Average time spent processing this RPC type"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total time spent processing this RPC type"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "Statistics by user RPCs",
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "description": "User name"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "description": "Number of RPCs"
                                        },
                                        "time": {
                                            "type": "object",
                                            "description": "Time values",
                                            "properties": {
                                                "average": {
                                                    "type": "integer",
                                                    "description": "Average time spent processing each user RPC"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total time spent processing each user RPC"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dbv0.0.38_account": {
                "type": "object",
                "description": "Account description",
                "properties": {
                    "associations": {
                        "type": "array",
                        "description": "List of assigned associations",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
                        }
                    },
                    "coordinators": {
                        "type": "array",
                        "description": "List of assigned coordinators",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_coordinator_info"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of account"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of account"
                    },
                    "organization": {
                        "type": "string",
                        "description": "Assigned organization of account"
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of account",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    }
                }
            },
            "dbv0.0.38_account_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "List of accounts",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_account"
                        }
                    }
                }
            },
            "dbv0.0.38_coordinator_info": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of user"
                    },
                    "direct": {
                        "type": "integer",
                        "description": "If user is coordinator of this account directly or coordinator status was inherited from a higher account in the tree"
                    }
                }
            },
            "dbv0.0.38_association_short_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Account name"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "Cluster name"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Partition name (optional)"
                    },
                    "user": {
                        "type": "string",
                        "description": "User name"
                    }
                }
            },
            "dbv0.0.38_response_account_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_wckey_add": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_wckey_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "wckeys": {
                        "type": "array",
                        "description": "List of wckeys",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
                        }
                    }
                }
            },
            "dbv0.0.38_wckey": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "Cluster name"
                    },
                    "id": {
                        "type": "integer",
                        "description": "wckey database unique id"
                    },
                    "name": {
                        "type": "string",
                        "description": "wckey name"
                    },
                    "user": {
                        "type": "string",
                        "description": "wckey user"
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of wckey",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "accounting": {
                        "type": "array",
                        "description": "List of accounting records",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_accounting"
                        }
                    }
                }
            },
            "dbv0.0.38_response_wckey_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_cluster_add": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_cluster_info": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "description": "Information about controller",
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "Hostname"
                            },
                            "port": {
                                "type": "integer",
                                "description": "Port number"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of cluster",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Cluster name"
                    },
                    "nodes": {
                        "type": "string",
                        "description": "Assigned nodes"
                    },
                    "select_plugin": {
                        "type": "string",
                        "description": "Configured select plugin"
                    },
                    "associations": {
                        "type": "object",
                        "description": "Information about associations",
                        "properties": {
                            "root": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "description": "Number rpc version"
                    },
                    "tres": {
                        "type": "array",
                        "description": "List of TRES in cluster",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
                        }
                    }
                }
            },
            "dbv0.0.38_response_cluster_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_user_update": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_user": {
                "type": "object",
                "description": "User description",
                "properties": {
                    "administrator_level": {
                        "type": "string",
                        "description": "Description of administrator level"
                    },
                    "associations": {
                        "type": "array",
                        "description": "Assigned associations",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
                        }
                    },
                    "coordinators": {
                        "type": "array",
                        "description": "List of assigned coordinators",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_coordinator_info"
                        }
                    },
                    "default": {
                        "type": "object",
                        "description": "Default settings",
                        "properties": {
                            "account": {
                                "type": "string",
                                "description": "Default account name"
                            },
                            "wckey": {
                                "type": "string",
                                "description": "Default wckey"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of user",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "User name"
                    }
                }
            },
            "dbv0.0.38_user_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "users": {
                        "type": "array",
                        "description": "Array of users",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_user"
                        }
                    }
                }
            },
            "dbv0.0.38_response_user_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_association": {
                "type": "object",
                "description": "Association description",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Assigned account"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "Assigned cluster"
                    },
                    "default": {
                        "type": "object",
                        "description": "Default settings",
                        "properties": {
                            "qos": {
                                "type": "string",
                                "description": "Default QOS"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of association",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "max": {
                        "type": "object",
                        "description": "Max settings",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "description": "Max jobs settings",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "description": "Max jobs per settings",
                                        "properties": {
                                            "wall_clock": {
                                                "type": "integer",
                                                "description": "Max wallclock per job"
                                            }
                                        }
                                    }
                                }
                            },
                            "per": {
                                "type": "object",
                                "description": "Max per settings",
                                "properties": {
                                    "account": {
                                        "type": "object",
                                        "description": "Max per accounting settings",
                                        "properties": {
                                            "wall_clock": {
                                                "type": "integer",
                                                "description": "Max wallclock per account"
                                            }
                                        }
                                    }
                                }
                            },
                            "tres": {
                                "type": "object",
                                "description": "Max TRES settings",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "description": "Max TRES per settings",
                                        "properties": {
                                            "job": {
                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                            },
                                            "node": {
                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                            }
                                        }
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "minutes": {
                                        "type": "object",
                                        "description": "Max TRES minutes settings",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "description": "Max TRES minutes per settings",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    }
                                                }
                                            },
                                            "total": {
                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "min": {
                        "type": "object",
                        "description": "Min settings",
                        "properties": {
                            "priority_threshold": {
                                "type": "integer",
                                "description": "Min priority threshold"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string",
                        "description": "Parent account name"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Assigned partition"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Assigned priority"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "description": "Raw fairshare shares"
                    },
                    "usage": {
                        "type": "object",
                        "description": "Association usage",
                        "properties": {
                            "accrue_job_count": {
                                "type": "integer",
                                "description": "Jobs accuring priority"
                            },
                            "group_used_wallclock": {
                                "type": "number",
                                "description": "Group used wallclock time (s)"
                            },
                            "fairshare_factor": {
                                "type": "number",
                                "description": "Fairshare factor"
                            },
                            "fairshare_shares": {
                                "type": "integer",
                                "description": "Fairshare shares"
                            },
                            "normalized_priority": {
                                "type": "integer",
                                "description": "Currently active jobs"
                            },
                            "normalized_shares": {
                                "type": "number",
                                "description": "Normalized shares"
                            },
                            "effective_normalized_usage": {
                                "type": "number",
                                "description": "Effective normalized usage"
                            },
                            "raw_usage": {
                                "type": "integer",
                                "description": "Raw usage"
                            },
                            "job_count": {
                                "type": "integer",
                                "description": "Total jobs submitted"
                            },
                            "fairshare_level": {
                                "type": "number",
                                "description": "Fairshare level"
                            }
                        }
                    },
                    "user": {
                        "type": "string",
                        "description": "Assigned user"
                    },
                    "QOS": {
                        "type": "array",
                        "description": "Assigned QOS",
                        "items": {
                            "type": "string",
                            "description": "Assigned single QOS name"
                        }
                    }
                }
            },
            "dbv0.0.38_associations_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "associations": {
                        "type": "array",
                        "description": "Array of associations",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_association"
                        }
                    }
                }
            },
            "dbv0.0.38_qos": {
                "type": "object",
                "description": "QOS description",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "QOS description"
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of QOS",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "Database id"
                    },
                    "limits": {
                        "type": "object",
                        "description": "Assigned limits",
                        "properties": {
                            "factor": {
                                "type": "number",
                                "description": "factor to apply to TRES count for associations using this QOS"
                            },
                            "max": {
                                "type": "object",
                                "description": "Limits on max settings",
                                "properties": {
                                    "wall_clock": {
                                        "type": "object",
                                        "description": "Limit on wallclock settings",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "description": "Limit on wallclock per settings",
                                                "properties": {
                                                    "qos": {
                                                        "type": "integer",
                                                        "description": "Max wallclock per QOS"
                                                    },
                                                    "job": {
                                                        "type": "integer",
                                                        "description": "Max wallclock per job"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "jobs": {
                                        "type": "object",
                                        "description": "Limits on jobs settings",
                                        "properties": {
                                            "active_jobs": {
                                                "type": "object",
                                                "description": "Limits on active jobs settings",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "description": "Limits on active jobs per settings",
                                                        "properties": {
                                                            "account": {
                                                                "type": "integer",
                                                                "description": "Max jobs per account"
                                                            },
                                                            "user": {
                                                                "type": "integer",
                                                                "description": "Max jobs per user"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "accruing": {
                                        "type": "object",
                                        "description": "Limits on accruing priority",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "description": "Max accuring priority per setting",
                                                "properties": {
                                                    "account": {
                                                        "type": "integer",
                                                        "description": "Max accuring priority per account"
                                                    },
                                                    "user": {
                                                        "type": "integer",
                                                        "description": "Max accuring priority per user"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "tres": {
                                        "type": "object",
                                        "description": "Limits on TRES",
                                        "properties": {
                                            "minutes": {
                                                "type": "object",
                                                "description": "Max TRES minutes settings",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "description": "Max TRES minutes per settings",
                                                        "properties": {
                                                            "job": {
                                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                            },
                                                            "account": {
                                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                            },
                                                            "user": {
                                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                            },
                                                            "qos": {
                                                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "description": "Max TRES per settings",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    },
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    },
                                                    "node": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "min": {
                                "type": "object",
                                "description": "Min limit settings",
                                "properties": {
                                    "priority_threshold": {
                                        "type": "integer",
                                        "description": "Min priority threshold"
                                    },
                                    "tres": {
                                        "type": "object",
                                        "description": "Min tres settings",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "description": "Min tres per settings",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "preempt": {
                        "type": "object",
                        "description": "Preemption settings",
                        "properties": {
                            "list": {
                                "type": "array",
                                "description": "List of preemptable QOS",
                                "items": {
                                    "type": "string",
                                    "description": "Preemptable QOS"
                                }
                            },
                            "mode": {
                                "type": "array",
                                "description": "List of preemption modes",
                                "items": {
                                    "type": "string",
                                    "description": "Preemption mode"
                                }
                            },
                            "exempt_time": {
                                "type": "integer",
                                "description": "Grace period (s) before jobs can preempted"
                            }
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "QOS priority"
                    },
                    "usage_factor": {
                        "type": "number",
                        "description": "Usage factor"
                    },
                    "usage_threshold": {
                        "type": "number",
                        "description": "Usage threshold"
                    },
                    "name": {
                        "description": "Assigned name of QOS",
                        "type": "string"
                    }
                }
            },
            "dbv0.0.38_qos_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "qos": {
                        "type": "array",
                        "description": "Array of QOS",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
                        }
                    }
                }
            },
            "dbv0.0.38_response_qos": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_qos_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_associations": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_response_tres": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_tres_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                    }
                }
            },
            "dbv0.0.38_tres_list": {
                "type": "array",
                "description": "TRES list of attributes",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "TRES type"
                        },
                        "name": {
                            "type": "string",
                            "description": "TRES name (optional)"
                        },
                        "id": {
                            "type": "integer",
                            "description": "database id"
                        },
                        "count": {
                            "type": "integer",
                            "description": "count of TRES"
                        }
                    }
                }
            },
            "dbv0.0.38_job_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "jobs": {
                        "type": "array",
                        "description": "Array of jobs",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_job"
                        }
                    }
                }
            },
            "dbv0.0.38_job": {
                "type": "object",
                "description": "Single job description",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Account charged by job"
                    },
                    "comment": {
                        "type": "object",
                        "description": "Job comments by type",
                        "properties": {
                            "administrator": {
                                "type": "string",
                                "description": "Administrator set comment"
                            },
                            "job": {
                                "type": "string",
                                "description": "Job comment"
                            },
                            "system": {
                                "type": "string",
                                "description": "System set comment"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "string",
                        "description": "Nodes allocated to job"
                    },
                    "array": {
                        "type": "object",
                        "description": "Array properties (optional)",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "description": "Job id of array"
                            },
                            "limits": {
                                "type": "object",
                                "description": "Limits on array settings",
                                "properties": {
                                    "max": {
                                        "type": "object",
                                        "description": "Limits on array settings",
                                        "properties": {
                                            "running": {
                                                "type": "object",
                                                "description": "Limits on array settings",
                                                "properties": {
                                                    "tasks": {
                                                        "type": "integer",
                                                        "description": "Max running tasks in array at any one time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "task": {
                                "type": "string",
                                "description": "Array task"
                            },
                            "task_id": {
                                "type": "integer",
                                "description": "Array task id"
                            }
                        }
                    },
                    "time": {
                        "type": "object",
                        "description": "Time properties",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "description": "Total time elapsed"
                            },
                            "eligible": {
                                "type": "integer",
                                "description": "Total time eligible to run"
                            },
                            "end": {
                                "type": "integer",
                                "description": "Timestamp of when job ended"
                            },
                            "start": {
                                "type": "integer",
                                "description": "Timestamp of when job started"
                            },
                            "submission": {
                                "type": "integer",
                                "description": "Timestamp of when job submitted"
                            },
                            "suspended": {
                                "type": "integer",
                                "description": "Timestamp of when job last suspended"
                            },
                            "system": {
                                "type": "object",
                                "description": "System time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "description": "System time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job, in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job, in microseconds"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "description": "User land time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                                    }
                                }
                            },
                            "limit": {
                                "type": "integer",
                                "description": "Job wall clock time limit"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "Assigned cluster"
                    },
                    "constraints": {
                        "type": "string",
                        "description": "Constraints on job"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
                    },
                    "flags": {
                        "type": "array",
                        "description": "List of properties of job",
                        "items": {
                            "type": "string",
                            "description": "String of property name"
                        }
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group to run job"
                    },
                    "het": {
                        "type": "object",
                        "description": "Heterogeneous Job details (optional)",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "description": "Parent HetJob id"
                            },
                            "job_offset": {
                                "type": "integer",
                                "description": "Offset of this job to parent"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "description": "Job id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Assigned job name"
                    },
                    "mcs": {
                        "type": "object",
                        "description": "Multi-Category Security",
                        "properties": {
                            "label": {
                                "type": "string",
                                "description": "Assigned MCS label"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string",
                        "description": "List of nodes allocated for job"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Assigned job's partition"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority"
                    },
                    "qos": {
                        "type": "string",
                        "description": "Assigned qos name"
                    },
                    "required": {
                        "type": "object",
                        "description": "Job run requirements",
                        "properties": {
                            "CPUs": {
                                "type": "integer",
                                "description": "Required number of CPUs"
                            },
                            "memory": {
                                "type": "integer",
                                "description": "Required amount of memory (MiB)"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string",
                        "description": "User who requested job killed"
                    },
                    "reservation": {
                        "type": "object",
                        "description": "Reservation usage details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "Database id of reservation"
                            },
                            "name": {
                                "type": "integer",
                                "description": "Name of reservation"
                            }
                        }
                    },
                    "state": {
                        "type": "object",
                        "description": "State properties of job",
                        "properties": {
                            "current": {
                                "type": "string",
                                "description": "Current state of job"
                            },
                            "reason": {
                                "type": "string",
                                "description": "Last reason job didn't run"
                            }
                        }
                    },
                    "steps": {
                        "type": "array",
                        "description": "Job step description",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_job_step"
                        }
                    },
                    "tres": {
                        "type": "object",
                        "description": "TRES settings",
                        "properties": {
                            "allocated": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                            },
                            "requested": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                            }
                        }
                    },
                    "user": {
                        "type": "string",
                        "description": "Job user"
                    },
                    "wckey": {
                        "type": "object",
                        "description": "Job assigned wckey details",
                        "properties": {
                            "wckey": {
                                "type": "string",
                                "description": "Job assigned wckey"
                            },
                            "flags": {
                                "type": "array",
                                "description": "wckey flags",
                                "items": {
                                    "type": "string",
                                    "description": "Flag string"
                                }
                            }
                        }
                    },
                    "working_directory": {
                        "type": "string",
                        "description": "Directory where job was initially started"
                    },
                    "container": {
                        "type": "string",
                        "description": "absolute path to OCI container bundle"
                    }
                }
            },
            "dbv0.0.38_job_exit_code": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Job exit status"
                    },
                    "return_code": {
                        "type": "integer",
                        "description": "Return code from parent process"
                    },
                    "signal": {
                        "type": "object",
                        "description": "Signal details (if signaled)",
                        "properties": {
                            "signal_id": {
                                "type": "integer",
                                "description": "Signal number process received"
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of signal received"
                            }
                        }
                    }
                }
            },
            "dbv0.0.38_job_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "description": "Time properties",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "description": "Total time elapsed"
                            },
                            "end": {
                                "type": "integer",
                                "description": "Timestamp of when job ended"
                            },
                            "start": {
                                "type": "integer",
                                "description": "Timestamp of when job started"
                            },
                            "suspended": {
                                "type": "integer",
                                "description": "Timestamp of when job last suspended"
                            },
                            "system": {
                                "type": "object",
                                "description": "System time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "description": "System time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job, in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job, in microseconds"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "description": "User land time values",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
                    },
                    "nodes": {
                        "type": "object",
                        "description": "Node details",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "description": "Total number of nodes in step"
                            },
                            "range": {
                                "type": "string",
                                "description": "Nodes in step"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "description": "Task properties",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "description": "Number of tasks in step"
                            }
                        }
                    },
                    "pid": {
                        "type": "string",
                        "description": "First process PID"
                    },
                    "CPU": {
                        "type": "object",
                        "description": "CPU properties",
                        "properties": {
                            "requested_frequency": {
                                "type": "object",
                                "description": "CPU frequency requested",
                                "properties": {
                                    "min": {
                                        "type": "integer",
                                        "description": "Min CPU frequency"
                                    },
                                    "max": {
                                        "type": "integer",
                                        "description": "Max CPU frequency"
                                    }
                                }
                            },
                            "governor": {
                                "type": "array",
                                "description": "CPU governor",
                                "items": {
                                    "type": "string",
                                    "description": "CPU governor type"
                                }
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string",
                        "description": "User who requested job killed"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of job step"
                    },
                    "statistics": {
                        "type": "object",
                        "description": "Statistics of job step",
                        "properties": {
                            "CPU": {
                                "type": "object",
                                "description": "Statistics of CPU",
                                "properties": {
                                    "actual_frequency": {
                                        "type": "integer",
                                        "description": "Actual frequency of CPU during step"
                                    }
                                }
                            },
                            "energy": {
                                "type": "object",
                                "description": "Statistics of energy",
                                "properties": {
                                    "consumed": {
                                        "type": "integer",
                                        "description": "Energy consumed during step"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "description": "Step details",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "description": "Parent job id"
                            },
                            "het": {
                                "type": "object",
                                "description": "Heterogeneous job details",
                                "properties": {
                                    "component": {
                                        "type": "integer",
                                        "description": "Parent HetJob component id"
                                    }
                                }
                            },
                            "id": {
                                "type": "string",
                                "description": "Step id"
                            },
                            "name": {
                                "type": "string",
                                "description": "Step name"
                            }
                        }
                    },
                    "task": {
                        "description": "Task distribution properties",
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "description": "TRES usage",
                        "properties": {
                            "requested": {
                                "type": "object",
                                "description": "TRES requested for job",
                                "properties": {
                                    "average": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "max": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    }
                                }
                            },
                            "consumed": {
                                "type": "object",
                                "description": "TRES requested for job",
                                "properties": {
                                    "average": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "max": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                                    }
                                }
                            },
                            "allocated": {
                                "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                            }
                        }
                    }
                }
            },
            "dbv0.0.38_config_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "tres": {
                        "type": "array",
                        "description": "Array of TRES",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "Array of accounts",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_account"
                        }
                    },
                    "associations": {
                        "type": "array",
                        "description": "Array of associations",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_association"
                        }
                    },
                    "users": {
                        "type": "array",
                        "description": "Array of users",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_user"
                        }
                    },
                    "qos": {
                        "type": "array",
                        "description": "Array of qos",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
                        }
                    },
                    "wckeys": {
                        "type": "array",
                        "description": "Array of wckeys",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
                        }
                    }
                }
            },
            "dbv0.0.38_account_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_config_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    }
                }
            },
            "dbv0.0.38_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                }
            },
            "dbv0.0.38_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.38_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "string",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "dbv0.0.38_update_users": {
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_user"
                        }
                    }
                },
                "type": "object"
            },
            "dbv0.0.38_update_qos": {
                "properties": {
                    "qos": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
                        }
                    }
                },
                "type": "object"
            },
            "dbv0.0.38_update_account": {
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_account"
                        }
                    }
                },
                "type": "object"
            },
            "dbv0.0.38_clusters_properties": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                    }
                }
            },
            "dbv0.0.38_response_associations_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
                    },
                    "errors": {
                        "type": "array",
                        "description": "Slurm errors",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_error"
                        }
                    },
                    "removed_associations": {
                        "type": "array",
                        "description": "the associations",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "dbv0.0.38_tres_update": {
                "type": "object",
                "properties": {
                    "tres": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                    }
                }
            },
            "dbv0.0.38_set_config": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
                        }
                    },
                    "TRES": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_user"
                        }
                    },
                    "qos": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
                        }
                    },
                    "wckeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
                        }
                    },
                    "associations": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/dbv0.0.38_association"
                        }
                    }
                }
            },
            "dbv0.0.38_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "integer",
                        "description": "total seconds allocated"
                    },
                    "id": {
                        "type": "integer",
                        "description": "association\/wckey ID"
                    },
                    "start": {
                        "type": "integer",
                        "description": "UNIX timestamp when accounting period started"
                    },
                    "TRES": {
                        "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                    }
                }
            },
            "dbv0.0.39_diag": {
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_rec_ptr"
                    }
                }
            },
            "dbv0.0.39_account_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    }
                }
            },
            "dbv0.0.39_wckey_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    }
                }
            },
            "dbv0.0.39_user_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    }
                }
            },
            "dbv0.0.39_associations_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    }
                }
            },
            "dbv0.0.39_qos_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    }
                }
            },
            "dbv0.0.39_tres_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_list"
                    }
                }
            },
            "dbv0.0.39_clusters_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "dbv0.0.39_config_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "dbv0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#\/components\/schemas\/dbv0.0.39_warning"
                }
            },
            "dbv0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/dbv0.0.39_error"
                }
            },
            "dbv0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "dbv0.0.39_update_users": {
                "properties": {
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_update_qos": {
                "properties": {
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_response_associations_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "removed_associations": {
                        "type": "array",
                        "description": "the associations",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "dbv0.0.39_tres_update": {
                "type": "object",
                "properties": {
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_set_config": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    },
                    "TRES": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                        }
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    }
                }
            },
            "v0.0.39_stats_rec_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_stats_rec"
            },
            "v0.0.39_stats_rec": {
                "type": "object",
                "properties": {
                    "time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollups": {
                        "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats_ptr"
                    },
                    "RPCs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_user_list"
                    }
                },
                "required": []
            },
            "v0.0.39_rollup_stats_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats"
            },
            "v0.0.39_rollup_stats": {
                "type": "array",
                "description": "list of recorded rollup statistics",
                "items": {
                    "type": "object",
                    "description": "recorded rollup statistics",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type",
                            "enum": [
                                "internal",
                                "user",
                                "unknown"
                            ]
                        },
                        "last run": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last time rollup ran (UNIX timestamp)"
                        },
                        "max_cycle": {
                            "type": "integer",
                            "format": "int64",
                            "description": "longest rollup time (seconds)"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "total time spent doing rollups (seconds)"
                        },
                        "total_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "number of rollups since last_run"
                        },
                        "mean_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "average time for rollup (seconds)"
                        }
                    }
                }
            },
            "v0.0.39_stats_rpc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc"
                }
            },
            "v0.0.39_stats_rpc": {
                "type": "object",
                "properties": {
                    "rpc": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_stats_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_stats_user"
                }
            },
            "v0.0.39_stats_user": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_account_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_account"
                }
            },
            "v0.0.39_account": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "organization"
                ]
            },
            "v0.0.39_assoc_short_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
                }
            },
            "v0.0.39_assoc_short": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_coord_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_coord"
                }
            },
            "v0.0.39_coord": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "direct": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_wckey_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_wckey"
                }
            },
            "v0.0.39_wckey": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#\/components\/schemas\/v0.0.39_accounting_list"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "cluster",
                    "name",
                    "user"
                ]
            },
            "v0.0.39_accounting_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_accounting"
                }
            },
            "v0.0.39_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TRES": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres"
                    }
                },
                "required": []
            },
            "v0.0.39_tres": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "v0.0.39_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_user"
                }
            },
            "v0.0.39_user": {
                "type": "object",
                "properties": {
                    "administrator_level": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "string"
                            },
                            "wckey": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "DELETED"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_assoc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_assoc"
                }
            },
            "v0.0.39_assoc": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "qos": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    },
                    "max": {
                        "type": "object",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            },
                                            "accruing": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            },
                                            "submitted": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            },
                                            "wall_clock": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    },
                                    "active": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    },
                                    "accruing": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    }
                                }
                            },
                            "tres": {
                                "type": "object",
                                "properties": {
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                    },
                                    "minutes": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    }
                                                }
                                            },
                                            "total": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            }
                                        }
                                    },
                                    "group": {
                                        "type": "object",
                                        "properties": {
                                            "minutes": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            },
                                            "active": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            }
                                        }
                                    },
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "job": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            },
                                            "node": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            }
                                        }
                                    }
                                }
                            },
                            "per": {
                                "type": "object",
                                "properties": {
                                    "account": {
                                        "type": "object",
                                        "properties": {
                                            "wall_clock": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "min": {
                        "type": "object",
                        "properties": {
                            "priority_threshold": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_string_id_list"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usage": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage_ptr"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_tres_str": {
                "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
            },
            "v0.0.39_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_qos_string_id_list": {
                "type": "array",
                "description": "List of QOS names",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_assoc_usage_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage"
            },
            "v0.0.39_assoc_usage": {
                "type": "object",
                "properties": {
                    "accrue_job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_used_wallclock": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_factor": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_shares": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "normalized_priority": {
                        "type": "number",
                        "format": "double"
                    },
                    "normalized_shares": {
                        "type": "number",
                        "format": "double"
                    },
                    "effective_normalized_usage": {
                        "type": "number"
                    },
                    "normalized_usage": {
                        "type": "number"
                    },
                    "raw_usage": {
                        "type": "number"
                    },
                    "active_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fairshare_level": {
                        "type": "number"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_qos"
                }
            },
            "v0.0.39_qos": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "ADD",
                                "REMOVE",
                                "PARTITION_MINIMUM_NODE",
                                "PARTITION_MAXIMUM_NODE",
                                "PARTITION_TIME_LIMIT",
                                "ENFORCE_USAGE_THRESHOLD",
                                "NO_RESERVE",
                                "REQUIRED_RESERVATION",
                                "DENY_LIMIT",
                                "OVERRIDE_PARTITION_QOS",
                                "NO_DECAY",
                                "USAGE_FACTOR_SAFE"
                            ]
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "grace_time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "max": {
                                "type": "object",
                                "properties": {
                                    "active_jobs": {
                                        "type": "object",
                                        "properties": {
                                            "accruing": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            },
                                            "count": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                            },
                                            "minutes": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "qos": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                            },
                                                            "job": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                            },
                                                            "account": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                            },
                                                            "user": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    },
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    },
                                                    "node": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "wall_clock": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "qos": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    },
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "jobs": {
                                        "type": "object",
                                        "properties": {
                                            "active_jobs": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "account": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                            },
                                                            "user": {
                                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "accruing": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "factor": {
                                "type": "number",
                                "format": "double"
                            },
                            "min": {
                                "type": "object",
                                "properties": {
                                    "priority_threshold": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "preempt": {
                        "type": "object",
                        "properties": {
                            "list": {
                                "$ref": "#\/components\/schemas\/v0.0.39_qos_preempt_list"
                            },
                            "mode": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "flags",
                                    "enum": [
                                        "DISABLED",
                                        "SUSPEND",
                                        "REQUEUE",
                                        "CANCEL",
                                        "GANG"
                                    ]
                                }
                            },
                            "exempt_time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "usage_factor": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    },
                    "usage_threshold": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_preempt_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job"
                }
            },
            "v0.0.39_job": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "object",
                        "properties": {
                            "administrator": {
                                "type": "string"
                            },
                            "job": {
                                "type": "string"
                            },
                            "system": {
                                "type": "string"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "array": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "limits": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "type": "object",
                                        "properties": {
                                            "running": {
                                                "type": "object",
                                                "properties": {
                                                    "tasks": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "task_id": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "task": {
                                "type": "string"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_assoc_id"
                    },
                    "block": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eligible": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "submission": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "limit": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "CLEAR_SCHEDULING",
                                "NOT_SET",
                                "STARTED_ON_SUBMIT",
                                "STARTED_ON_SCHEDULE",
                                "STARTED_ON_BACKFILL",
                                "START_RECEIVED"
                            ]
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "het": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "job_offset": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mcs": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "qos": {
                        "type": "string"
                    },
                    "required": {
                        "type": "object",
                        "properties": {
                            "CPUs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "memory_per_cpu": {
                                "$ref": "#\/components\/schemas\/v0.0.39_mem_per_cpus"
                            },
                            "memory_per_node": {
                                "$ref": "#\/components\/schemas\/v0.0.39_mem_per_node"
                            },
                            "memory": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "reservation": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "script": {
                        "type": "string"
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    },
                    "steps": {
                        "$ref": "#\/components\/schemas\/v0.0.39_step_list"
                    },
                    "submit_line": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "allocated": {
                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                            },
                            "requested": {
                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                            }
                        }
                    },
                    "used_gres": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "wckey": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_tag"
                    },
                    "working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_assoc_id": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
            },
            "v0.0.39_assoc_short_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
            },
            "v0.0.39_job_exit_code": {
                "type": "object",
                "description": "job exit details",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "exit status"
                    },
                    "return_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "return code (numeric)"
                    },
                    "signal": {
                        "type": "object",
                        "description": "Job exited due to signal",
                        "properties": {
                            "signal_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "signal numeric ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "signal name"
                            }
                        }
                    }
                }
            },
            "v0.0.39_step_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_step"
                }
            },
            "v0.0.39_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "range": {
                                "type": "string"
                            },
                            "list": {
                                "$ref": "#\/components\/schemas\/v0.0.39_step_nodes"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "pid": {
                        "type": "string"
                    },
                    "CPU": {
                        "type": "object",
                        "properties": {
                            "requested_frequency": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    },
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                    }
                                }
                            },
                            "governor": {
                                "type": "string"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "CPU": {
                                "type": "object",
                                "properties": {
                                    "actual_frequency": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "energy": {
                                "type": "object",
                                "properties": {
                                    "consumed": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#\/components\/schemas\/v0.0.39_slurm_step_id"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "task": {
                        "type": "object",
                        "properties": {
                            "distribution": {
                                "type": "string"
                            }
                        }
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_step_tres_req_max"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_step_tres_req_min"
                                    },
                                    "average": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                    }
                                }
                            },
                            "consumed": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_step_tres_usage_max"
                                    },
                                    "min": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_step_tres_usage_min"
                                    },
                                    "average": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                    },
                                    "total": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                    }
                                }
                            },
                            "allocated": {
                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_slurm_step_id": {
                "type": "object",
                "description": "step details",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "JobID"
                    },
                    "step_het_component": {
                        "type": "integer",
                        "format": "int32",
                        "description": "HetStep"
                    },
                    "step_id": {
                        "type": "string"
                    }
                }
            },
            "v0.0.39_step_nodes": {
                "$ref": "#\/components\/schemas\/v0.0.39_hostlist"
            },
            "v0.0.39_hostlist": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_step_tres_req_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_req_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_wckey_tag": {
                "type": "object",
                "description": "wckey details",
                "properties": {
                    "wckey": {
                        "type": "string",
                        "description": "wckey"
                    },
                    "flags": {
                        "type": "array",
                        "description": "active flags",
                        "items": {
                            "type": "string",
                            "description": "flag",
                            "enum": [
                                "ASSIGNED_DEFAULT"
                            ]
                        }
                    }
                }
            },
            "v0.0.39_cluster_rec_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec"
                }
            },
            "v0.0.39_cluster_rec": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "select_plugin": {
                        "type": "string"
                    },
                    "associations": {
                        "type": "object",
                        "properties": {
                            "root": {
                                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                    }
                },
                "required": []
            }
        },
        "securitySchemes": {
            "user": {
                "type": "apiKey",
                "description": "User name",
                "name": "X-SLURM-USER-NAME",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "description": "User access token",
                "name": "X-SLURM-USER-TOKEN",
                "in": "header"
            },
            "bearerAuth": {
                "type": "http",
                "description": "Bearer Authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "openapi": "3.0.2",
    "info": {
        "title": "Slurm Rest API",
        "description": "API to access and control Slurm.",
        "termsOfService": "https:\/\/github.com\/SchedMD\/slurm\/blob\/master\/DISCLAIMER",
        "contact": {
            "name": "SchedMD LLC",
            "url": "https:\/\/www.schedmd.com\/",
            "email": "sales@schedmd.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"
        },
        "version": "Slurm-23.11.1&openapi\/v0.0.39&openapi\/slurmctld&openapi\/slurmdbd&openapi\/v0.0.38&openapi\/dbv0.0.38&openapi\/dbv0.0.39"
    },
    "security": [
        {
            "user": [],
            "token": []
        },
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "\/"
        }
    ]
}