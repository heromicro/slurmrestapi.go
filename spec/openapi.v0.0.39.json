{
    "tags": [
        {
            "name": "slurm",
            "description": "methods that query slurmctld"
        },
        {
            "name": "openapi",
            "description": "methods that query for OpenAPI specifications"
        }
    ],
    "paths": {
        "\/slurm\/v0.0.39\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_diag",
                "summary": "get diagnostics",
                "responses": {
                    "200": {
                        "description": "diagnostic results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_diag"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/licenses": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_slurmctld_get_licenses",
                "summary": "get all Slurm tracked license info",
                "responses": {
                    "200": {
                        "description": "results of get all licenses",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request licenses"
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/ping": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_ping",
                "summary": "ping test",
                "responses": {
                    "200": {
                        "description": "results of ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_pings"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_pings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_jobs",
                "summary": "get list of jobs",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_job",
                "summary": "get job info",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job matching JobId not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_update_job",
                "summary": "update job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_cancel_job",
                "summary": "cancel or signal job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signal",
                        "in": "query",
                        "description": "signal to send to job",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "description": "POSIX signal name",
                            "enum": [
                                "HUP",
                                "INT",
                                "QUIT",
                                "ABRT",
                                "KILL",
                                "ALRM",
                                "TERM",
                                "USR1",
                                "USR2",
                                "URG",
                                "CONT",
                                "STOP",
                                "TSTP",
                                "TTIN",
                                "TTOU"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job cancelled or sent signal",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Job cancel request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/job\/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_submit_job",
                "summary": "submit new job",
                "requestBody": {
                    "description": "submit new job",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job submitted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job rejected",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/nodes": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_nodes",
                "summary": "get all node info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no nodes in cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/node\/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_node",
                "summary": "get node info",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_update_node",
                "summary": "update node properties",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update node",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node update failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_delete_node",
                "summary": "delete node",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node delete request failed",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/partitions": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_partitions",
                "summary": "get all partition info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/partition\/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_partition",
                "summary": "get partition info",
                "parameters": [
                    {
                        "name": "partition_name",
                        "in": "path",
                        "description": "Slurm Partition Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/reservations": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_reservations",
                "summary": "get all reservation info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurm\/v0.0.39\/reservation\/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0_0_39_get_reservation",
                "summary": "get reservation info",
                "parameters": [
                    {
                        "name": "reservation_name",
                        "in": "path",
                        "description": "Slurm Reservation Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/openapi.yaml": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi.json": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/openapi\/v3": {
            "get": {
                "tags": [
                    "openapi"
                ],
                "responses": {
                    "200": {
                        "description": "OpenAPI Specification"
                    }
                },
                "summary": "Retrieve OpenAPI Specification"
            },
            "servers": [
                {
                    "url": "\/"
                }
            ]
        },
        "\/slurmdb\/v0.0.39\/job\/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_job",
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "description": "Unable to find job",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/slurmdb\/v0.0.39\/config": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_config",
                "summary": "Dump all configuration information",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "description": "Unable to dump config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_set_config",
                "summary": "Load all configuration information",
                "responses": {
                    "200": {
                        "description": "Load config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unable to set config",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update config",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "\/slurmdb\/v0.0.39\/tres": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_update_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to update TRES",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Set TRES info",
                "requestBody": {
                    "description": "Add or Update TRES",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to retrieve TRES"
                    }
                },
                "summary": "Get TRES info"
            }
        },
        "\/slurmdb\/v0.0.39\/qos\/{qos_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0_0_39_delete_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete qos"
                    },
                    "default": {
                        "description": "Unable to delete QOS",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0_0_39_get_single_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/qos": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_qos",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "List of QOS'"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get QOS list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_update_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "description": "Unable to update QOSs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update QOSs",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
                            }
                        }
                    },
                    "required": true
                },
                "summary": "Set QOS info"
            }
        },
        "\/slurmdb\/v0.0.39\/associations": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_update_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "description": "Unable to update associations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Set associations info",
                "requestBody": {
                    "description": "Add or update associations",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association list"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_delete_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Associations not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete associations"
            }
        },
        "\/slurmdb\/v0.0.39\/association": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get association info"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_delete_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Association not found or unable to delete association",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete association"
            }
        },
        "\/slurmdb\/v0.0.39\/user\/{user_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete user",
                "operationId": "slurmdb_v0_0_39_delete_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "User not found or unable to delete user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user info",
                "operationId": "slurmdb_v0_0_39_get_user",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/users": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "Update user",
                "operationId": "slurmdb_v0_0_39_update_users",
                "requestBody": {
                    "description": "add or update user",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Update users"
                    },
                    "default": {
                        "description": "User not found or not able to update user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get user list",
                "operationId": "slurmdb_v0_0_39_get_users",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/cluster\/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0_0_39_delete_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete cluster"
                    },
                    "default": {
                        "description": "Cluster not found or unable to delete cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0_0_39_get_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/clusters": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get cluster list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_add_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Unable to add cluster",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Add clusters",
                "requestBody": {
                    "description": "Add or update clusters",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "\/slurmdb\/v0.0.39\/wckey\/{wckey}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0_0_39_delete_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete wckey"
                    },
                    "default": {
                        "description": "wckey not found or unable to delete wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0_0_39_get_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckey"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/wckeys": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get wckey list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_add_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "Unable to add wckey",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Add wckeys",
                "requestBody": {
                    "description": "add wckeys",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "\/slurmdb\/v0.0.39\/account\/{account_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "Delete account",
                "operationId": "slurmdb_v0_0_39_delete_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Delete account"
                    },
                    "default": {
                        "description": "Unable to delete account",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "Get account info",
                "operationId": "slurmdb_v0_0_39_get_account",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "\/slurmdb\/v0.0.39\/accounts": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_accounts",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get account list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_update_accounts",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        },
                        "description": "Add\/update list of accounts"
                    },
                    "default": {
                        "description": "Unable to add or update accounts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Update accounts",
                "requestBody": {
                    "description": "update\/create accounts",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                            }
                        },
                        "application\/x-yaml": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "\/slurmdb\/v0.0.39\/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "users",
                        "description": "Filter by comma delimited list of user names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "submit_time",
                        "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "account",
                        "description": "Comma delimited list of accounts to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "description": "Comma delimited list of associations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "description": "Comma delimited list of cluster to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "description": "Comma delimited list of constraints to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "description": "Number of CPUs high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "description": "Number of CPUs low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "description": "Report job step information",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "description": "Disable waiting for result from slurmdbd",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "description": "Exit code of job",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "Comma delimited list of formats to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Comma delimited list of groups to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "description": "Comma delimited list of job names to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "description": "Number of nodes high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "description": "Number of nodes low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "description": "Comma delimited list of partitions to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "description": "Comma delimited list of QOS to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Comma delimited list of job reasons to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "description": "Comma delimited list of reservations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "Comma delimited list of states to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "description": "Comma delimited list of job steps to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "description": "Comma delimited list of used nodes to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "description": "Comma delimited list of wckeys to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "description": "Unable to query jobs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get job list"
            }
        },
        "\/slurmdb\/v0.0.39\/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0_0_39_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "description": "Unable to query diagnostics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            },
                            "application\/x-yaml": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "summary": "Get slurmdb diagnostics"
            }
        }
    },
    "components": {
        "schemas": {
            "v0.0.39_diag": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg"
                    }
                }
            },
            "v0.0.39_licenses_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "licenses": {
                        "$ref": "#\/components\/schemas\/v0.0.39_licenses"
                    }
                }
            },
            "v0.0.39_pings": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "pings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_controller_ping_array"
                    }
                }
            },
            "v0.0.39_partitions_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.39_partition_info_array"
                    }
                }
            },
            "v0.0.39_reservations_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "reservations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_array"
                    }
                }
            },
            "status": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    }
                }
            },
            "v0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_warning"
                }
            },
            "v0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explaination of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_error"
                }
            },
            "v0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explaination of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_job_update_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "results": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg_ptr"
                    }
                }
            },
            "v0.0.39_job_submission_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "job_id": {
                        "description": "new job ID",
                        "type": "integer"
                    },
                    "step_id": {
                        "description": "new job step ID",
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "description": "Message to user from job_submit plugin",
                        "type": "string"
                    }
                }
            },
            "v0.0.39_jobs_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_info_msg"
                    }
                }
            },
            "v0.0.39_job_submission": {
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Executable script (full contents) to run in batch step for all job components"
                    },
                    "job": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_list"
                    }
                }
            },
            "v0.0.39_nodes_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/v0.0.39_warnings"
                    },
                    "nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_nodes"
                    }
                }
            },
            "v0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "v0.0.39_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_argv"
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "JOB_RESIZED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "VERBOSE",
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "CPU_BIND_ONE_THREAD_PER_CORE",
                                "CPU_AUTO_BIND_TO_THREADS",
                                "CPU_AUTO_BIND_TO_CORES",
                                "CPU_AUTO_BIND_TO_SOCKETS",
                                "SLURMD_OFF_SPEC",
                                "CPU_BIND_OFF"
                            ]
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cron_entry_ptr"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_env"
                    },
                    "excluded_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "VERBOSE",
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "SORT",
                                "PREFER"
                            ]
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ]
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "power_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "EQUAL_POWER"
                            ]
                        }
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_spank_env"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_JOB",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_cpu"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_node"
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ]
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.39_job_desc_msg_argv": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_string_array": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_cron_entry_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_cron_entry"
            },
            "v0.0.39_cron_entry": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "WILD_MINUTE",
                                "WILD_HOUR",
                                "WILD_DAY_OF_MONTH",
                                "WILD_MONTH",
                                "WILD_DAY_OF_WEEK"
                            ]
                        }
                    },
                    "minute": {
                        "type": "string"
                    },
                    "hour": {
                        "type": "string"
                    },
                    "day_of_month": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day_of_week": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "line": {
                        "type": "object",
                        "properties": {
                            "end": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_job_desc_msg_env": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_csv_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_exclusive": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "flags",
                    "enum": [
                        "true",
                        "false",
                        "user",
                        "mcs"
                    ]
                }
            },
            "v0.0.39_job_desc_msg_spank_env": {
                "$ref": "#\/components\/schemas\/v0.0.39_string_array"
            },
            "v0.0.39_uint32_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_uint16_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_mem_per_cpu": {
                "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
            },
            "v0.0.39_uint64_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_mem_per_node": {
                "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
            },
            "v0.0.39_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "features_act": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
                    },
                    "hostname": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
                    },
                    "name": {
                        "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_uid": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "weight": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_hostlist_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_stats_msg": {
                "type": "object",
                "properties": {
                    "parts_packed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "req_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "req_time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "server_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dbd_agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gettimeofday_latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_mean_depth": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_per_minute": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_queue_length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_submitted": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_started": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_pending": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_states_ts": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_backfilled_het_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_counter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean_try": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_sum": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth_try": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_try_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_queue_len_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_when_last_cycle": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_active": {
                        "type": "boolean"
                    },
                    "rpcs_by_message_type": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_type"
                    },
                    "rpcs_by_user": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_user"
                    }
                },
                "required": []
            },
            "v0.0.39_stats_msg_rpcs_by_type": {
                "type": "array",
                "description": "RPCs by message type",
                "items": {
                    "type": "object",
                    "description": "RPC",
                    "properties": {
                        "message_type": {
                            "type": "string",
                            "description": "Message type as string"
                        },
                        "type_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Message type as integer"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_stats_msg_rpcs_by_user": {
                "type": "array",
                "description": "RPCs by user",
                "items": {
                    "type": "object",
                    "description": "user",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "user name"
                        },
                        "user_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user id (numeric)"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_licenses": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_license"
                }
            },
            "v0.0.39_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string"
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Used": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Remote": {
                        "type": "boolean"
                    },
                    "Reserved": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastConsumed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastDeficit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdate": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_controller_ping_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_controller_ping"
                }
            },
            "v0.0.39_controller_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "pinged": {
                        "type": "string"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_partition_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_partition_info"
                }
            },
            "v0.0.39_partition_info": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "accounts": {
                        "type": "object",
                        "properties": {
                            "deny": {
                                "type": "string"
                            }
                        }
                    },
                    "groups": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            }
                        }
                    },
                    "qos": {
                        "type": "object",
                        "properties": {
                            "assigned": {
                                "type": "string"
                            }
                        }
                    },
                    "alternate": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "configured": {
                                "type": "string"
                            }
                        }
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cpus": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "defaults": {
                        "type": "object",
                        "properties": {
                            "job": {
                                "type": "string"
                            }
                        }
                    },
                    "grace_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximums": {
                        "type": "object",
                        "properties": {
                            "over_time_limit": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "minimums": {
                        "type": "object",
                        "properties": {
                            "nodes": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_sets": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "object",
                        "properties": {
                            "tier": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "timeouts": {
                        "type": "object",
                        "properties": {
                            "suspend": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "suspend_time": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_reservation_info"
                }
            },
            "v0.0.39_reservation_info": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string"
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "core_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specializations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_core_spec"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "features": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "MAINT",
                                "NO_MAINT",
                                "DAILY",
                                "NO_DAILY",
                                "WEEKLY",
                                "NO_WEEKLY",
                                "IGNORE_JOBS",
                                "NO_IGNORE_JOBS",
                                "ANY_NODES",
                                "STATIC",
                                "NO_STATIC",
                                "PART_NODES",
                                "NO_PART_NODES",
                                "OVERLAP",
                                "SPEC_NODES",
                                "FIRST_CORES",
                                "TIME_FLOAT",
                                "REPLACE",
                                "ALL_NODES",
                                "PURGE_COMP",
                                "WEEKDAY",
                                "NO_WEEKDAY",
                                "WEEKEND",
                                "NO_WEEKEND",
                                "FLEX",
                                "NO_FLEX",
                                "DURATION_PLUS",
                                "DURATION_MINUS",
                                "NO_HOLD_JOBS_AFTER_END",
                                "NO_PURGE_COMP",
                                "MAGNETIC",
                                "SKIP",
                                "HOURLY",
                                "NO_HOURLY",
                                "REOCCURRING"
                            ]
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "node_list": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "purge_completed": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "watts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_core_spec": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_reservation_core_spec"
                }
            },
            "v0.0.39_reservation_core_spec": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "core": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_array_response_msg_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg"
            },
            "v0.0.39_job_array_response_msg": {
                "type": "array",
                "description": "Result per ArrayJob",
                "items": {
                    "type": "object",
                    "description": "ArrayJob",
                    "properties": {
                        "job_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "JobId"
                        },
                        "error_code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "numeric error code"
                        },
                        "error": {
                            "type": "string",
                            "description": "error code description"
                        },
                        "why": {
                            "type": "string",
                            "description": "error message"
                        }
                    }
                }
            },
            "v0.0.39_job_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job_info"
                }
            },
            "v0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "accrue_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocating_node": {
                        "type": "string"
                    },
                    "array_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_task_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_max_tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "array_task_string": {
                        "type": "string"
                    },
                    "association_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "batch_flag": {
                        "type": "boolean"
                    },
                    "batch_host": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "JOB_RESIZED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "burst_buffer_state": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cluster_features": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "core_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cores_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "billable_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    },
                    "cpus_per_task": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "cpu_frequency_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_maximum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_governor": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eligible_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "excluded_nodes": {
                        "type": "string"
                    },
                    "exit_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "federation_origin": {
                        "type": "string"
                    },
                    "federation_siblings_active": {
                        "type": "string"
                    },
                    "federation_siblings_viable": {
                        "type": "string"
                    },
                    "gres_detail": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_info_gres_detail"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "het_job_id": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "het_job_id_set": {
                        "type": "string"
                    },
                    "het_job_offset": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_resources": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_res_ptr"
                    },
                    "job_size_str": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "job_state": {
                        "type": "string"
                    },
                    "last_sched_evaluation": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "max_cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "max_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_socket": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_board": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "cpus": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "node_count": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "tasks": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "memory_per_cpu": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_cpu"
                    },
                    "memory_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_node"
                    },
                    "minimum_cpus_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "minimum_tmp_disk_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "power": {
                        "type": "object",
                        "properties": {
                            "flags": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "flags",
                                    "enum": [
                                        "EQUAL_POWER"
                                    ]
                                }
                            }
                        }
                    },
                    "preempt_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "preemptable_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pre_sus_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "string"
                    },
                    "minimum_switches": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "resize_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resv_name": {
                        "type": "string"
                    },
                    "scheduled_nodes": {
                        "type": "string"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
                    },
                    "show_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_description": {
                        "type": "string"
                    },
                    "state_reason": {
                        "type": "string"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "submit_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "suspend_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "system_comment": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "threads_per_core": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "tres_req_str": {
                        "type": "string"
                    },
                    "tres_alloc_str": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "maximum_switch_wait_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "current_working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_float64_no_val": {
                "type": "object",
                "description": "64 bit floating point number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0.0
                    },
                    "number": {
                        "type": "number",
                        "format": "double",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_info_gres_detail": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_res_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_job_res"
            },
            "v0.0.39_job_res": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string"
                    },
                    "allocated_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_nodes": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_res_nodes"
                    }
                },
                "required": []
            },
            "v0.0.39_job_res_nodes": {
                "type": "array",
                "description": "job node resources",
                "items": {}
            },
            "v0.0.39_job_desc_msg_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
                }
            },
            "v0.0.39_nodes": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_node"
                }
            },
            "v0.0.39_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "burstbuffer_network_address": {
                        "type": "string"
                    },
                    "boards": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "boot_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cluster_name": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_load": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "free_mem": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effective_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cpus": {
                        "type": "string"
                    },
                    "energy": {
                        "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy_ptr"
                    },
                    "external_sensors": {
                        "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data_ptr"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "power": {
                        "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data_ptr"
                    },
                    "features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "active_features": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "gres_drained": {
                        "type": "string"
                    },
                    "gres_used": {
                        "type": "string"
                    },
                    "last_busy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "specialized_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "next_state_after_reboot": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "PERFCTRS",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "operating_system": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "partitions": {
                        "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "real_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_changed_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason_set_by_user": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alloc_idle_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres_used": {
                        "type": "string"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double"
                    },
                    "slurmd_start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_acct_gather_energy_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy"
            },
            "v0.0.39_acct_gather_energy": {
                "type": "object",
                "properties": {
                    "average_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "base_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "previous_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_ext_sensors_data_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data"
            },
            "v0.0.39_ext_sensors_data": {
                "type": "object",
                "properties": {
                    "consumed_energy": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                    },
                    "temperature": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "energy_update_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.39_power_mgmt_data_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data"
            },
            "v0.0.39_power_mgmt_data": {
                "type": "object",
                "properties": {
                    "maximum_watts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "current_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "new_maximum_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "peak_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lowest_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "new_job_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time_start_day": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "dbv0.0.39_diag": {
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_rec_ptr"
                    }
                }
            },
            "dbv0.0.39_account_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    }
                }
            },
            "dbv0.0.39_wckey_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    }
                }
            },
            "dbv0.0.39_user_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    }
                }
            },
            "dbv0.0.39_associations_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    }
                }
            },
            "dbv0.0.39_qos_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    }
                }
            },
            "dbv0.0.39_tres_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_list"
                    }
                }
            },
            "dbv0.0.39_clusters_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "dbv0.0.39_config_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    },
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "dbv0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#\/components\/schemas\/dbv0.0.39_warning"
                }
            },
            "dbv0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explaination of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#\/components\/schemas\/dbv0.0.39_error"
                }
            },
            "dbv0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explaination of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "dbv0.0.39_update_users": {
                "properties": {
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_update_qos": {
                "properties": {
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_response_associations_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
                    },
                    "removed_associations": {
                        "type": "array",
                        "description": "the associations",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "dbv0.0.39_tres_update": {
                "type": "object",
                "properties": {
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_set_config": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
                    },
                    "TRES": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
                        }
                    },
                    "accounts": {
                        "$ref": "#\/components\/schemas\/v0.0.39_account_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
                    }
                }
            },
            "v0.0.39_stats_rec_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_stats_rec"
            },
            "v0.0.39_stats_rec": {
                "type": "object",
                "properties": {
                    "time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollups": {
                        "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats_ptr"
                    },
                    "RPCs": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc_list"
                    },
                    "users": {
                        "$ref": "#\/components\/schemas\/v0.0.39_stats_user_list"
                    }
                },
                "required": []
            },
            "v0.0.39_rollup_stats_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats"
            },
            "v0.0.39_rollup_stats": {
                "type": "array",
                "description": "list of recorded rollup statistics",
                "items": {
                    "type": "object",
                    "description": "recorded rollup statistics",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type",
                            "enum": [
                                "internal",
                                "user",
                                "unknown"
                            ]
                        },
                        "last run": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last time rollup ran (UNIX timestamp)"
                        },
                        "max_cycle": {
                            "type": "integer",
                            "format": "int64",
                            "description": "longest rollup time (seconds)"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "total time spent doing rollups (seconds)"
                        },
                        "total_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "number of rollups since last_run"
                        },
                        "mean_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "average time for rollup (seconds)"
                        }
                    }
                }
            },
            "v0.0.39_stats_rpc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc"
                }
            },
            "v0.0.39_stats_rpc": {
                "type": "object",
                "properties": {
                    "rpc": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_stats_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_stats_user"
                }
            },
            "v0.0.39_stats_user": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_account_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_account"
                }
            },
            "v0.0.39_account": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "organization"
                ]
            },
            "v0.0.39_assoc_short_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
                }
            },
            "v0.0.39_assoc_short": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_coord_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_coord"
                }
            },
            "v0.0.39_coord": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "direct": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_wckey_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_wckey"
                }
            },
            "v0.0.39_wckey": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#\/components\/schemas\/v0.0.39_accounting_list"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "cluster",
                    "name",
                    "user"
                ]
            },
            "v0.0.39_accounting_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_accounting"
                }
            },
            "v0.0.39_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TRES": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres"
                    }
                },
                "required": []
            },
            "v0.0.39_tres": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "v0.0.39_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_user"
                }
            },
            "v0.0.39_user": {
                "type": "object",
                "properties": {
                    "administrator_level": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    "associations": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "wckey": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "DELETED"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "wckeys": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_assoc_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_assoc"
                }
            },
            "v0.0.39_assoc": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "qos": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    },
                    "max": {
                        "type": "object",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "wall_clock": {
                                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "min": {
                        "type": "object",
                        "properties": {
                            "priority_threshold": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "qos": {
                        "$ref": "#\/components\/schemas\/v0.0.39_qos_string_id_list"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usage": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage_ptr"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_tres_str": {
                "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
            },
            "v0.0.39_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_qos_string_id_list": {
                "type": "array",
                "description": "List of QOS names",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_assoc_usage_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage"
            },
            "v0.0.39_assoc_usage": {
                "type": "object",
                "properties": {
                    "accrue_job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_used_wallclock": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_factor": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_shares": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "normalized_priority": {
                        "type": "number",
                        "format": "double"
                    },
                    "normalized_shares": {
                        "type": "number",
                        "format": "double"
                    },
                    "effective_normalized_usage": {
                        "type": "number"
                    },
                    "normalized_usage": {
                        "type": "number"
                    },
                    "raw_usage": {
                        "type": "number"
                    },
                    "active_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fairshare_level": {
                        "type": "number"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_qos"
                }
            },
            "v0.0.39_qos": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "ADD",
                                "REMOVE",
                                "PARTITION_MINIMUM_NODE",
                                "PARTITION_MAXIMUM_NODE",
                                "PARTITION_TIME_LIMIT",
                                "ENFORCE_USAGE_THRESHOLD",
                                "NO_RESERVE",
                                "REQUIRED_RESERVATION",
                                "DENY_LIMIT",
                                "OVERRIDE_PARTITION_QOS",
                                "NO_DECAY",
                                "USAGE_FACTOR_SAFE"
                            ]
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "object",
                                "properties": {
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "preempt": {
                        "type": "object",
                        "properties": {
                            "exempt_time": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usage_factor": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    },
                    "usage_threshold": {
                        "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_preempt_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_job"
                }
            },
            "v0.0.39_job": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "object",
                        "properties": {
                            "system": {
                                "type": "string"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "array": {
                        "type": "object",
                        "properties": {
                            "task": {
                                "type": "string"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#\/components\/schemas\/v0.0.39_assoc_id"
                    },
                    "block": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "properties": {
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "CLEAR_SCHEDULING",
                                "NOT_SET",
                                "STARTED_ON_SUBMIT",
                                "STARTED_ON_SCHEDULE",
                                "STARTED_ON_BACKFILL"
                            ]
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "het": {
                        "type": "object",
                        "properties": {
                            "job_offset": {
                                "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mcs": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                    },
                    "qos": {
                        "type": "string"
                    },
                    "required": {
                        "type": "object",
                        "properties": {
                            "memory": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "reservation": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "script": {
                        "type": "string"
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            }
                        }
                    },
                    "steps": {
                        "$ref": "#\/components\/schemas\/v0.0.39_step_list"
                    },
                    "submit_line": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                            }
                        }
                    },
                    "used_gres": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "wckey": {
                        "$ref": "#\/components\/schemas\/v0.0.39_wckey_tag"
                    },
                    "working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_assoc_id": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
            },
            "v0.0.39_assoc_short_ptr": {
                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
            },
            "v0.0.39_job_exit_code": {
                "type": "object",
                "description": "job exit details",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "exit status"
                    },
                    "return_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "return code (numeric)"
                    },
                    "signal": {
                        "type": "object",
                        "description": "Job exited due to signal",
                        "properties": {
                            "signal_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "signal numeric ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "signal name"
                            }
                        }
                    }
                }
            },
            "v0.0.39_step_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_step"
                }
            },
            "v0.0.39_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "properties": {
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
                    },
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "list": {
                                "$ref": "#\/components\/schemas\/v0.0.39_step_nodes"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "pid": {
                        "type": "string"
                    },
                    "CPU": {
                        "type": "object",
                        "properties": {
                            "governor": {
                                "type": "string"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "energy": {
                                "type": "object",
                                "properties": {
                                    "consumed": {
                                        "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "task": {
                        "type": "object",
                        "properties": {
                            "distribution": {
                                "type": "string"
                            }
                        }
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "allocated": {
                                "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_slurm_step_id": {
                "type": "object",
                "description": "step details",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "JobID"
                    },
                    "step_het_component": {
                        "type": "integer",
                        "format": "int32",
                        "description": "HetStep"
                    },
                    "step_id": {
                        "type": "string"
                    }
                }
            },
            "v0.0.39_step_nodes": {
                "$ref": "#\/components\/schemas\/v0.0.39_hostlist"
            },
            "v0.0.39_hostlist": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_step_tres_req_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_req_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_max": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_min": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_tres"
                }
            },
            "v0.0.39_wckey_tag": {
                "type": "object",
                "description": "wckey details",
                "properties": {
                    "wckey": {
                        "type": "string",
                        "description": "wckey"
                    },
                    "flags": {
                        "type": "array",
                        "description": "active flags",
                        "items": {
                            "type": "string",
                            "description": "flag",
                            "enum": [
                                "ASSIGNED_DEFAULT"
                            ]
                        }
                    }
                }
            },
            "v0.0.39_cluster_rec_list": {
                "type": "array",
                "items": {
                    "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec"
                }
            },
            "v0.0.39_cluster_rec": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "properties": {
                            "port": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "CRAY_NATIVE",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "select_plugin": {
                        "type": "string"
                    },
                    "associations": {
                        "type": "object",
                        "properties": {
                            "root": {
                                "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                    }
                },
                "required": []
            }
        },
        "securitySchemes": {
            "user": {
                "type": "apiKey",
                "description": "User name",
                "name": "X-SLURM-USER-NAME",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "description": "User access token",
                "name": "X-SLURM-USER-TOKEN",
                "in": "header"
            },
            "bearerAuth": {
                "type": "http",
                "description": "Bearer Authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "openapi": "3.0.2",
    "info": {
        "title": "Slurm Rest API",
        "description": "API to access and control Slurm.",
        "termsOfService": "https:\/\/github.com\/SchedMD\/slurm\/blob\/master\/DISCLAIMER",
        "contact": {
            "name": "SchedMD LLC",
            "url": "https:\/\/www.schedmd.com\/",
            "email": "sales@schedmd.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"
        },
        "version": "0.0.39"
    },
    "security": [
        {
            "user": [],
            "token": []
        },
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "\/"
        }
    ]
}