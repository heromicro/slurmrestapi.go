/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037Job type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037Job{}

// Dbv0037Job Single job description
type Dbv0037Job struct {
	// Account charged by job
	Account *string `json:"account,omitempty"`
	Comment *Dbv0037JobComment `json:"comment,omitempty"`
	// Nodes allocated to job
	AllocationNodes *string `json:"allocation_nodes,omitempty"`
	Array *Dbv0037JobArray `json:"array,omitempty"`
	Time *Dbv0037JobTime `json:"time,omitempty"`
	Association *Dbv0037AssociationShortInfo `json:"association,omitempty"`
	// Assigned cluster
	Cluster *string `json:"cluster,omitempty"`
	// Constraints on job
	Constraints *string `json:"constraints,omitempty"`
	DerivedExitCode *Dbv0037JobExitCode `json:"derived_exit_code,omitempty"`
	ExitCode *Dbv0037JobExitCode `json:"exit_code,omitempty"`
	// List of properties of job
	Flags []string `json:"flags,omitempty"`
	// User's group to run job
	Group *string `json:"group,omitempty"`
	Het *Dbv0037JobHet `json:"het,omitempty"`
	// Job id
	JobId *int32 `json:"job_id,omitempty"`
	// Assigned job name
	Name *string `json:"name,omitempty"`
	Mcs *Dbv0037JobMcs `json:"mcs,omitempty"`
	// List of nodes allocated for job
	Nodes *string `json:"nodes,omitempty"`
	// Assigned job's partition
	Partition *string `json:"partition,omitempty"`
	// Priority
	Priority *int32 `json:"priority,omitempty"`
	// Assigned qos name
	Qos *string `json:"qos,omitempty"`
	Required *Dbv0037JobRequired `json:"required,omitempty"`
	// User who requested job killed
	KillRequestUser *string `json:"kill_request_user,omitempty"`
	Reservation *Dbv0037JobReservation `json:"reservation,omitempty"`
	State *Dbv0037JobState `json:"state,omitempty"`
	// Job step description
	Steps []Dbv0037JobStep `json:"steps,omitempty"`
	Tres *Dbv0037JobTres `json:"tres,omitempty"`
	// Job user
	User *string `json:"user,omitempty"`
	Wckey *Dbv0037JobWckey `json:"wckey,omitempty"`
	// Directory where job was initially started
	WorkingDirectory *string `json:"working_directory,omitempty"`
}

// NewDbv0037Job instantiates a new Dbv0037Job object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037Job() *Dbv0037Job {
	this := Dbv0037Job{}
	return &this
}

// NewDbv0037JobWithDefaults instantiates a new Dbv0037Job object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037JobWithDefaults() *Dbv0037Job {
	this := Dbv0037Job{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Dbv0037Job) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Dbv0037Job) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *Dbv0037Job) SetAccount(v string) {
	o.Account = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Dbv0037Job) GetComment() Dbv0037JobComment {
	if o == nil || IsNil(o.Comment) {
		var ret Dbv0037JobComment
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetCommentOk() (*Dbv0037JobComment, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Dbv0037Job) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given Dbv0037JobComment and assigns it to the Comment field.
func (o *Dbv0037Job) SetComment(v Dbv0037JobComment) {
	o.Comment = &v
}

// GetAllocationNodes returns the AllocationNodes field value if set, zero value otherwise.
func (o *Dbv0037Job) GetAllocationNodes() string {
	if o == nil || IsNil(o.AllocationNodes) {
		var ret string
		return ret
	}
	return *o.AllocationNodes
}

// GetAllocationNodesOk returns a tuple with the AllocationNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetAllocationNodesOk() (*string, bool) {
	if o == nil || IsNil(o.AllocationNodes) {
		return nil, false
	}
	return o.AllocationNodes, true
}

// HasAllocationNodes returns a boolean if a field has been set.
func (o *Dbv0037Job) HasAllocationNodes() bool {
	if o != nil && !IsNil(o.AllocationNodes) {
		return true
	}

	return false
}

// SetAllocationNodes gets a reference to the given string and assigns it to the AllocationNodes field.
func (o *Dbv0037Job) SetAllocationNodes(v string) {
	o.AllocationNodes = &v
}

// GetArray returns the Array field value if set, zero value otherwise.
func (o *Dbv0037Job) GetArray() Dbv0037JobArray {
	if o == nil || IsNil(o.Array) {
		var ret Dbv0037JobArray
		return ret
	}
	return *o.Array
}

// GetArrayOk returns a tuple with the Array field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetArrayOk() (*Dbv0037JobArray, bool) {
	if o == nil || IsNil(o.Array) {
		return nil, false
	}
	return o.Array, true
}

// HasArray returns a boolean if a field has been set.
func (o *Dbv0037Job) HasArray() bool {
	if o != nil && !IsNil(o.Array) {
		return true
	}

	return false
}

// SetArray gets a reference to the given Dbv0037JobArray and assigns it to the Array field.
func (o *Dbv0037Job) SetArray(v Dbv0037JobArray) {
	o.Array = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *Dbv0037Job) GetTime() Dbv0037JobTime {
	if o == nil || IsNil(o.Time) {
		var ret Dbv0037JobTime
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetTimeOk() (*Dbv0037JobTime, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *Dbv0037Job) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given Dbv0037JobTime and assigns it to the Time field.
func (o *Dbv0037Job) SetTime(v Dbv0037JobTime) {
	o.Time = &v
}

// GetAssociation returns the Association field value if set, zero value otherwise.
func (o *Dbv0037Job) GetAssociation() Dbv0037AssociationShortInfo {
	if o == nil || IsNil(o.Association) {
		var ret Dbv0037AssociationShortInfo
		return ret
	}
	return *o.Association
}

// GetAssociationOk returns a tuple with the Association field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetAssociationOk() (*Dbv0037AssociationShortInfo, bool) {
	if o == nil || IsNil(o.Association) {
		return nil, false
	}
	return o.Association, true
}

// HasAssociation returns a boolean if a field has been set.
func (o *Dbv0037Job) HasAssociation() bool {
	if o != nil && !IsNil(o.Association) {
		return true
	}

	return false
}

// SetAssociation gets a reference to the given Dbv0037AssociationShortInfo and assigns it to the Association field.
func (o *Dbv0037Job) SetAssociation(v Dbv0037AssociationShortInfo) {
	o.Association = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Dbv0037Job) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Dbv0037Job) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Dbv0037Job) SetCluster(v string) {
	o.Cluster = &v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise.
func (o *Dbv0037Job) GetConstraints() string {
	if o == nil || IsNil(o.Constraints) {
		var ret string
		return ret
	}
	return *o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetConstraintsOk() (*string, bool) {
	if o == nil || IsNil(o.Constraints) {
		return nil, false
	}
	return o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *Dbv0037Job) HasConstraints() bool {
	if o != nil && !IsNil(o.Constraints) {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given string and assigns it to the Constraints field.
func (o *Dbv0037Job) SetConstraints(v string) {
	o.Constraints = &v
}

// GetDerivedExitCode returns the DerivedExitCode field value if set, zero value otherwise.
func (o *Dbv0037Job) GetDerivedExitCode() Dbv0037JobExitCode {
	if o == nil || IsNil(o.DerivedExitCode) {
		var ret Dbv0037JobExitCode
		return ret
	}
	return *o.DerivedExitCode
}

// GetDerivedExitCodeOk returns a tuple with the DerivedExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetDerivedExitCodeOk() (*Dbv0037JobExitCode, bool) {
	if o == nil || IsNil(o.DerivedExitCode) {
		return nil, false
	}
	return o.DerivedExitCode, true
}

// HasDerivedExitCode returns a boolean if a field has been set.
func (o *Dbv0037Job) HasDerivedExitCode() bool {
	if o != nil && !IsNil(o.DerivedExitCode) {
		return true
	}

	return false
}

// SetDerivedExitCode gets a reference to the given Dbv0037JobExitCode and assigns it to the DerivedExitCode field.
func (o *Dbv0037Job) SetDerivedExitCode(v Dbv0037JobExitCode) {
	o.DerivedExitCode = &v
}

// GetExitCode returns the ExitCode field value if set, zero value otherwise.
func (o *Dbv0037Job) GetExitCode() Dbv0037JobExitCode {
	if o == nil || IsNil(o.ExitCode) {
		var ret Dbv0037JobExitCode
		return ret
	}
	return *o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetExitCodeOk() (*Dbv0037JobExitCode, bool) {
	if o == nil || IsNil(o.ExitCode) {
		return nil, false
	}
	return o.ExitCode, true
}

// HasExitCode returns a boolean if a field has been set.
func (o *Dbv0037Job) HasExitCode() bool {
	if o != nil && !IsNil(o.ExitCode) {
		return true
	}

	return false
}

// SetExitCode gets a reference to the given Dbv0037JobExitCode and assigns it to the ExitCode field.
func (o *Dbv0037Job) SetExitCode(v Dbv0037JobExitCode) {
	o.ExitCode = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *Dbv0037Job) GetFlags() []string {
	if o == nil || IsNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *Dbv0037Job) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *Dbv0037Job) SetFlags(v []string) {
	o.Flags = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Dbv0037Job) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *Dbv0037Job) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *Dbv0037Job) SetGroup(v string) {
	o.Group = &v
}

// GetHet returns the Het field value if set, zero value otherwise.
func (o *Dbv0037Job) GetHet() Dbv0037JobHet {
	if o == nil || IsNil(o.Het) {
		var ret Dbv0037JobHet
		return ret
	}
	return *o.Het
}

// GetHetOk returns a tuple with the Het field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetHetOk() (*Dbv0037JobHet, bool) {
	if o == nil || IsNil(o.Het) {
		return nil, false
	}
	return o.Het, true
}

// HasHet returns a boolean if a field has been set.
func (o *Dbv0037Job) HasHet() bool {
	if o != nil && !IsNil(o.Het) {
		return true
	}

	return false
}

// SetHet gets a reference to the given Dbv0037JobHet and assigns it to the Het field.
func (o *Dbv0037Job) SetHet(v Dbv0037JobHet) {
	o.Het = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *Dbv0037Job) GetJobId() int32 {
	if o == nil || IsNil(o.JobId) {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetJobIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *Dbv0037Job) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *Dbv0037Job) SetJobId(v int32) {
	o.JobId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Dbv0037Job) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Dbv0037Job) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Dbv0037Job) SetName(v string) {
	o.Name = &v
}

// GetMcs returns the Mcs field value if set, zero value otherwise.
func (o *Dbv0037Job) GetMcs() Dbv0037JobMcs {
	if o == nil || IsNil(o.Mcs) {
		var ret Dbv0037JobMcs
		return ret
	}
	return *o.Mcs
}

// GetMcsOk returns a tuple with the Mcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetMcsOk() (*Dbv0037JobMcs, bool) {
	if o == nil || IsNil(o.Mcs) {
		return nil, false
	}
	return o.Mcs, true
}

// HasMcs returns a boolean if a field has been set.
func (o *Dbv0037Job) HasMcs() bool {
	if o != nil && !IsNil(o.Mcs) {
		return true
	}

	return false
}

// SetMcs gets a reference to the given Dbv0037JobMcs and assigns it to the Mcs field.
func (o *Dbv0037Job) SetMcs(v Dbv0037JobMcs) {
	o.Mcs = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *Dbv0037Job) GetNodes() string {
	if o == nil || IsNil(o.Nodes) {
		var ret string
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetNodesOk() (*string, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *Dbv0037Job) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given string and assigns it to the Nodes field.
func (o *Dbv0037Job) SetNodes(v string) {
	o.Nodes = &v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *Dbv0037Job) GetPartition() string {
	if o == nil || IsNil(o.Partition) {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetPartitionOk() (*string, bool) {
	if o == nil || IsNil(o.Partition) {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *Dbv0037Job) HasPartition() bool {
	if o != nil && !IsNil(o.Partition) {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *Dbv0037Job) SetPartition(v string) {
	o.Partition = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *Dbv0037Job) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *Dbv0037Job) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *Dbv0037Job) SetPriority(v int32) {
	o.Priority = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *Dbv0037Job) GetQos() string {
	if o == nil || IsNil(o.Qos) {
		var ret string
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetQosOk() (*string, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *Dbv0037Job) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given string and assigns it to the Qos field.
func (o *Dbv0037Job) SetQos(v string) {
	o.Qos = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *Dbv0037Job) GetRequired() Dbv0037JobRequired {
	if o == nil || IsNil(o.Required) {
		var ret Dbv0037JobRequired
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetRequiredOk() (*Dbv0037JobRequired, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *Dbv0037Job) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given Dbv0037JobRequired and assigns it to the Required field.
func (o *Dbv0037Job) SetRequired(v Dbv0037JobRequired) {
	o.Required = &v
}

// GetKillRequestUser returns the KillRequestUser field value if set, zero value otherwise.
func (o *Dbv0037Job) GetKillRequestUser() string {
	if o == nil || IsNil(o.KillRequestUser) {
		var ret string
		return ret
	}
	return *o.KillRequestUser
}

// GetKillRequestUserOk returns a tuple with the KillRequestUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetKillRequestUserOk() (*string, bool) {
	if o == nil || IsNil(o.KillRequestUser) {
		return nil, false
	}
	return o.KillRequestUser, true
}

// HasKillRequestUser returns a boolean if a field has been set.
func (o *Dbv0037Job) HasKillRequestUser() bool {
	if o != nil && !IsNil(o.KillRequestUser) {
		return true
	}

	return false
}

// SetKillRequestUser gets a reference to the given string and assigns it to the KillRequestUser field.
func (o *Dbv0037Job) SetKillRequestUser(v string) {
	o.KillRequestUser = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *Dbv0037Job) GetReservation() Dbv0037JobReservation {
	if o == nil || IsNil(o.Reservation) {
		var ret Dbv0037JobReservation
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetReservationOk() (*Dbv0037JobReservation, bool) {
	if o == nil || IsNil(o.Reservation) {
		return nil, false
	}
	return o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *Dbv0037Job) HasReservation() bool {
	if o != nil && !IsNil(o.Reservation) {
		return true
	}

	return false
}

// SetReservation gets a reference to the given Dbv0037JobReservation and assigns it to the Reservation field.
func (o *Dbv0037Job) SetReservation(v Dbv0037JobReservation) {
	o.Reservation = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Dbv0037Job) GetState() Dbv0037JobState {
	if o == nil || IsNil(o.State) {
		var ret Dbv0037JobState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetStateOk() (*Dbv0037JobState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Dbv0037Job) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given Dbv0037JobState and assigns it to the State field.
func (o *Dbv0037Job) SetState(v Dbv0037JobState) {
	o.State = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *Dbv0037Job) GetSteps() []Dbv0037JobStep {
	if o == nil || IsNil(o.Steps) {
		var ret []Dbv0037JobStep
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetStepsOk() ([]Dbv0037JobStep, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *Dbv0037Job) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []Dbv0037JobStep and assigns it to the Steps field.
func (o *Dbv0037Job) SetSteps(v []Dbv0037JobStep) {
	o.Steps = v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *Dbv0037Job) GetTres() Dbv0037JobTres {
	if o == nil || IsNil(o.Tres) {
		var ret Dbv0037JobTres
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetTresOk() (*Dbv0037JobTres, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *Dbv0037Job) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given Dbv0037JobTres and assigns it to the Tres field.
func (o *Dbv0037Job) SetTres(v Dbv0037JobTres) {
	o.Tres = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Dbv0037Job) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Dbv0037Job) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *Dbv0037Job) SetUser(v string) {
	o.User = &v
}

// GetWckey returns the Wckey field value if set, zero value otherwise.
func (o *Dbv0037Job) GetWckey() Dbv0037JobWckey {
	if o == nil || IsNil(o.Wckey) {
		var ret Dbv0037JobWckey
		return ret
	}
	return *o.Wckey
}

// GetWckeyOk returns a tuple with the Wckey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetWckeyOk() (*Dbv0037JobWckey, bool) {
	if o == nil || IsNil(o.Wckey) {
		return nil, false
	}
	return o.Wckey, true
}

// HasWckey returns a boolean if a field has been set.
func (o *Dbv0037Job) HasWckey() bool {
	if o != nil && !IsNil(o.Wckey) {
		return true
	}

	return false
}

// SetWckey gets a reference to the given Dbv0037JobWckey and assigns it to the Wckey field.
func (o *Dbv0037Job) SetWckey(v Dbv0037JobWckey) {
	o.Wckey = &v
}

// GetWorkingDirectory returns the WorkingDirectory field value if set, zero value otherwise.
func (o *Dbv0037Job) GetWorkingDirectory() string {
	if o == nil || IsNil(o.WorkingDirectory) {
		var ret string
		return ret
	}
	return *o.WorkingDirectory
}

// GetWorkingDirectoryOk returns a tuple with the WorkingDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Job) GetWorkingDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.WorkingDirectory) {
		return nil, false
	}
	return o.WorkingDirectory, true
}

// HasWorkingDirectory returns a boolean if a field has been set.
func (o *Dbv0037Job) HasWorkingDirectory() bool {
	if o != nil && !IsNil(o.WorkingDirectory) {
		return true
	}

	return false
}

// SetWorkingDirectory gets a reference to the given string and assigns it to the WorkingDirectory field.
func (o *Dbv0037Job) SetWorkingDirectory(v string) {
	o.WorkingDirectory = &v
}

func (o Dbv0037Job) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037Job) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.AllocationNodes) {
		toSerialize["allocation_nodes"] = o.AllocationNodes
	}
	if !IsNil(o.Array) {
		toSerialize["array"] = o.Array
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Association) {
		toSerialize["association"] = o.Association
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Constraints) {
		toSerialize["constraints"] = o.Constraints
	}
	if !IsNil(o.DerivedExitCode) {
		toSerialize["derived_exit_code"] = o.DerivedExitCode
	}
	if !IsNil(o.ExitCode) {
		toSerialize["exit_code"] = o.ExitCode
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Het) {
		toSerialize["het"] = o.Het
	}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Mcs) {
		toSerialize["mcs"] = o.Mcs
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Partition) {
		toSerialize["partition"] = o.Partition
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.KillRequestUser) {
		toSerialize["kill_request_user"] = o.KillRequestUser
	}
	if !IsNil(o.Reservation) {
		toSerialize["reservation"] = o.Reservation
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Wckey) {
		toSerialize["wckey"] = o.Wckey
	}
	if !IsNil(o.WorkingDirectory) {
		toSerialize["working_directory"] = o.WorkingDirectory
	}
	return toSerialize, nil
}

type NullableDbv0037Job struct {
	value *Dbv0037Job
	isSet bool
}

func (v NullableDbv0037Job) Get() *Dbv0037Job {
	return v.value
}

func (v *NullableDbv0037Job) Set(val *Dbv0037Job) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037Job) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037Job) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037Job(val *Dbv0037Job) *NullableDbv0037Job {
	return &NullableDbv0037Job{value: val, isSet: true}
}

func (v NullableDbv0037Job) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037Job) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


