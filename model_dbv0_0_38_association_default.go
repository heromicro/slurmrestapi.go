/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.38
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038AssociationDefault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038AssociationDefault{}

// Dbv0038AssociationDefault Default settings
type Dbv0038AssociationDefault struct {
	// Default QOS
	Qos *string `json:"qos,omitempty"`
}

// NewDbv0038AssociationDefault instantiates a new Dbv0038AssociationDefault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038AssociationDefault() *Dbv0038AssociationDefault {
	this := Dbv0038AssociationDefault{}
	return &this
}

// NewDbv0038AssociationDefaultWithDefaults instantiates a new Dbv0038AssociationDefault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038AssociationDefaultWithDefaults() *Dbv0038AssociationDefault {
	this := Dbv0038AssociationDefault{}
	return &this
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *Dbv0038AssociationDefault) GetQos() string {
	if o == nil || IsNil(o.Qos) {
		var ret string
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038AssociationDefault) GetQosOk() (*string, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *Dbv0038AssociationDefault) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given string and assigns it to the Qos field.
func (o *Dbv0038AssociationDefault) SetQos(v string) {
	o.Qos = &v
}

func (o Dbv0038AssociationDefault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038AssociationDefault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	return toSerialize, nil
}

type NullableDbv0038AssociationDefault struct {
	value *Dbv0038AssociationDefault
	isSet bool
}

func (v NullableDbv0038AssociationDefault) Get() *Dbv0038AssociationDefault {
	return v.value
}

func (v *NullableDbv0038AssociationDefault) Set(val *Dbv0038AssociationDefault) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038AssociationDefault) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038AssociationDefault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038AssociationDefault(val *Dbv0038AssociationDefault) *NullableDbv0038AssociationDefault {
	return &NullableDbv0038AssociationDefault{value: val, isSet: true}
}

func (v NullableDbv0038AssociationDefault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038AssociationDefault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


