/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0040JobArrayLimitsMaxRunning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0040JobArrayLimitsMaxRunning{}

// V0040JobArrayLimitsMaxRunning struct for V0040JobArrayLimitsMaxRunning
type V0040JobArrayLimitsMaxRunning struct {
	Tasks *int32 `json:"tasks,omitempty"`
}

// NewV0040JobArrayLimitsMaxRunning instantiates a new V0040JobArrayLimitsMaxRunning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0040JobArrayLimitsMaxRunning() *V0040JobArrayLimitsMaxRunning {
	this := V0040JobArrayLimitsMaxRunning{}
	return &this
}

// NewV0040JobArrayLimitsMaxRunningWithDefaults instantiates a new V0040JobArrayLimitsMaxRunning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0040JobArrayLimitsMaxRunningWithDefaults() *V0040JobArrayLimitsMaxRunning {
	this := V0040JobArrayLimitsMaxRunning{}
	return &this
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *V0040JobArrayLimitsMaxRunning) GetTasks() int32 {
	if o == nil || IsNil(o.Tasks) {
		var ret int32
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0040JobArrayLimitsMaxRunning) GetTasksOk() (*int32, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *V0040JobArrayLimitsMaxRunning) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given int32 and assigns it to the Tasks field.
func (o *V0040JobArrayLimitsMaxRunning) SetTasks(v int32) {
	o.Tasks = &v
}

func (o V0040JobArrayLimitsMaxRunning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0040JobArrayLimitsMaxRunning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	return toSerialize, nil
}

type NullableV0040JobArrayLimitsMaxRunning struct {
	value *V0040JobArrayLimitsMaxRunning
	isSet bool
}

func (v NullableV0040JobArrayLimitsMaxRunning) Get() *V0040JobArrayLimitsMaxRunning {
	return v.value
}

func (v *NullableV0040JobArrayLimitsMaxRunning) Set(val *V0040JobArrayLimitsMaxRunning) {
	v.value = val
	v.isSet = true
}

func (v NullableV0040JobArrayLimitsMaxRunning) IsSet() bool {
	return v.isSet
}

func (v *NullableV0040JobArrayLimitsMaxRunning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0040JobArrayLimitsMaxRunning(val *V0040JobArrayLimitsMaxRunning) *NullableV0040JobArrayLimitsMaxRunning {
	return &NullableV0040JobArrayLimitsMaxRunning{value: val, isSet: true}
}

func (v NullableV0040JobArrayLimitsMaxRunning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0040JobArrayLimitsMaxRunning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


