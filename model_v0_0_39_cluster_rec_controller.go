/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039ClusterRecController type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039ClusterRecController{}

// V0039ClusterRecController struct for V0039ClusterRecController
type V0039ClusterRecController struct {
	Port *int32 `json:"port,omitempty"`
}

// NewV0039ClusterRecController instantiates a new V0039ClusterRecController object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039ClusterRecController() *V0039ClusterRecController {
	this := V0039ClusterRecController{}
	return &this
}

// NewV0039ClusterRecControllerWithDefaults instantiates a new V0039ClusterRecController object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039ClusterRecControllerWithDefaults() *V0039ClusterRecController {
	this := V0039ClusterRecController{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V0039ClusterRecController) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039ClusterRecController) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V0039ClusterRecController) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V0039ClusterRecController) SetPort(v int32) {
	o.Port = &v
}

func (o V0039ClusterRecController) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039ClusterRecController) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableV0039ClusterRecController struct {
	value *V0039ClusterRecController
	isSet bool
}

func (v NullableV0039ClusterRecController) Get() *V0039ClusterRecController {
	return v.value
}

func (v *NullableV0039ClusterRecController) Set(val *V0039ClusterRecController) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039ClusterRecController) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039ClusterRecController) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039ClusterRecController(val *V0039ClusterRecController) *NullableV0039ClusterRecController {
	return &NullableV0039ClusterRecController{value: val, isSet: true}
}

func (v NullableV0039ClusterRecController) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039ClusterRecController) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


