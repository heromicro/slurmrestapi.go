/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039JobHet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039JobHet{}

// V0039JobHet struct for V0039JobHet
type V0039JobHet struct {
	JobOffset *V0039Uint32NoVal `json:"job_offset,omitempty"`
}

// NewV0039JobHet instantiates a new V0039JobHet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039JobHet() *V0039JobHet {
	this := V0039JobHet{}
	return &this
}

// NewV0039JobHetWithDefaults instantiates a new V0039JobHet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039JobHetWithDefaults() *V0039JobHet {
	this := V0039JobHet{}
	return &this
}

// GetJobOffset returns the JobOffset field value if set, zero value otherwise.
func (o *V0039JobHet) GetJobOffset() V0039Uint32NoVal {
	if o == nil || IsNil(o.JobOffset) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.JobOffset
}

// GetJobOffsetOk returns a tuple with the JobOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobHet) GetJobOffsetOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.JobOffset) {
		return nil, false
	}
	return o.JobOffset, true
}

// HasJobOffset returns a boolean if a field has been set.
func (o *V0039JobHet) HasJobOffset() bool {
	if o != nil && !IsNil(o.JobOffset) {
		return true
	}

	return false
}

// SetJobOffset gets a reference to the given V0039Uint32NoVal and assigns it to the JobOffset field.
func (o *V0039JobHet) SetJobOffset(v V0039Uint32NoVal) {
	o.JobOffset = &v
}

func (o V0039JobHet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039JobHet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobOffset) {
		toSerialize["job_offset"] = o.JobOffset
	}
	return toSerialize, nil
}

type NullableV0039JobHet struct {
	value *V0039JobHet
	isSet bool
}

func (v NullableV0039JobHet) Get() *V0039JobHet {
	return v.value
}

func (v *NullableV0039JobHet) Set(val *V0039JobHet) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039JobHet) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039JobHet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039JobHet(val *V0039JobHet) *NullableV0039JobHet {
	return &NullableV0039JobHet{value: val, isSet: true}
}

func (v NullableV0039JobHet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039JobHet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


