/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0039QosInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0039QosInfo{}

// Dbv0039QosInfo struct for Dbv0039QosInfo
type Dbv0039QosInfo struct {
	Meta *Dbv0039Meta `json:"meta,omitempty"`
	// Slurm warnings
	Warnings []Dbv0039Warning `json:"warnings,omitempty"`
	// Slurm errors
	Errors []Dbv0039Error `json:"errors,omitempty"`
	Qos []V0039Qos `json:"qos,omitempty"`
}

// NewDbv0039QosInfo instantiates a new Dbv0039QosInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0039QosInfo() *Dbv0039QosInfo {
	this := Dbv0039QosInfo{}
	return &this
}

// NewDbv0039QosInfoWithDefaults instantiates a new Dbv0039QosInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0039QosInfoWithDefaults() *Dbv0039QosInfo {
	this := Dbv0039QosInfo{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Dbv0039QosInfo) GetMeta() Dbv0039Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Dbv0039Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0039QosInfo) GetMetaOk() (*Dbv0039Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Dbv0039QosInfo) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Dbv0039Meta and assigns it to the Meta field.
func (o *Dbv0039QosInfo) SetMeta(v Dbv0039Meta) {
	o.Meta = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *Dbv0039QosInfo) GetWarnings() []Dbv0039Warning {
	if o == nil || IsNil(o.Warnings) {
		var ret []Dbv0039Warning
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0039QosInfo) GetWarningsOk() ([]Dbv0039Warning, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *Dbv0039QosInfo) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []Dbv0039Warning and assigns it to the Warnings field.
func (o *Dbv0039QosInfo) SetWarnings(v []Dbv0039Warning) {
	o.Warnings = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *Dbv0039QosInfo) GetErrors() []Dbv0039Error {
	if o == nil || IsNil(o.Errors) {
		var ret []Dbv0039Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0039QosInfo) GetErrorsOk() ([]Dbv0039Error, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *Dbv0039QosInfo) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Dbv0039Error and assigns it to the Errors field.
func (o *Dbv0039QosInfo) SetErrors(v []Dbv0039Error) {
	o.Errors = v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *Dbv0039QosInfo) GetQos() []V0039Qos {
	if o == nil || IsNil(o.Qos) {
		var ret []V0039Qos
		return ret
	}
	return o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0039QosInfo) GetQosOk() ([]V0039Qos, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *Dbv0039QosInfo) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given []V0039Qos and assigns it to the Qos field.
func (o *Dbv0039QosInfo) SetQos(v []V0039Qos) {
	o.Qos = v
}

func (o Dbv0039QosInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0039QosInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	return toSerialize, nil
}

type NullableDbv0039QosInfo struct {
	value *Dbv0039QosInfo
	isSet bool
}

func (v NullableDbv0039QosInfo) Get() *Dbv0039QosInfo {
	return v.value
}

func (v *NullableDbv0039QosInfo) Set(val *Dbv0039QosInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0039QosInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0039QosInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0039QosInfo(val *Dbv0039QosInfo) *NullableDbv0039QosInfo {
	return &NullableDbv0039QosInfo{value: val, isSet: true}
}

func (v NullableDbv0039QosInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0039QosInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


