/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037QosLimitsMaxAccruing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037QosLimitsMaxAccruing{}

// Dbv0037QosLimitsMaxAccruing Limits on accruing priority
type Dbv0037QosLimitsMaxAccruing struct {
	Per *Dbv0037QosLimitsMaxAccruingPer `json:"per,omitempty"`
}

// NewDbv0037QosLimitsMaxAccruing instantiates a new Dbv0037QosLimitsMaxAccruing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037QosLimitsMaxAccruing() *Dbv0037QosLimitsMaxAccruing {
	this := Dbv0037QosLimitsMaxAccruing{}
	return &this
}

// NewDbv0037QosLimitsMaxAccruingWithDefaults instantiates a new Dbv0037QosLimitsMaxAccruing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037QosLimitsMaxAccruingWithDefaults() *Dbv0037QosLimitsMaxAccruing {
	this := Dbv0037QosLimitsMaxAccruing{}
	return &this
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *Dbv0037QosLimitsMaxAccruing) GetPer() Dbv0037QosLimitsMaxAccruingPer {
	if o == nil || IsNil(o.Per) {
		var ret Dbv0037QosLimitsMaxAccruingPer
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037QosLimitsMaxAccruing) GetPerOk() (*Dbv0037QosLimitsMaxAccruingPer, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *Dbv0037QosLimitsMaxAccruing) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given Dbv0037QosLimitsMaxAccruingPer and assigns it to the Per field.
func (o *Dbv0037QosLimitsMaxAccruing) SetPer(v Dbv0037QosLimitsMaxAccruingPer) {
	o.Per = &v
}

func (o Dbv0037QosLimitsMaxAccruing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037QosLimitsMaxAccruing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	return toSerialize, nil
}

type NullableDbv0037QosLimitsMaxAccruing struct {
	value *Dbv0037QosLimitsMaxAccruing
	isSet bool
}

func (v NullableDbv0037QosLimitsMaxAccruing) Get() *Dbv0037QosLimitsMaxAccruing {
	return v.value
}

func (v *NullableDbv0037QosLimitsMaxAccruing) Set(val *Dbv0037QosLimitsMaxAccruing) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037QosLimitsMaxAccruing) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037QosLimitsMaxAccruing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037QosLimitsMaxAccruing(val *Dbv0037QosLimitsMaxAccruing) *NullableDbv0037QosLimitsMaxAccruing {
	return &NullableDbv0037QosLimitsMaxAccruing{value: val, isSet: true}
}

func (v NullableDbv0037QosLimitsMaxAccruing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037QosLimitsMaxAccruing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


