/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037AssociationMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037AssociationMax{}

// Dbv0037AssociationMax Max settings
type Dbv0037AssociationMax struct {
	Jobs *Dbv0037AssociationMaxJobs `json:"jobs,omitempty"`
	Per *Dbv0037AssociationMaxPer `json:"per,omitempty"`
	Tres *Dbv0037AssociationMaxTres `json:"tres,omitempty"`
}

// NewDbv0037AssociationMax instantiates a new Dbv0037AssociationMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037AssociationMax() *Dbv0037AssociationMax {
	this := Dbv0037AssociationMax{}
	return &this
}

// NewDbv0037AssociationMaxWithDefaults instantiates a new Dbv0037AssociationMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037AssociationMaxWithDefaults() *Dbv0037AssociationMax {
	this := Dbv0037AssociationMax{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *Dbv0037AssociationMax) GetJobs() Dbv0037AssociationMaxJobs {
	if o == nil || IsNil(o.Jobs) {
		var ret Dbv0037AssociationMaxJobs
		return ret
	}
	return *o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationMax) GetJobsOk() (*Dbv0037AssociationMaxJobs, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *Dbv0037AssociationMax) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given Dbv0037AssociationMaxJobs and assigns it to the Jobs field.
func (o *Dbv0037AssociationMax) SetJobs(v Dbv0037AssociationMaxJobs) {
	o.Jobs = &v
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *Dbv0037AssociationMax) GetPer() Dbv0037AssociationMaxPer {
	if o == nil || IsNil(o.Per) {
		var ret Dbv0037AssociationMaxPer
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationMax) GetPerOk() (*Dbv0037AssociationMaxPer, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *Dbv0037AssociationMax) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given Dbv0037AssociationMaxPer and assigns it to the Per field.
func (o *Dbv0037AssociationMax) SetPer(v Dbv0037AssociationMaxPer) {
	o.Per = &v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *Dbv0037AssociationMax) GetTres() Dbv0037AssociationMaxTres {
	if o == nil || IsNil(o.Tres) {
		var ret Dbv0037AssociationMaxTres
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037AssociationMax) GetTresOk() (*Dbv0037AssociationMaxTres, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *Dbv0037AssociationMax) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given Dbv0037AssociationMaxTres and assigns it to the Tres field.
func (o *Dbv0037AssociationMax) SetTres(v Dbv0037AssociationMaxTres) {
	o.Tres = &v
}

func (o Dbv0037AssociationMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037AssociationMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	return toSerialize, nil
}

type NullableDbv0037AssociationMax struct {
	value *Dbv0037AssociationMax
	isSet bool
}

func (v NullableDbv0037AssociationMax) Get() *Dbv0037AssociationMax {
	return v.value
}

func (v *NullableDbv0037AssociationMax) Set(val *Dbv0037AssociationMax) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037AssociationMax) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037AssociationMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037AssociationMax(val *Dbv0037AssociationMax) *NullableDbv0037AssociationMax {
	return &NullableDbv0037AssociationMax{value: val, isSet: true}
}

func (v NullableDbv0037AssociationMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037AssociationMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


