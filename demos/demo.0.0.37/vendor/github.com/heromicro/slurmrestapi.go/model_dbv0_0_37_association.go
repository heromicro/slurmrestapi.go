/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0037Association type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0037Association{}

// Dbv0037Association Association description
type Dbv0037Association struct {
	// is default association
	IsDefault *int32 `json:"is_default,omitempty"`
	// Assigned account
	Account *string `json:"account,omitempty"`
	// Assigned cluster
	Cluster *string `json:"cluster,omitempty"`
	Default *Dbv0037AssociationDefault `json:"default,omitempty"`
	// List of properties of association
	Flags []string `json:"flags,omitempty"`
	Max *Dbv0037AssociationMax `json:"max,omitempty"`
	Min *Dbv0037AssociationMin `json:"min,omitempty"`
	// Parent account name
	ParentAccount *string `json:"parent_account,omitempty"`
	// Assigned partition
	Partition *string `json:"partition,omitempty"`
	// Assigned priority
	Priority *int32 `json:"priority,omitempty"`
	// Assigned QOS
	Qos []string `json:"qos,omitempty"`
	// Raw fairshare shares
	SharesRaw *int32 `json:"shares_raw,omitempty"`
	Usage *Dbv0037AssociationUsage `json:"usage,omitempty"`
	// Assigned user
	User *string `json:"user,omitempty"`
}

// NewDbv0037Association instantiates a new Dbv0037Association object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0037Association() *Dbv0037Association {
	this := Dbv0037Association{}
	return &this
}

// NewDbv0037AssociationWithDefaults instantiates a new Dbv0037Association object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0037AssociationWithDefaults() *Dbv0037Association {
	this := Dbv0037Association{}
	return &this
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *Dbv0037Association) GetIsDefault() int32 {
	if o == nil || IsNil(o.IsDefault) {
		var ret int32
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetIsDefaultOk() (*int32, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Dbv0037Association) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given int32 and assigns it to the IsDefault field.
func (o *Dbv0037Association) SetIsDefault(v int32) {
	o.IsDefault = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Dbv0037Association) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Dbv0037Association) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *Dbv0037Association) SetAccount(v string) {
	o.Account = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Dbv0037Association) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Dbv0037Association) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Dbv0037Association) SetCluster(v string) {
	o.Cluster = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *Dbv0037Association) GetDefault() Dbv0037AssociationDefault {
	if o == nil || IsNil(o.Default) {
		var ret Dbv0037AssociationDefault
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetDefaultOk() (*Dbv0037AssociationDefault, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *Dbv0037Association) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given Dbv0037AssociationDefault and assigns it to the Default field.
func (o *Dbv0037Association) SetDefault(v Dbv0037AssociationDefault) {
	o.Default = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *Dbv0037Association) GetFlags() []string {
	if o == nil || IsNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *Dbv0037Association) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *Dbv0037Association) SetFlags(v []string) {
	o.Flags = v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *Dbv0037Association) GetMax() Dbv0037AssociationMax {
	if o == nil || IsNil(o.Max) {
		var ret Dbv0037AssociationMax
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetMaxOk() (*Dbv0037AssociationMax, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *Dbv0037Association) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given Dbv0037AssociationMax and assigns it to the Max field.
func (o *Dbv0037Association) SetMax(v Dbv0037AssociationMax) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *Dbv0037Association) GetMin() Dbv0037AssociationMin {
	if o == nil || IsNil(o.Min) {
		var ret Dbv0037AssociationMin
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetMinOk() (*Dbv0037AssociationMin, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *Dbv0037Association) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given Dbv0037AssociationMin and assigns it to the Min field.
func (o *Dbv0037Association) SetMin(v Dbv0037AssociationMin) {
	o.Min = &v
}

// GetParentAccount returns the ParentAccount field value if set, zero value otherwise.
func (o *Dbv0037Association) GetParentAccount() string {
	if o == nil || IsNil(o.ParentAccount) {
		var ret string
		return ret
	}
	return *o.ParentAccount
}

// GetParentAccountOk returns a tuple with the ParentAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetParentAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ParentAccount) {
		return nil, false
	}
	return o.ParentAccount, true
}

// HasParentAccount returns a boolean if a field has been set.
func (o *Dbv0037Association) HasParentAccount() bool {
	if o != nil && !IsNil(o.ParentAccount) {
		return true
	}

	return false
}

// SetParentAccount gets a reference to the given string and assigns it to the ParentAccount field.
func (o *Dbv0037Association) SetParentAccount(v string) {
	o.ParentAccount = &v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *Dbv0037Association) GetPartition() string {
	if o == nil || IsNil(o.Partition) {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetPartitionOk() (*string, bool) {
	if o == nil || IsNil(o.Partition) {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *Dbv0037Association) HasPartition() bool {
	if o != nil && !IsNil(o.Partition) {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *Dbv0037Association) SetPartition(v string) {
	o.Partition = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *Dbv0037Association) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *Dbv0037Association) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *Dbv0037Association) SetPriority(v int32) {
	o.Priority = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *Dbv0037Association) GetQos() []string {
	if o == nil || IsNil(o.Qos) {
		var ret []string
		return ret
	}
	return o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetQosOk() ([]string, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *Dbv0037Association) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given []string and assigns it to the Qos field.
func (o *Dbv0037Association) SetQos(v []string) {
	o.Qos = v
}

// GetSharesRaw returns the SharesRaw field value if set, zero value otherwise.
func (o *Dbv0037Association) GetSharesRaw() int32 {
	if o == nil || IsNil(o.SharesRaw) {
		var ret int32
		return ret
	}
	return *o.SharesRaw
}

// GetSharesRawOk returns a tuple with the SharesRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetSharesRawOk() (*int32, bool) {
	if o == nil || IsNil(o.SharesRaw) {
		return nil, false
	}
	return o.SharesRaw, true
}

// HasSharesRaw returns a boolean if a field has been set.
func (o *Dbv0037Association) HasSharesRaw() bool {
	if o != nil && !IsNil(o.SharesRaw) {
		return true
	}

	return false
}

// SetSharesRaw gets a reference to the given int32 and assigns it to the SharesRaw field.
func (o *Dbv0037Association) SetSharesRaw(v int32) {
	o.SharesRaw = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *Dbv0037Association) GetUsage() Dbv0037AssociationUsage {
	if o == nil || IsNil(o.Usage) {
		var ret Dbv0037AssociationUsage
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetUsageOk() (*Dbv0037AssociationUsage, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *Dbv0037Association) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given Dbv0037AssociationUsage and assigns it to the Usage field.
func (o *Dbv0037Association) SetUsage(v Dbv0037AssociationUsage) {
	o.Usage = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Dbv0037Association) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0037Association) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Dbv0037Association) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *Dbv0037Association) SetUser(v string) {
	o.User = &v
}

func (o Dbv0037Association) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0037Association) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.ParentAccount) {
		toSerialize["parent_account"] = o.ParentAccount
	}
	if !IsNil(o.Partition) {
		toSerialize["partition"] = o.Partition
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.SharesRaw) {
		toSerialize["shares_raw"] = o.SharesRaw
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableDbv0037Association struct {
	value *Dbv0037Association
	isSet bool
}

func (v NullableDbv0037Association) Get() *Dbv0037Association {
	return v.value
}

func (v *NullableDbv0037Association) Set(val *Dbv0037Association) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0037Association) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0037Association) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0037Association(val *Dbv0037Association) *NullableDbv0037Association {
	return &NullableDbv0037Association{value: val, isSet: true}
}

func (v NullableDbv0037Association) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0037Association) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


