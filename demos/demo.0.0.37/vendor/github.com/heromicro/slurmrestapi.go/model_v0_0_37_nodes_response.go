/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.37
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0037NodesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0037NodesResponse{}

// V0037NodesResponse struct for V0037NodesResponse
type V0037NodesResponse struct {
	// slurm errors
	Errors []V0037Error `json:"errors,omitempty"`
	// nodes info
	Nodes []V0037Node `json:"nodes,omitempty"`
}

// NewV0037NodesResponse instantiates a new V0037NodesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0037NodesResponse() *V0037NodesResponse {
	this := V0037NodesResponse{}
	return &this
}

// NewV0037NodesResponseWithDefaults instantiates a new V0037NodesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0037NodesResponseWithDefaults() *V0037NodesResponse {
	this := V0037NodesResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V0037NodesResponse) GetErrors() []V0037Error {
	if o == nil || IsNil(o.Errors) {
		var ret []V0037Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037NodesResponse) GetErrorsOk() ([]V0037Error, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V0037NodesResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V0037Error and assigns it to the Errors field.
func (o *V0037NodesResponse) SetErrors(v []V0037Error) {
	o.Errors = v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0037NodesResponse) GetNodes() []V0037Node {
	if o == nil || IsNil(o.Nodes) {
		var ret []V0037Node
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037NodesResponse) GetNodesOk() ([]V0037Node, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0037NodesResponse) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []V0037Node and assigns it to the Nodes field.
func (o *V0037NodesResponse) SetNodes(v []V0037Node) {
	o.Nodes = v
}

func (o V0037NodesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0037NodesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	return toSerialize, nil
}

type NullableV0037NodesResponse struct {
	value *V0037NodesResponse
	isSet bool
}

func (v NullableV0037NodesResponse) Get() *V0037NodesResponse {
	return v.value
}

func (v *NullableV0037NodesResponse) Set(val *V0037NodesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV0037NodesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV0037NodesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0037NodesResponse(val *V0037NodesResponse) *NullableV0037NodesResponse {
	return &NullableV0037NodesResponse{value: val, isSet: true}
}

func (v NullableV0037NodesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0037NodesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


