/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039PartitionInfoMaximums type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039PartitionInfoMaximums{}

// V0039PartitionInfoMaximums struct for V0039PartitionInfoMaximums
type V0039PartitionInfoMaximums struct {
	CpusPerNode *V0039Uint32NoVal `json:"cpus_per_node,omitempty"`
	CpusPerSocket *V0039Uint32NoVal `json:"cpus_per_socket,omitempty"`
	MemoryPerCpu *int64 `json:"memory_per_cpu,omitempty"`
	Nodes *V0039Uint32NoVal `json:"nodes,omitempty"`
	Shares *int32 `json:"shares,omitempty"`
	Time *V0039Uint32NoVal `json:"time,omitempty"`
	OverTimeLimit *V0039Uint16NoVal `json:"over_time_limit,omitempty"`
}

// NewV0039PartitionInfoMaximums instantiates a new V0039PartitionInfoMaximums object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039PartitionInfoMaximums() *V0039PartitionInfoMaximums {
	this := V0039PartitionInfoMaximums{}
	return &this
}

// NewV0039PartitionInfoMaximumsWithDefaults instantiates a new V0039PartitionInfoMaximums object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039PartitionInfoMaximumsWithDefaults() *V0039PartitionInfoMaximums {
	this := V0039PartitionInfoMaximums{}
	return &this
}

// GetCpusPerNode returns the CpusPerNode field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetCpusPerNode() V0039Uint32NoVal {
	if o == nil || IsNil(o.CpusPerNode) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.CpusPerNode
}

// GetCpusPerNodeOk returns a tuple with the CpusPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetCpusPerNodeOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.CpusPerNode) {
		return nil, false
	}
	return o.CpusPerNode, true
}

// HasCpusPerNode returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasCpusPerNode() bool {
	if o != nil && !IsNil(o.CpusPerNode) {
		return true
	}

	return false
}

// SetCpusPerNode gets a reference to the given V0039Uint32NoVal and assigns it to the CpusPerNode field.
func (o *V0039PartitionInfoMaximums) SetCpusPerNode(v V0039Uint32NoVal) {
	o.CpusPerNode = &v
}

// GetCpusPerSocket returns the CpusPerSocket field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetCpusPerSocket() V0039Uint32NoVal {
	if o == nil || IsNil(o.CpusPerSocket) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.CpusPerSocket
}

// GetCpusPerSocketOk returns a tuple with the CpusPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetCpusPerSocketOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.CpusPerSocket) {
		return nil, false
	}
	return o.CpusPerSocket, true
}

// HasCpusPerSocket returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasCpusPerSocket() bool {
	if o != nil && !IsNil(o.CpusPerSocket) {
		return true
	}

	return false
}

// SetCpusPerSocket gets a reference to the given V0039Uint32NoVal and assigns it to the CpusPerSocket field.
func (o *V0039PartitionInfoMaximums) SetCpusPerSocket(v V0039Uint32NoVal) {
	o.CpusPerSocket = &v
}

// GetMemoryPerCpu returns the MemoryPerCpu field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetMemoryPerCpu() int64 {
	if o == nil || IsNil(o.MemoryPerCpu) {
		var ret int64
		return ret
	}
	return *o.MemoryPerCpu
}

// GetMemoryPerCpuOk returns a tuple with the MemoryPerCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetMemoryPerCpuOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryPerCpu) {
		return nil, false
	}
	return o.MemoryPerCpu, true
}

// HasMemoryPerCpu returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasMemoryPerCpu() bool {
	if o != nil && !IsNil(o.MemoryPerCpu) {
		return true
	}

	return false
}

// SetMemoryPerCpu gets a reference to the given int64 and assigns it to the MemoryPerCpu field.
func (o *V0039PartitionInfoMaximums) SetMemoryPerCpu(v int64) {
	o.MemoryPerCpu = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetNodes() V0039Uint32NoVal {
	if o == nil || IsNil(o.Nodes) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetNodesOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given V0039Uint32NoVal and assigns it to the Nodes field.
func (o *V0039PartitionInfoMaximums) SetNodes(v V0039Uint32NoVal) {
	o.Nodes = &v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetShares() int32 {
	if o == nil || IsNil(o.Shares) {
		var ret int32
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetSharesOk() (*int32, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given int32 and assigns it to the Shares field.
func (o *V0039PartitionInfoMaximums) SetShares(v int32) {
	o.Shares = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetTime() V0039Uint32NoVal {
	if o == nil || IsNil(o.Time) {
		var ret V0039Uint32NoVal
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetTimeOk() (*V0039Uint32NoVal, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given V0039Uint32NoVal and assigns it to the Time field.
func (o *V0039PartitionInfoMaximums) SetTime(v V0039Uint32NoVal) {
	o.Time = &v
}

// GetOverTimeLimit returns the OverTimeLimit field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetOverTimeLimit() V0039Uint16NoVal {
	if o == nil || IsNil(o.OverTimeLimit) {
		var ret V0039Uint16NoVal
		return ret
	}
	return *o.OverTimeLimit
}

// GetOverTimeLimitOk returns a tuple with the OverTimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetOverTimeLimitOk() (*V0039Uint16NoVal, bool) {
	if o == nil || IsNil(o.OverTimeLimit) {
		return nil, false
	}
	return o.OverTimeLimit, true
}

// HasOverTimeLimit returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasOverTimeLimit() bool {
	if o != nil && !IsNil(o.OverTimeLimit) {
		return true
	}

	return false
}

// SetOverTimeLimit gets a reference to the given V0039Uint16NoVal and assigns it to the OverTimeLimit field.
func (o *V0039PartitionInfoMaximums) SetOverTimeLimit(v V0039Uint16NoVal) {
	o.OverTimeLimit = &v
}

func (o V0039PartitionInfoMaximums) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039PartitionInfoMaximums) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpusPerNode) {
		toSerialize["cpus_per_node"] = o.CpusPerNode
	}
	if !IsNil(o.CpusPerSocket) {
		toSerialize["cpus_per_socket"] = o.CpusPerSocket
	}
	if !IsNil(o.MemoryPerCpu) {
		toSerialize["memory_per_cpu"] = o.MemoryPerCpu
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.OverTimeLimit) {
		toSerialize["over_time_limit"] = o.OverTimeLimit
	}
	return toSerialize, nil
}

type NullableV0039PartitionInfoMaximums struct {
	value *V0039PartitionInfoMaximums
	isSet bool
}

func (v NullableV0039PartitionInfoMaximums) Get() *V0039PartitionInfoMaximums {
	return v.value
}

func (v *NullableV0039PartitionInfoMaximums) Set(val *V0039PartitionInfoMaximums) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039PartitionInfoMaximums) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039PartitionInfoMaximums) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039PartitionInfoMaximums(val *V0039PartitionInfoMaximums) *NullableV0039PartitionInfoMaximums {
	return &NullableV0039PartitionInfoMaximums{value: val, isSet: true}
}

func (v NullableV0039PartitionInfoMaximums) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039PartitionInfoMaximums) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


