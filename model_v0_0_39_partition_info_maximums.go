/*
Slurm Rest API

API to access and control Slurm.

API version: 0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0039PartitionInfoMaximums type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039PartitionInfoMaximums{}

// V0039PartitionInfoMaximums struct for V0039PartitionInfoMaximums
type V0039PartitionInfoMaximums struct {
	OverTimeLimit *V0039Uint16NoVal `json:"over_time_limit,omitempty"`
}

// NewV0039PartitionInfoMaximums instantiates a new V0039PartitionInfoMaximums object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039PartitionInfoMaximums() *V0039PartitionInfoMaximums {
	this := V0039PartitionInfoMaximums{}
	return &this
}

// NewV0039PartitionInfoMaximumsWithDefaults instantiates a new V0039PartitionInfoMaximums object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039PartitionInfoMaximumsWithDefaults() *V0039PartitionInfoMaximums {
	this := V0039PartitionInfoMaximums{}
	return &this
}

// GetOverTimeLimit returns the OverTimeLimit field value if set, zero value otherwise.
func (o *V0039PartitionInfoMaximums) GetOverTimeLimit() V0039Uint16NoVal {
	if o == nil || IsNil(o.OverTimeLimit) {
		var ret V0039Uint16NoVal
		return ret
	}
	return *o.OverTimeLimit
}

// GetOverTimeLimitOk returns a tuple with the OverTimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039PartitionInfoMaximums) GetOverTimeLimitOk() (*V0039Uint16NoVal, bool) {
	if o == nil || IsNil(o.OverTimeLimit) {
		return nil, false
	}
	return o.OverTimeLimit, true
}

// HasOverTimeLimit returns a boolean if a field has been set.
func (o *V0039PartitionInfoMaximums) HasOverTimeLimit() bool {
	if o != nil && !IsNil(o.OverTimeLimit) {
		return true
	}

	return false
}

// SetOverTimeLimit gets a reference to the given V0039Uint16NoVal and assigns it to the OverTimeLimit field.
func (o *V0039PartitionInfoMaximums) SetOverTimeLimit(v V0039Uint16NoVal) {
	o.OverTimeLimit = &v
}

func (o V0039PartitionInfoMaximums) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039PartitionInfoMaximums) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OverTimeLimit) {
		toSerialize["over_time_limit"] = o.OverTimeLimit
	}
	return toSerialize, nil
}

type NullableV0039PartitionInfoMaximums struct {
	value *V0039PartitionInfoMaximums
	isSet bool
}

func (v NullableV0039PartitionInfoMaximums) Get() *V0039PartitionInfoMaximums {
	return v.value
}

func (v *NullableV0039PartitionInfoMaximums) Set(val *V0039PartitionInfoMaximums) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039PartitionInfoMaximums) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039PartitionInfoMaximums) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039PartitionInfoMaximums(val *V0039PartitionInfoMaximums) *NullableV0039PartitionInfoMaximums {
	return &NullableV0039PartitionInfoMaximums{value: val, isSet: true}
}

func (v NullableV0039PartitionInfoMaximums) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039PartitionInfoMaximums) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


