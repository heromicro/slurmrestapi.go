/*
Slurm Rest API

API to access and control Slurm.

API version: Slurm-23.11.1&openapi/v0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.38&openapi/dbv0.0.38&openapi/dbv0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the Dbv0038JobArrayLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dbv0038JobArrayLimits{}

// Dbv0038JobArrayLimits Limits on array settings
type Dbv0038JobArrayLimits struct {
	Max *Dbv0038JobArrayLimitsMax `json:"max,omitempty"`
}

// NewDbv0038JobArrayLimits instantiates a new Dbv0038JobArrayLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDbv0038JobArrayLimits() *Dbv0038JobArrayLimits {
	this := Dbv0038JobArrayLimits{}
	return &this
}

// NewDbv0038JobArrayLimitsWithDefaults instantiates a new Dbv0038JobArrayLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDbv0038JobArrayLimitsWithDefaults() *Dbv0038JobArrayLimits {
	this := Dbv0038JobArrayLimits{}
	return &this
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *Dbv0038JobArrayLimits) GetMax() Dbv0038JobArrayLimitsMax {
	if o == nil || IsNil(o.Max) {
		var ret Dbv0038JobArrayLimitsMax
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dbv0038JobArrayLimits) GetMaxOk() (*Dbv0038JobArrayLimitsMax, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *Dbv0038JobArrayLimits) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given Dbv0038JobArrayLimitsMax and assigns it to the Max field.
func (o *Dbv0038JobArrayLimits) SetMax(v Dbv0038JobArrayLimitsMax) {
	o.Max = &v
}

func (o Dbv0038JobArrayLimits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dbv0038JobArrayLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

type NullableDbv0038JobArrayLimits struct {
	value *Dbv0038JobArrayLimits
	isSet bool
}

func (v NullableDbv0038JobArrayLimits) Get() *Dbv0038JobArrayLimits {
	return v.value
}

func (v *NullableDbv0038JobArrayLimits) Set(val *Dbv0038JobArrayLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableDbv0038JobArrayLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableDbv0038JobArrayLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDbv0038JobArrayLimits(val *Dbv0038JobArrayLimits) *NullableDbv0038JobArrayLimits {
	return &NullableDbv0038JobArrayLimits{value: val, isSet: true}
}

func (v NullableDbv0038JobArrayLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDbv0038JobArrayLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


